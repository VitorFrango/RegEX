{
  "course_version" : 1,
  "environment" : "GoogleTest",
  "summary" : "The course is designed for beginners who want to learn the basics of the C/C++ language. <br>\n<p> The main goal of the course is to introduce the C++ language, its philosophy of zero-cost abstractions; its distinctive features compared to other languages, and, in particular, manual memory management, and its areas of use, such as high-performance applications, graphics, and system programming. After successfully completing this course, you will be able to read and write C++ code and develop your own programs of medium complexity. </p>\n<p> During this course, you will be developing a simple 2D arcade game. In this game, the player controls a planet that moves through space, consuming smaller asteroids and dodging black holes. With each new topic covered, you will improve the game by implementing new functionality based on the concepts you have learned. In the end, you will get a working game, which you can further modify as you like. </p>\n<p> Some of the topics covered in the course are listed below. <ul> <li> Basic programming primitives in C++. </li> <li> Manual memory management. </li> <li> Object-oriented programming in C++. </li> <li> Template meta-programming and functional programming features of C++. </li> <li> Overview of the standard library. </li> <li> Multi-file projects and program compilation process overview. </li> </ul> </p>\n<p> The released part of the course covers C++ basic programming primitives. Stay tuned for more parts of our course coming soon! </p>\n<p> Before starting this course, check the following requirements. <ol> <li> Your computer needs to have a stable internet connection. </li> <li> <a href=\"https://git-scm.com/\"> Git </a> version control system needs to be installed on your computer. </li> <li> Make sure that the path to the root folder of the course does not contain spaces, special characters, or non-latin characters. </li> </ol> </p>\n<p> The course is integrated into the <a href=\"https://www.jetbrains.com/clion/\"> CLion IDE </a>, which has only a commercial license. You may request a trial license in order to complete the course. If you have already used your trial license before, please contact us at <a href=\"mailto:education@jetbrains.com\">education@jetbrains.com</a>. </p> ",
  "title" : "C++Basics",
  "programming_language" : "ObjectiveC",
  "language" : "en",
  "course_type" : "Marketplace",
  "vendor" : {
    "name" : "JetBrains",
    "email" : "support@jetbrains.com",
    "url" : "https://www.jetbrains.com/"
  },
  "items" : [
    {
      "id" : 612228753,
      "title" : "WarmUp",
      "custom_name" : "Warm Up",
      "items" : [
        {
          "id" : 971729525,
          "title" : "HelloWorld",
          "custom_name" : "Hello World!",
          "task_list" : [
            {
              "id" : 917349429,
              "name" : "Welcome",
              "custom_name" : "Welcome",
              "files" : {
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHrfkenaiLJ9xzFHMa7NoBw5ahEajbnMxFjjfwXQjNKyblTIweQX3c/+RTC9YflOmC5pjuBBauwoX375OUfrtEo6Q+igYVQwdPri1W58DvBWyH0TaakHzWu4oSizSfY+bAE9r9kfT+d42Wz35e2vWDFyA=="
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "9HEd8zkvNQRoCO6WiLdN7C0ZfdApwpl0ZoXlifAfmSrGUYzv6mf/Gp4TUmHv62XSZD0oSg8tP+bwaxRGF/91PA=="
                }
              },
              "description_text" : "## Welcome to the C++ Basics course!\n\nIn this course, you are going to learn the fundamentals of this \ntruly powerful language. \nAs you may know, with great power comes great responsibility. \nIn the case of C++, the responsibility lies on the programmer, that is, on you! \nThus, you will learn not only how to use the C++ language, \nbut also how some of its features work under the hood\nin order to use them properly in your daily routine.\n\nWhile doing so, you will also learn to work with the [Clion IDE](https://www.jetbrains.com/clion/) â€“\na powerful tool that will help you to write and edit C++ code, \nnavigate through the codebase, spot the errors in it, and do much more.\nOccasionally, we will explicitly mention some IDE features during the course;\nhowever, we recommend that you also explore \n[CLion learning materials](https://www.jetbrains.com/clion/learn/) \nby yourself. You can find there many useful tips and tricks that will make \nyour programming experience much more pleasant.",
              "description_format" : "MD",
              "task_type" : "theory"
            },
            {
              "id" : 2132052242,
              "name" : "FirstWords",
              "custom_name" : "First Words",
              "files" : {
                "test/output.txt" : {
                  "name" : "test/output.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "hSZkLxENJwijjf/YojlonQ=="
                },
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHrfkenaiLJ9xzFHMa7NoBw5TzVISF8JyUnTRY086RuywIrK5keyFweSZFusglsmwHhHfYEAiHBrQF+k8FVALxUTdX0CUoQGmFW03tWTDmh9Rge5H7zlZOVzMRYh8guACimvZvtCFQtk6341hZdudaotQ=="
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [
                    {
                      "offset" : 38,
                      "length" : 10,
                      "possible_answer" : "d8UH81JQxxEhK0gFMKMx6Ill7QzO5Vkb2kxe4uRzfLA=",
                      "placeholder_text" : "/* TODO */"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "G1EDRCp8K72w6UaV30vFpD7gGkRO1+zCMoAJbb21aDMFSb9ilbEvEXVrYCP0VOoo0egx3SyEmjpHP3R851z9d1NcFpIGHfgCQqlAtorQtz0="
                }
              },
              "description_text" : "## Your first \"Hello Words\" in C++ \n \nLet's start our journey into C++ with something simple. \nLet's write a program that will say \"Hello World!\"\n\nIn C++, the entry point to the program is a distinguished function named `main`. \nYour task is to add code to this function so that it will print the string \"Hello World!\"\n\nTo print something in C++, one can use the following syntax:\n\n```c++\nstd::cout << \"Text to be printed\";\n```\n",
              "description_format" : "MD",
              "task_type" : "output"
            },
            {
              "id" : 862067153,
              "name" : "IntroduceYourself",
              "custom_name" : "Introduce Yourself",
              "files" : {
                "test/output.txt" : {
                  "name" : "test/output.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "yyAm/Igeh1ITOYCCPr6LQw=="
                },
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHrfkenaiLJ9xzFHMa7NoBw5bwb5qUWLIbKCKxGQ44alxlDu29GzpoW9W2hSMm25Ii2ywgfc/WI4MeE24QG3Sd1F+HpWtF3QLPmjy5mLdTZ59CVRXmfPKHKSKz+YWi2sVGOTOneNYMNIrjTHPmg83gCiQ=="
                },
                "test/input.txt" : {
                  "name" : "test/input.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "GKZQ+YmPCjPJ6bMAqM8Y6A=="
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [
                    {
                      "offset" : 78,
                      "length" : 10,
                      "possible_answer" : "HcNcq/fMif5mNxEEDDKVcqp+ho920GNZ71fRR4BmOqhunrU6HIWQCVshOGi7eADy/z1wsk+2j6I3M84dFSYQkg==",
                      "placeholder_text" : "/* TODO */"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "G1EDRCp8K72w6UaV30vFpI1uJtNYv2m0HRLE7pSiNzGrSEVGYefK3+wt4zhek5WdKwvvg6WVoL4rrzaeKajE7qZg7vK0G4uhG04DmoXtH15f/4q88pwQ5DnGr3Q9biavEUcf0lzE1njUIZIpWHe63Q=="
                }
              },
              "description_text" : "## Introduce Yourself!\n \nOk, we hope that was easy. \nNext, we invite you to introduce yourself!\n\nWrite a simple program that will ask the name of a person\nand then print the string \"Hello Username\" \n(where \"Username\" should be substituted by the actual name given to the program).\n\nTo do this, you will need to learn a few other words in C++.\n\nFirst, you will need to use a _variable_ to store the name of the user. \nA suitable variable is already declared in the template solution. \n\n```c++\nstd::string name;\n```\n\nNext, to input some data into a C++ program, use the following syntax:\n\n```c++\nstd::cin >> x;\n```\n\nwhere `x` is the variable you want to fill with data.\n\nIn order to print several strings, \njust list them consequently and separate by `<<`.\n\n```c++\nstd::cout << \"Hello \" << \"World!\";\n```\n\nYou can print variables using the same syntax as for printing strings.\n\nNote that all of the above lines of code end with `;`.\nIn fact, a C++ program consists of _statements_, \nthat is individual computation steps.\nSemicolon `;` signifies the end of a statement.\nYou can build your program from individual statements \nusing `;` to separate them. It is recommended to put each \nstatement on a separate line.",
              "description_format" : "MD",
              "task_type" : "output"
            },
            {
              "id" : 1250506189,
              "name" : "AgeDoestNotMatter",
              "custom_name" : "Age Does Not Matter",
              "files" : {
                "test/output.txt" : {
                  "name" : "test/output.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "7yUp2Y85VKwpKHnMSDy8ij7PNbnBZv/OPkqj3krZsg9wF+aMinizNKN2XZTZgj9W4FT7tPWPXP+AX3OArSOzAA=="
                },
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHrfkenaiLJ9xzFHMa7NoBw5VhAVndFfScEgVfXUruesdAQxtDDfMhaj2hsEg2z7UmLMARGLlYeio0++pw8Pbb/EAIcT0EyYUHfKx4Xb/594FlvS2mlti896tUETXH/R47nZmDWGrQ3TyBM5qPBw3DF/g=="
                },
                "test/input.txt" : {
                  "name" : "test/input.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "l+YtRAUJ47IvuM9BwU5y2w=="
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [
                    {
                      "offset" : 147,
                      "length" : 10,
                      "possible_answer" : "HcNcq/fMif5mNxEEDDKVcrcuuWNEMt1aVqk/cF1ttoU=",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 213,
                      "length" : 10,
                      "possible_answer" : "YdHlJKrHwXknbeLzU1UAnpiYlo9NhGds7farGKjEr08=",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 229,
                      "length" : 10,
                      "possible_answer" : "d8UH81JQxxEhK0gFMKMx6M+VXq5lT6D+W5Z0nk+pxYDU0VZ5oe6aEAYZR8eKw3u2+vSuPwSaRLOxcMluh1HSfQ==",
                      "placeholder_text" : "/* TODO */"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "G1EDRCp8K72w6UaV30vFpI1uJtNYv2m0HRLE7pSiNzGrSEVGYefK3+wt4zhek5WdKwvvg6WVoL4rrzaeKajE7g4vvHq51/QSW+LHzjbeEO3yUunqUwwak0VqgzC8TClpYtYN2CQDJdPV7lLe/9NQqXcoIPW+jnGEA/ORjJRPzt6h+jvZJ1kQQlp+UKwuDrfjls1yZSEDjSGvbi5Axd2A4/lbvTymvTn/HnDNjsNCnLq2OlLTp+p3YniPOOoTJmeBHW1QgaG67Qj4V2kY+vWL5HaTVnNjPM9SIMV/4WBM+AZMA8wgKqfAGapMQnvufQbfbz2MVUaz8J1h/BYiORqwnCNn0GrzddGNd2GhZR9ZBvQ="
                }
              },
              "description_text" : "## Age does not matter!\n \nAs a final quiz in this lesson, we kindly ask you \nto write another program.\nIn addition to the person's name, \nthis program  should ask about their age. \nThe program should print \"Hello Username\" \nand then \"Age\" on the next line, \nwhere \"Username\" and \"Age\" should be substituted by the actual \ndata given to the program.\n \nThe age of a person is an integer value, so \nwe will store it in a variable of type `int`. \n\n```c++\nint age = 0;\n```\n\nIn order to finish a line and go to the next one, you need \nto supply a special value `std::endl` (read as endline)\nto `std::cout`.\n\n```c++\nstd::cout << \"Hello\" << std::endl << \"World\";\n// World will be printed on the second line. \n```\n",
              "description_format" : "MD",
              "task_type" : "output"
            },
            {
              "id" : 1015335821,
              "name" : "TypesOfVariables",
              "custom_name" : "Types of Variables",
              "files" : {
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHrfkenaiLJ9xzFHMa7NoBw5UmjG8/UlqaktPUHqJltpcE9+Guxp5YLHDPZM/NWj2kOGfXgxZiV2UTNjHS34HGh3C/3Q14ocIrNPgLbbQclP93TTPdYY6NdhDYlo/QZV6PsPJ3odeMiQfGalhRD9v5iAQ=="
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "G1EDRCp8K72w6UaV30vFpD7gGkRO1+zCMoAJbb21aDMHb4u0y2dIFbjT6BaocplDaykbyRDXzJM6o0rgXHQtJ2gfnts2qEWuAp/Qk8upsEZ9fC1rHtOlUHKd4Fv+ncLCUSit4w0RqNhnd+5+d+PUug=="
                }
              },
              "description_text" : "## On types of variables in C++\n\nBefore moving forward, we need to make a few \ntheoretical remarks about the C++ language.\n\nC++ is a [statically-typed language](https://en.wikipedia.org/wiki/Type_system). \nIt means that each variable in this language \nhas a fixed type, which should be known statically, \nthat is, before the program is run.\nThe type of the variable determines the set of values it can take\nand the set of operations that can be performed on this variable.\n\nIn C++, all the variables should be \n[*declared*](https://en.cppreference.com/w/cpp/language/declarations#Simple_declaration) before they can be used.\nThe declaration of a variable should specify its *type* and *name*.\nFor example, the following code snippet declares a variable\nof type `std::string` with the name `x`. \n\n```c++\nstd::string x;\n``` \n\nUpon declaration, each variable can be \n[*initialized*](https://en.cppreference.com/w/cpp/language/initialization) \nwith some value of a suitable type. For example, the following code snippet \ninitializes a variable of type int with the value `42`.\n\n```c++\nint x = 42;\n``` \n \nIf the variable is uninitialized, then its value before \nthe point of its first assignment is *undefined*.\nUninitialized variables are unpleasant errors\n(also known as *bugs*) in programs.\nThus, it is very **important** to **always** initialize variables\n(there might be some rare exceptions to this rule, \nwhich we are not going to discuss now).\n\n```c++\n// x is initialized, good practice!\nint x = 0;\n// y is uninitialized, bad practice!\nint y;\n// because the value of y is undefined, \n// z can be anything: 0, -1000, 745912, ...\nint z = y;\n``` \n\nYou can try running the program attached to this task \nin the [release configuration](https://www.jetbrains.com/clion/features/run-and-debug.html)\nmultiple times to see that the value of the variable `z` \ncan change between invocations.\n\nWith that being said, we should also note that variables \nof some types are actually initialized by default to some predefined value. \nAn example of such type is `std::string`. \nVariables of this type are initialized with an empty string `\"\"`\nautomatically upon declaration, and thus they do not require \nmanual initialization, except if you want to initialize them \nwith some other value.\n\nWe will learn more about types in C++ later in this course.  \nFor now, you will need to remember a few basic types \nthat we will work with in the following lessons.\n\n| Type          | Description                                                | Example of values       | Initialized |\n|---------------|------------------------------------------------------------|-------------------------|-------------|\n| `int`         | integer numbers                                            | `0`, `1`, `123`, `-20`  | No          |\n| `float`       | floating-point numbers                                     | `0.1`, `3.14`, `1.7e10` | No          |\n| `bool`        | boolean values                                             | `true`, `false`         | No          |\n| `char`        | characters in [ASCII](https://en.wikipedia.org/wiki/ASCII) | `'a'`, `'b'`, `'1'`     | No          |\n| `std::string` | strings                                                    | `\"hello\"`, `\"C++\"`      | Yes: `\"\"`   |\n\n",
              "description_format" : "MD",
              "task_type" : "theory"
            }
          ],
          "type" : "lesson"
        },
        {
          "title" : "MovingOn",
          "custom_name" : "Moving On",
          "task_list" : [
            {
              "id" : 1441809230,
              "name" : "StartTheGame",
              "custom_name" : "Start the Game",
              "files" : {
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHroufJeVaYOqcsRPgGzljZQcV9/ae241m921h4ZJjsvu3eZ1dcyN1XHdEnUaOOtxp8FCt3LqNsMilulGGEqO9J+1y8R1Yz4BN417Gyr+SIrxrBGgygJCD0Npv0+vWsy7U05vlqQSseK9i7U+42rlYqgeW0F/9WRF414Y3zM3115mV3DHbMJYx0W6t++YrmtaU0gLWolomVKURB4qkPquPOzrv59u78XF0FnqxG/vTBkRfa+rmuUQYhfbaC9URgjiUWuAyuDMsdBlkvRx0/4GB5JMdG0oY84/D42LOMw9mFLUM=",
                  "is_editable" : false
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "G1EDRCp8K72w6UaV30vFpNZ6LwLDtgnXASdBL+4JU5DrnpkNIkD96uimsD1B6oy+UIVytWY4cbX0aHQ5yayBP7rhHHqNGhBOLu32rIe+yraqdwKkMayo7/1E/kxkChh9c+DiN5nvXaoDrVangAbkfteNVybg/F0KGxisSemzfBtVzwRsArmIOX+phRq4Sv0Wj7VT/hshtClfgjzcH2daepXHTMP0drxgl8mLh4a1JCAvvKEDHiPBSUY6DvuknHsUxP/jeQ4MxE02uA6eN++RhFuE+heaZ1MvqvMR9CoeIQ2ecSmA3xrMfWzxeKIbYp3TNq7jNWj1sZBkQ0+D5g+ssscoPTnF+QbXtf6nVssWpOIH2pghRAJAPh6e5B6YEfspyK8qAlLep+2Fcu9L6UNW/c6I8bHqoxm0mQolBI8RmOauAhkrqf+f1dceZ7CQ7xYKgRMFuhV+84QikSc+QNIzyZInwXvJF7Fnnmag4ipizwXnz6oQB0zTZTlfv+gBvVDc8QBACkOzmbGVhC5fpx6SGQ15Ums5utq19eNLrIjFDCC9x4DZnopul/Fqu4bGd9gONNrVTweqT8oMyT79CC4xyuBbFUwLuNkv8NGHnnXUGotfq6daMmetp+DYv6mfCTSPQ8shySFodwRaelsaAxBocn8CGYq83DhcrfKWQM7Ibgnc8J6t0I3lkO7Bmoqr7/5IW2aK6yvDUizWlntPIc5XA3q9yj3gMkXSkDVJg1KqQjDNB3uaYqYwH6ou2jEXy1Lh6o6xlohkTts70555UZc3mMppUCUPWQ1qmnnCQZI66cDlVva6Kh/OnEn2Hf9x0f1aYAAaWCjy0f/zcWwNO0NNLFl05ooBNq94hufnM58vwlD5QVwf8l1XrLfOj1mn/tqcQrolWnWh5h//MPIH/bi/NqdyAw5jfDMcrOHoyA5GOz1jK3Hlv48VBb07AxlpxC4HOwbfvqy5rKfctkf2QIhq+FaBq2aPg3FJGuHQqHXasu1Gl9Ux2lvo1OXMPaXzneS+6gjmPJB1JpK3IaFA4h6M1wO5ISpzhS9vM+HdiPZrUvC/h8EpEOjW6aldQH5VJM42fTA6Lsp4tfkIOHCtA2k96etYJx7oEO/a/eMU5sXEXgcgApAucaO2IvtUAlzU7Csx9Uu7k2fcPAS5EQ71t9AFNwypsLUDFvw7OW/18ccKgQWm1qftI1gyFmJkpWcw/IaepJTptxzZQqRzPjtFG1yHyifzwEte/aio9/u4OFv9AlcYXp9N3FjGpLsJ0Yr9KLHjuLaIlKa3x8VeAPnDYHEY7c0ZPeoQxy/8V/NQb2CwJDrLuYOTCxOVrVjbGL7ZUnPCmEO1+W7R3XIHGGNvscgdPAV86wCSppI+3aUoJFFIKwDxiv5hCxMsFJ+0k762BcTnat/WB6fHBpxxOUP049N1+/s5w8uXvCCr9UvKMCrnP6JIVigZIBe/9/AdJpdqXEsoOEHXX3w/GkqUP7fsJ1qZJ2qFwaK70aPEj4fpPqdCYeMQRDgPXIqnztwycIpAXjApoAPclzGuubc6Fs1fxfVvtkqWdpsdYmoGPT0bbEQ7iCEGUIPfWvf4KWiJvX3PbyUIeIwQe7YswsG1AtqXaUpbz8x1RB9xMBegLlT5EQs3TzpSUFTzwZ8UqjjWbaI2yCP5cCca5qjK23CGyjxFvDVCb/XrOctMLAPkdiezngzoyWiGg99qdSFWJTAGim95ptOlJkLQ00RE6+AXzsZVT5IgJu8Wh6+Kio06RWEgzOtqoZTA2xw3Cq0KY21MewZOPdZoo6wK9aTA3QqLPIF+3ueLw1X8H36piFnX/ftVGiyUT6T0dQDe/KVtECjnpROII3asDuBqI6b8XGcRUGJquUqIcNOpWw594iXnMArKLUOGNeg="
                },
                "src/empty.cpp" : {
                  "name" : "src/empty.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "BPrPxsoPO0ddRfXxWyDgbA=="
                }
              },
              "description_text" : "Congratulations! You have already learned how to define variables in C++\nand how to interact with the user of the program through the terminal. \nIn this lesson you will continue to study the C++ language\nand will learn the following topics.\n\n* Basic control-flow operators: conditionals, switches and loops.\n* Arrays and iteration over their elements.  \n* Custom data types: structures and enums.\n* Decomposition of programs using functions.\n\nYou will learn these concepts by developing a simple 2D game\nbased on the [SFML](https://www.sfml-dev.org/) graphics library (Simple and Fast Multimedia Library).\nBut first you will have to install this library on your system.\nPlease find the installation instructions for your system below.\n\nIn order to check that you have installed the library successfully \nrun the program attached to this step. \nYou should see a new application window appear\ndisplaying a small planet in the large cosmic space! \n\n### Windows\n\nOn Windows you do not have to do anything --- \nthe library is going to be installed along with this course itself. \nThe library is build from the source code right on your system using the compiler \n[bundled](https://www.jetbrains.com/help/clion/quick-tutorial-on-configuring-clion-on-windows.html#MinGW) \nwith the CLion IDE.\nThe script to download the sources and build the library is included in the course.\n\n### MacOS\n\nOn MacOS please use the [brew](https://brew.sh/) package manager \nto install the `sfml` library.\n\n```shell\nbrew install sfml\n```\n\n### Ubuntu\n\nOn Ubuntu please use the [apt](https://ubuntu.com/server/docs/package-management) package manager \nto install the `libsfml-dev` library.\n\n```shell\nsudo apt install libsfml-dev\n```\n\n### Other Linux distributions\n\nPlease use the package manager of you distribution to install the SFML library.",
              "description_format" : "MD",
              "task_type" : "theory"
            },
            {
              "id" : 1741900836,
              "name" : "MoveAnObject",
              "custom_name" : "Move an Object",
              "files" : {
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHrfaRJtA8wCsheunTKmrR7inNeRgCIrKpEZa7zuUfVdkek4ZFHG9eZBzEiE4xahYPGmXNBSh0aMNAOgS8xwYdTqEoe/bUs9dPFJN7ph2uaEzjknZP7l0gsE/++YtNYpLaFGFCEkzfc6qcsvS6uYll66fZSTVi72WDuaxGFYjB4Hx3WEVPTOEhUXVpmbtJ5Qiy9wDTtmea/Sgb/jNbM9tPqrHld/yMD9MoKRMo8rDcJ0chs6U25q5d5brfdPfwQf6Kye0ZtwcwJwMWPDWQVNAsJr4gj6wxxbipAHpvT+XYIQt1m8ogdcrzG1p971QTVqHG7uoRBV9UbuT/b7Mz4XlcCHLPJK0SYWlmWo3olRVoV+OZRICe1IyGDSLQqN3aXoectle5quPU9GuyTv/XAir2AySqWWR/3RI0ZazhkddUSm8UluNlWvLyW+j4gfRX/xPG/++VjG3LYDBMRw9WWlvdh7pBi+s3/2ZSovsI8DfWj6EQczilCTfkEnvyJ1AH9bTWk"
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "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"
                },
                "src/move.cpp" : {
                  "name" : "src/move.cpp",
                  "placeholders" : [
                    {
                      "offset" : 213,
                      "length" : 8,
                      "possible_answer" : "/IQIMKSrhsIgpemC4obiThpE863msPE3k23akoUEhdM=",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "DgDba3xw8RdPYu5Vpld1eY1E1In1EtrkhpergIjsa98GD9AajcxH3KPkrZtC79Z05cqGLU6qKDFfs5YEsR2oNQ7nSocy1X6/y789sHMPd8yERlPdlzeBSLc2SDKzTgUPdKX00e9Nmi6s8qh3RH+mXCA3L9Z8qM/JDo97b5HzGa4tKZuWxlz0THMwlOeuSGREYWasW225XiqIanEk3GKSJb3XxWgJ/sAurumG5n6sfzZTi0oI0XBbptnkaNRetpO7SPFxPLfwPtXR/4MD/wqKW2ngHu3qTsapBIfP5QZpuXBVFotxgr/TM+pt7NTTfL3I"
                },
                "test/test.cpp" : {
                  "name" : "test/test.cpp",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "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"
                }
              },
              "description_text" : "Your next task is to move the planet on the screen \nwith the help of a few lines of C++ code.\n\nThe position of an object on the screen is defined by its coordinates. \nIn a two-dimensional scene, each object has two coordinates: \nthe horizontal x-coordinate and the vertical y-coordinate.\nAs a first step, you will only need to move the object horizontally.\n\nTo move an object, you need to implement the function `move`.\nGiven the previous position of the object, \nthe velocity of the object and the time elapsed since \nthe last update of the scene this function should\ncalculate and return the new position of the object.\n\nTo calculate the trajectory of an object, you can use a simple formula:\n\n```\nx` = x + d * v\n```\n\nHere, \n\n* `x` is the previous x-coordinate of the object;\n* `` x` `` is the new x-coordinate of the object;\n* `v` is the velocity of the object;\n* `d` is time delta.  \n",
              "description_format" : "MD",
              "task_type" : "edu"
            },
            {
              "id" : 1914193279,
              "name" : "LookAround",
              "custom_name" : "Look Around",
              "files" : {
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "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"
                },
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHrs9792Ebkb4loMB/bMXvRfQfONY2RzWnnRPceaUFYp9UM3PxQO/0Kmwn0xEj5vmxc3S9vx/KRQbOtO6+3uv2jEA03tV0Gi70xYYOTxYuxI5GrwiyjWrlRKYqKsSj++3hm5u0Yg8Sfa5oscGf5LcHSIR2bnZ4xU9LUyIhVYsNyIwsLpQbhz5VbrVY8fH9CDGzIGK/Ewb0j1GcUnjlUMHmoui/TmP+TN3rXcC3AYw0TmU2ikVpP++Y+5TQ0IsDnMQx6tcsn5DAFEKlHsNRok/B/99Av9qUFQAHURnQYSb+N3NUdZhzvCysPpyffOaEC5Jm0c3SDogUMTJTofxxxLcbo9m8l9OPXNvZeMxmWfrSrj3w="
                },
                "src/move.cpp" : {
                  "name" : "src/move.cpp",
                  "placeholders" : [
                    {
                      "offset" : 69,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "MoveAnObject",
                        "file" : "src/move.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "pROzx0hc0Q1KB+BSFFdI7Bsu+CxUFxIstTorfDkR9NE=",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "DgDba3xw8RdPYu5Vpld1eY1E1In1EtrkhpergIjsa98GD9AajcxH3KPkrZtC79Z0z0WeLwhF/LNOzCk14uM0mog9a08gUS9CQUy3yToBClMpNR864AeSKRzrZlaUOFpZ"
                }
              },
              "description_text" : "When solving the previous task, you might have wondered how just a few lines \nof C++ code turn into an entire application that opens up a new window, \ndraws the planet on the scene, and does other stuff.\n\nWell, we actually cheated a bit and hid a large part of the code \nresponsible for all of that. But now let's put all the cards on the table. \nYou can now see the hidden part of the code in\nthe file [main.cpp](course://WarmUp/MovingOn/LookAround/src/main.cpp).\n\nTake a look at that file. Do not worry if currently you cannot understand some code there.\nIn the future lessons we will gradually explain all the missing parts.\n\nFor now, you can just try to find how the function `move`\n(the one you implemented in the previous step) is used \nin [main.cpp](course://WarmUp/MovingOn/LookAround/src/main.cpp).\n\n<div class=\"hint\">\n\n`move` is called from the `update` function, which \nis responsible for the periodical update of the scene.\n\n</div>\n\n",
              "description_format" : "MD",
              "task_type" : "theory"
            },
            {
              "id" : 112619569,
              "name" : "HavingFun",
              "custom_name" : "Having Fun",
              "files" : {
                "src/move.cpp" : {
                  "name" : "src/move.cpp",
                  "placeholders" : [
                    {
                      "offset" : 69,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "LookAround",
                        "file" : "src/move.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "pROzx0hc0Q1KB+BSFFdI7Bsu+CxUFxIstTorfDkR9NE=",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "DgDba3xw8RdPYu5Vpld1eY1E1In1EtrkhpergIjsa98GD9AajcxH3KPkrZtC79Z0z0WeLwhF/LNOzCk14uM0mog9a08gUS9CQUy3yToBClMpNR864AeSKRzrZlaUOFpZ"
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "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"
                },
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHrI6TLIQ1X9oQcGtYXyYLfu/to46SXdBjiHfdFtvcRq4wBpaYZStWBDH8wjmNfCqTdYnPwfQUx54QpYR4o4J4qEOSzQg0rx+sgAAm+pVjXk5Sfo+ausLHRQEGKeNSIvk5r7yT6TPwZ21nN1gz0SykyZnuow1Kvr2wqiYYDS5jL4iEvCjLf5mcQQEZ8PC95R1d7nT5+eBIlfQ6Hak1yL2UWdZ86QTzExGaF3g7QbVc8gwBl8Q7BKUx3w+azOdfeywBjX6viRXTxs/cX3LiW+rZmqbD45VyMga98BUQ9kBvRp5c/7q4l7k6cspmoz9asya1kA3FzJ2jOQL5ejXntO55sRVpI87yRP8Lg5HjEaMWmVG4="
                }
              },
              "description_text" : "Let us talk a little more about \n[functions](https://en.cppreference.com/w/cpp/language/functions) in C++.\nIf you are already familiar with the concept \nof functions, feel free to skip this step.\n\nFunctions are the basic building block of programs \nin almost every programming language.\nThey allow the programmer to split a complex task \ninto smaller sub-problems and solve them independently.\nJust like you did in the previous step. \nYou only had to implement a single function `move`, \nand the rest of the work was done by our pre-written code.\n\nLet us take a look at the syntax of functions in C++.\n\n```c++\nint sum(int a, int b) {\n    return a + b;\n}\n```\n\nA function has a name, arguments, a return type, and a body.\nIn the example above:\n\n- `sum` is the name of the function;\n- `a` and `b` are arguments given along with their type `int`;\n- `int` before the function name is the return type of the function;\n- `return a + b` is the body of the function enclosed in curly brackets `{}`.\n\nInside the function body, one can refer to any of its arguments.\nOnce the execution of a function reaches the `return` statement,\nit completes with the result being the computation \nof the expression following the `return` keyword.\n\nFunctions with no return value have the return type `void`.\n\n```c++\nvoid printInt(int a) {\n    std::cout << a << std::endl;\n}\n```\n\nTo call a function from another place in the code, \none needs to use its name and supply the sufficient number \nof arguments of suitable type. \n\n```c++\nint c = sum(1, 2);\nprintInt(c); // prints 3\n```\n\nUpon the call, arguments in the body of the function\nwill be substituted with the actual values passed, \ncontrol will be transferred to the body of the function, \nand when the function will terminate its \nreturn value will be sent back to the calling side. \n \n",
              "description_format" : "MD",
              "task_type" : "theory"
            },
            {
              "id" : 891080999,
              "name" : "MovingUp",
              "custom_name" : "Moving Up",
              "files" : {
                "src/point.cpp" : {
                  "name" : "src/point.cpp",
                  "placeholders" : [
                    {
                      "offset" : 88,
                      "length" : 10,
                      "possible_answer" : "INFFZm5M9eNeUYNHh0poE4IjA6Qhliit+YXwuyp8KiidJgZf8F5m/TN12meGrfFZ",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 180,
                      "length" : 10,
                      "possible_answer" : "pelbdSGe8NgHG+byI/ljy5v/ZQLq/c9yOSKURsdX+MpMLssF9QyW3PScRwJi68X/",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 283,
                      "length" : 8,
                      "possible_answer" : "SKJuYDb16PU7jYutTiTlSfCAdk8sm41OEn66k7L3tCTPDWPR+FlDsnI2q+usN94C",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwZNO2eJ5pv84Wuo6wjO1wfBdMxdfrCVrva4pftvco4l10ClR7ZZb4cextUBk6sK+pPMnWNtDfgT+Ux70ZEj14VFjYTmFd/CNjrYkftVqTUitGeFd48bQOgkOjG3XbW+gliXBwwjp/0fSQsbgQQSVsc7UfUztqBYjYF+HVnqapyBzCcaIM/6QhCQeUgvXn3C4gqLXFLK3p7MtiGz7t3GYs1dyHveJdHEq+NxhaIl8sXHcBfxxbKXmW6bnVb8PvDv8wI1S/5+XMWczBp2RjyAkEtsgIj0yQU2EhMznaCMWo6g0LQJrurJI1D+TmRK0pEaGysdlalkyh2CKh6VZyEx9BepSwwHAhH4vUeVdkW8Oqv1n0dicl3Adi4KVrqz7wEZydQ=="
                },
                "src/move.cpp" : {
                  "name" : "src/move.cpp",
                  "placeholders" : [
                    {
                      "offset" : 69,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "HavingFun",
                        "file" : "src/move.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "pROzx0hc0Q1KB+BSFFdI7Bsu+CxUFxIstTorfDkR9NE=",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "DgDba3xw8RdPYu5Vpld1eY1E1In1EtrkhpergIjsa98GD9AajcxH3KPkrZtC79Z0z0WeLwhF/LNOzCk14uM0mog9a08gUS9CQUy3yToBClMpNR864AeSKRzrZlaUOFpZ"
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "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"
                },
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHrfaRJtA8wCsheunTKmrR7ii4AZjQ6SofaVsRFnbfvLDqnhMzW7paq0PDX8CjPlkR+ld1zMhKFFozhxQw5PZsnJ4obCV37rss4hUciT4qrpmEvU5vYZYM3R0ssnACR9EPdhLw0sl9Y+JtQx/MFXwKxnn1Xwgb70cftSRKU0mJ9lYbhnJEAQpz/64WCXWBPQkTaGwlUX4b3E4/RnOOpjWGTYU97Twz6IWadsL/p2CDrqqfQeP+d8JCaDcQ4jciKvz4ESAclk2Qbo5BfQIpmPPRIc4Ge9AmbOQryDgs+9DvznxWyb5XCdlC1k379YZIbORUZ2haSWEyQdsA5lYgwGTH5kZMWZ9/9dMY5hUqx2tLd+FffvJEKQUoSJqMMpxS3I1u80CId3QNPHqv3x8wqtpVqurngTteGhuzLbl2sNTTE8XXiwitgIpzjVl2Z0/UT0r3q/tHIzx60Bwpycj/iytE81+8xT8pKmuTpz1PAfMDc1LvHlA8TFGzEjB5CxVzAKxhzrDrIVSB+IP76cQKRAl5OxA=="
                },
                "test/test.cpp" : {
                  "name" : "test/test.cpp",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : ""
                }
              },
              "description_text" : "Previously, you have implemented a function that can move an object horizontally. \nNow, we go into the two-dimensional space, and your job is \nto make the object also move vertically. \n\nRecall the formula for updating an object's x-coordinate:\n\n```\nx` = x + d * v\n```\n\nTo move an object vertically, you can use the same formula! \n\n```\ny` = y + d * v\n```\n\nNow, if we want to move an object in 2 dimensions simultaneously, \none way to do that would be to implement two functions \n`moveX` and `moveY`. Each one of them will update corresponding\ncoordinate independently of the other.\n\nCan we do better though? Yes, we can.\nInstead of going the way described above, we will go the harder way. \nAs you will quickly see, this harder way will pay off.\n\nProgramming is all about modelling a world.\nAnd to model a 2D scene, we will need suitable concepts. \nOne of such concepts is the concept of a 2-dimensional point. \nSuch point consists of two numbers â€“ the x and y coordinates of the point.\n\nWe have seen C++ types that can be used to model one number: \nfor example, the `float` type. But how can we model a 2D point?\nLuckily, C++ allows us to build new types out of the existing ones. \nWe can declare our own type of 2D points.\n\n```c++\n\nstruct Point2D {\n    float x;\n    float y;\n};\n\n``` \n   \nThe code snippet above declares a new type\ncalled `Point2D`, which consists of two _fields_\nof type `float` named `x` and `y`.\nIn C++ new types constructed this way as an aggregate of \nother types are also called \n[_structures_](https://en.cppreference.com/w/c/language/struct), \nhence the keyword `struct`.\nFields of a structure are also called _members_.\n\nAfter the new type is defined, \nwe can declare variables of this new type. \n\n```c++ \nPoint2D p;\n```\n\nThe code above will define an uninitialized variable of `Point2D` type.\nAs you might remember, leaving variables uninitialized is a bad practice.\nTo initialize a variable of `struct` type, one can use the following syntax:   \n\n```c++ \nPoint2D p = { 0.0, 0.0 };\n```\n\nThat is, you can list initialization values for all members of a `struct` in curly brackets.\nNote that members are initialized in the same order as they are specified in the definition of the `struct`.\n\nTo access the members of the structure, one can use the _dot_ syntax.\n\n```c++\nfloat x = p.x; // accessing the x coordinate\nfloat y = p.y; // accessing the y coordinate\n```\n\nPoints can be summed up just like numbers. \nTo sum up two points `u` and `v`, we need to sum their coordinates. \n  \n```\nc.x = a.x + b.x\nc.y = a.y + b.y\n```\n\nAs a part of this task, you need to implement the function\nthat will sum up two points:\n\n```c++\nPoint2D add(Point2D a, Point2D b)\n```\n\nAlso, points can be multiplied by a number. \nTo multiply point `a` by the number `s`, \nwe need to multiply each coordinate by that number.\n\n```\nb.x = s * a.x\nb.y = s * a.y\n```\n \nYou will also need to implement this function.\n\n```c++\nPoint2D mul(float s, Point2D a)\n```\n\nNow we can rethink our movement formula in terms of 2D points.\nLet us notice that this formula involves the following ingredients:\n\n* The previous __position__ of the object. It can be modelled as a 2D point `p`.\n* The __velocity__ of the object. Since the object can move both in horizontal \n  and vertical directions, we can also model it as a 2D point `v`. \n  The `x` coordinate of this point gives us the horizontal direction \n  of the object, and the `y` coordinate of the point gives us its vertical direction.\n* A __time delta__, the number of milliseconds elapsed since the last \n  update of the object's position. This is just a single number `d`.\n\nNow the formula looks as follows:\n\n```\np` = p + d * v\n```\n\nNotice how this new formula is in fact just a \"clever\" way\nto write the two formulas for updating each coordinate independently.\nYou may think that this trick does not buy as much:\ninstead of two lines of code, we can use just one line.\nHowever, as your tasks will be becoming more challenging, \nyou will notice that working with each coordinate \nof an object independently is very frustrating and \nrequires a lot of copying and pasting the same code.\nThe purpose of good programming languages is to save you \nfrom this burden by giving you a way to build your own _abstractions_\n(such as 2-dimensional points) suitable for modelling your problem.  \n\nAs the final step of this task, you need to implement a \nnew function to move an object in two dimensions\nusing the functions of adding points and multiplying a point by a number.\n\n```c++\nPoint2D move(Point2D position, Point2D velocity, float delta);\n```\n\nIf you implement it correctly, you should see the object \nmoving diagonally into the bottom-right corner of the window.\n",
              "description_format" : "MD",
              "task_type" : "edu"
            },
            {
              "id" : 1758066928,
              "name" : "GivingDirection",
              "custom_name" : "Giving Direction",
              "files" : {
                "src/direction.cpp" : {
                  "name" : "src/direction.cpp",
                  "placeholders" : [
                    {
                      "offset" : 70,
                      "length" : 22,
                      "possible_answer" : "on/sur0CWG0ibtaPUp4I4RUa30x7yQMzoRa3PT1t+wVzhIhGVGPHM+T6Gr+R6IJV4Hjx4y86zIZwJUAHd/hD8rqBoQrW24nluRsodOi0kuCn9u4lYk/IciCzHS8/gW4QmXrrXZaFLbYxsa4MUeblFoNB91IU6yFnko54WTOpCoMdG1fqKiwO8GrPm4oelSKsg1ivMsUU0ivW3TQJ53B84TyhRBnpirNJFCDlBzi6lEBHU/5slem/JJUyQ1YzRylcgCIB8kummjhHHMZVpHVRV+/TBF3E8THxteUX1w2JaI1ty9qbeI5kZCMZsuLvKNcUmuRjZxIzY3fryRws/poX6qczfP37k4ht59RpqnTRB3qhSjf1joUgXpkD/jF1+qwKnP+D+/AVSO5mGOrDzGhejEnE9jQbU6nv9cwZOK/BiXE=",
                      "placeholder_text" : "return { 0.0f, 0.0f };"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwclPgMsaWrap7oQYk2v2nxgDWb/vs8P1/FdWy6SUTv5cwnV2mz+ZtKKT4SinJQ7rb2xZkKT1CozhDfB+/H3wO96WMo5OQ3Si4k9hM0SSdoAK"
                },
                "src/point.cpp" : {
                  "name" : "src/point.cpp",
                  "placeholders" : [
                    {
                      "offset" : 88,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "MovingUp",
                        "file" : "src/point.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "INFFZm5M9eNeUYNHh0poE4IjA6Qhliit+YXwuyp8KiidJgZf8F5m/TN12meGrfFZ",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 180,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "MovingUp",
                        "file" : "src/point.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "pelbdSGe8NgHG+byI/ljy5v/ZQLq/c9yOSKURsdX+MpMLssF9QyW3PScRwJi68X/",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 283,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "MovingUp",
                        "file" : "src/point.cpp",
                        "placeholder" : 2,
                        "is_visible" : false
                      },
                      "possible_answer" : "SKJuYDb16PU7jYutTiTlSfCAdk8sm41OEn66k7L3tCTPDWPR+FlDsnI2q+usN94C",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwZNO2eJ5pv84Wuo6wjO1wfBdMxdfrCVrva4pftvco4l10ClR7ZZb4cextUBk6sK+pPMnWNtDfgT+Ux70ZEj14VFjYTmFd/CNjrYkftVqTUitGeFd48bQOgkOjG3XbW+gliXBwwjp/0fSQsbgQQSVsc7UfUztqBYjYF+HVnqapyBzCcaIM/6QhCQeUgvXn3C4gqLXFLK3p7MtiGz7t3GYs1dyHveJdHEq+NxhaIl8sXHcBfxxbKXmW6bnVb8PvDv8wI1S/5+XMWczBp2RjyAkEtsgIj0yQU2EhMznaCMWo6g0LQJrurJI1D+TmRK0pEaGysdlalkyh2CKh6VZyEx9BepSwwHAhH4vUeVdkW8Oqv1n0dicl3Adi4KVrqz7wEZydQ=="
                },
                "src/move.cpp" : {
                  "name" : "src/move.cpp",
                  "placeholders" : [
                    {
                      "offset" : 69,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "MovingUp",
                        "file" : "src/move.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "pROzx0hc0Q1KB+BSFFdI7Bsu+CxUFxIstTorfDkR9NE=",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "DgDba3xw8RdPYu5Vpld1eY1E1In1EtrkhpergIjsa98GD9AajcxH3KPkrZtC79Z0z0WeLwhF/LNOzCk14uM0mog9a08gUS9CQUy3yToBClMpNR864AeSKRzrZlaUOFpZ"
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "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"
                },
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHrXzkmKLRwAXOBiX2KNlQA/wP+Fo4G24ie8Xc7bIEAujKClnkDNlEGFmRexYzaQG0iLhY4YTm2aMCpDjPpMVlANuWdALadl0eLYHmswfBV6WR5M4gfGSuGNeIM9xqKpk4eaFOf2p8nl6X7FpMuHgHCVSuWrp5Bg+QJGSLDhr6PknFOV/HpTZa6EovyzuvrHps0aYOiGM/0pT+ysBCDxdNVvSXLrqLklik26+PhW5Sx/HCQreWjz5dA78OurFARQK85ugmK6oM2bOniAzyHcEnixbL1Wum7RtnK2uhdyxyvq+n5t43Xo1qktxgDiUDAZXhet73fC9vZfhPw38jIBkKf2I9uCv7LiF06V0bqpfQkMMEbqNf4T/0sXQibBtJsI8/kHZUOjBWY4vCHDFl7nZj7KnuoHWDs+XZVzD+qmfzPSwIfJldjmH69Y1M5jNW+BPFsdpTnbPtmY3jSJA1h9fbBy2om2xOZySPUzeqWZhfwBaiv/MjvkLvH/aKW/snhNhXwBOMyDz7xsaTdbYOBP3z3a9tq9hWabJDoi8sAFyUU0JVXnFUov5BtL+gZzVeuOJuz"
                },
                "test/test.cpp" : {
                  "name" : "test/test.cpp",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "L5ffR8J4TW5o2ausXnEBbbNk2OlFqMbVM7CIl3R4fxylqj5x7DfnFwvvvBWppZVv4KfjDR4woD+6jl2RgCsdbeEjTklxhdD7XuFuJYoZMOUG69VAsMLic01/ENJhHAdq1JxEgECXTotyraot7RCiVB9MOzwItTdu14D3VA6d0XrlGBoPauOxsOkN07NtTIGKkbBBdDvUqVe5/G7oR3F+Jg9mC9IueMSEX8wAoZLb/HLNiAWhw/WLBGD39oKcJRAZB9h5aEq+SBwhhGM3gR8OQebZ3mS0pfpIP7EF3HD3cPecWhK8YlZ15bItdUdwDSuSBYG1QKu8/Q7yLAa6ym/cGLpbcoAq6/5abc/znaTCp/WJZXhvCZRXwdbdJfWFCARHe0enl7NhOnvNIXy/2OYnefChqod7wVZJSVQQk7Qh+sEjFVTyIN6FP3KeuaUwp+Jx7/XhTgdFNmEec250PsoG/OBspmy5wjnyRQrElcK42gu3tSql60Je9DGGtoJYvqCtntOWDcnC2Zv7khiC8jLtaMOpps01JFT3gMyLbyusk3D+MQtynYuL7jznzw7/jJJE71WKqnoXwomEZr5ENSyFyJcGYL6UGff91ew6UkF4t0o82q+SIoWLpUd6PhlzRloJuV3rQIHTx6OTIHTL/hszy/UNQTCK2HL546mSTq0OamazuCAjP/RlrM4SrNN4cBs81w62d+RVZ70DaUL70tzD/HKKBkwlog1LQxV0SuZB/icP3q/jVYbw6d7S4FRxIcIFWj4PvBjP3mW7nbi9yP8AzcFWW4uVIoQTKcomPvwHOxgCR7zCM8NCqwwazczbcy0KijSgoKDO5H7IxWDqHqsmhRUyLRWDX210z/IOzDhalcpWMDqLigop6vXibapQzRchM1L3sgKULjeTFzf/9ydd+XQnOyBJqXNV7A2uzEHkrQ+c3k8h9NahKWMd4d4a8oFT7x5+TbopyPTYo1+lDUTIwJp+PNwmq+Yjcu7qjL4MTRPvgrwwm/46PeqtYbqaInCmQGg4evcgtwRlju9UJ3tPgS/V3pTnkSKIzuG2oI3vZQg+qUKHTdYCi0o3plI2/gOO57TZW+SgDJ+yzMv0aGC9NHnQyAMtZq6T4mz7ue/+zOlaLSAfP8YZR964/9YCknRxTJrPOYgwJv8OGOI7xcQEK0RcZgbAckr7vaMoVgN8+7DnxXdbKjS2QYCN4abgejuapJkVQgz9A5SpCrvhJlFrZa4rDrVfJ8Ioq7/g5ypbn2BWlpqcwthNyDF9jaleH9s09GxKz0LocyJK3wy37+7jZa3CoN5jo8r06E3EgXRZ9DdsdhJw0+uYJVD4S4kFzRDnNfkgE5OPX7Wt9D76+rHHaGDtgm6E8tSLyVDs4q1j7AaJyRS0lP+VsAzsMGffoVSTvLZ5Wdd6atZPq972yAwrvhfDzajWIkxa4/VFxuN/vIBEWc3+td9DdhqOTiZTi9nAhKQfit1gI6NOhpRazxAJkA8D1Tp/1nEey5s85p2R7FHsfva5qDYuWzUL78WGnP/4oNBRict+mnF8rxDGsL/PN3RCdNOIn61ivmddYXVigWy7orn9c9bXlFcjy+JDLOQy/707mWiGknViVvfZlr7eiyPw10LzH3ElqYs0BhzypCHv27qXUA96HE+qu3/kJbLlNM/zrY8QT0o+Nr72nrdz4CxZwLUotb9ONWlHZClowSwxBtn0bSBFxgW84nhFOr6vtZtApuoSo3bY74cpQJxKyup3bLKslN5FPvEvD3hNlY43FuDyJ19bdjTAJYo9kBKTJV/rBsBJrvyGL/B0zvMOD+YJ7SaCskUAwwKBliFdBP8oHONcEvO9kmK3FSy3g/hs"
                }
              },
              "description_text" : "It is time to provide some direction to the movement of our planet! \nIn this step we will allow the user of the program to control the planet \nusing the arrow keys on the keyboard.    \n\nTo model the direction of a movement, we will need yet another new data type.\n\n```c++\nenum Direction {\n    North,\n    East,\n    South,\n    West\n};\n```\n\nHere, we define the \n[_enumeration_](https://en.cppreference.com/w/cpp/language/enum) \ntype, hence the keyword `enum`. \nThe value of the enumeration type can be one of the alternatives \nlisted in the definition of the enumeration.\n\n```c++\nDirection direction = North;\n```\n\nTo handle user input, that is, the event of pressing a certain arrow key, \nwe have already added the relevant code in [main.cpp](course://WarmUp/MovingOn/GivingDirection/src/main.cpp).\nYou can try to find and understand this new piece of code. \nIf you do not understand something yet, do not worry.\nAt the current step, your job is to simply implement another function: \n\n```c++\nPoint2D getDirection(Direction direction)\n``` \n\nTo give a direction, you need to compute the _unit vector_ of this direction.\nFor example: \n* if the direction is `North`, the unit vector equals `{ 0.0f, -1.0f }`;\n* if the direction is `East`, the unit vector equals `{ 1.0f, 0.0f }`;  \nand so on. \n\nIn order to decide which direction is passed, you can use the `case` statement:\n\n```c++\nswitch (direction) {\n    case North:\n        std::cout << \"North\";\n        break;\n    case East:\n        std::cout << \"East\";\n        break;\n    default:\n        std::cout << \" \";\n        break; \n}\n```  \n\nThe execution proceeds as follows. \nThe actual value of the variable `direction` is inspected, and then: \n* if it is equal to `North`, the code in the `case North:` branch is executed; \n* if it is equal to `East`, the code in the `case East:` branch is executed;\n* otherwise, the code in the `default:` branch is executed.\n\nNotice that the `break` statement is required to leave the branch. \nOtherwise, the execution does not exit the branch and proceeds to the next branch:\n\n ```c++\nswitch (direction) {\n    case North:\n        std::cout << \"North\" << \" \";\n    case East:\n        std::cout << \"East\";\n    // if direction is North, then prints \"North East\"\n    // if direction is East, then prints \"East\"\n}\n```\n\nInside the function, instead of `break`, you can also use `return` to exit \nfrom the `case` branch and the whole function.\n",
              "description_format" : "MD",
              "task_type" : "edu"
            },
            {
              "id" : 1821511394,
              "name" : "DrawALine",
              "custom_name" : "Draw a Line",
              "files" : {
                "src/borders.cpp" : {
                  "name" : "src/borders.cpp",
                  "placeholders" : [
                    {
                      "offset" : 101,
                      "length" : 10,
                      "possible_answer" : "yl5iURF5Apz2XgzAQUW6ycbGngLiVHi5Xgeg5ngjYe8JS2ySwqKXxWHVnddy0p5Eov6lMaANMLK198KkaVJlMC4nO0Gzi8nlyoRmAQMSn/hUGcELpDXJ7Re0XvZOJPoLi9Bqrk9cVQqY7rJFFFrqwT4WPMvfuj6p6mbBmNbMC6FioMO+4Jj3WksYP5Px1oku/+mLsb02qF0fvMAwTH6LajhT1u77Y13pONAryM35j3jzwWcYgf8JflZVnORMq4otuoQMS3AFSbwPz/NlAdaAy/Xv9SC3brMKaw1v6LYwr/r4yzJoToXa0JApK7IJLKVuHW2LNiX3DZ/IkONk0sYgnMfU+ap43J+1x5GytqdXb440Bw1AeyLhMcQCQUimM6YaH+iY+xqREVYyZpGTIlXt2VmHNR9OvIZd4RXZKQcCL14xX1dBjEQpW1mIAvNfRAc+PSiPQFM727gvYJKJpYbbmWRyLyOrqzfqkqsLVcfIQz4=",
                      "placeholder_text" : "/* TODO */"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwZNO2eJ5pv84Wuo6wjO1wfCkPHpEM1eoda2RQmJ0sD89E63tm4duelXhSfUvLMvuytypP/JEBVsX04C2fJei4YQHGYGP2lXyvH7YH7b5Ot8adDq8ph2JYih/kNRIVAY2aFnjzcHuGI8RMaYZyNeXAqVASQlrY97qfu6z2o5JYNmc"
                },
                "src/direction.cpp" : {
                  "name" : "src/direction.cpp",
                  "placeholders" : [
                    {
                      "offset" : 70,
                      "length" : 22,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "GivingDirection",
                        "file" : "src/direction.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "on/sur0CWG0ibtaPUp4I4RUa30x7yQMzoRa3PT1t+wVzhIhGVGPHM+T6Gr+R6IJV4Hjx4y86zIZwJUAHd/hD8rqBoQrW24nluRsodOi0kuCn9u4lYk/IciCzHS8/gW4QmXrrXZaFLbYxsa4MUeblFoNB91IU6yFnko54WTOpCoMdG1fqKiwO8GrPm4oelSKsg1ivMsUU0ivW3TQJ53B84TyhRBnpirNJFCDlBzi6lEBHU/5slem/JJUyQ1YzRylcgCIB8kummjhHHMZVpHVRV+/TBF3E8THxteUX1w2JaI1ty9qbeI5kZCMZsuLvKNcUmuRjZxIzY3fryRws/poX6qczfP37k4ht59RpqnTRB3qhSjf1joUgXpkD/jF1+qwKnP+D+/AVSO5mGOrDzGhejEnE9jQbU6nv9cwZOK/BiXE=",
                      "placeholder_text" : "return { 0.0f, 0.0f };"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwclPgMsaWrap7oQYk2v2nxgDWb/vs8P1/FdWy6SUTv5cwnV2mz+ZtKKT4SinJQ7rb2xZkKT1CozhDfB+/H3wO96WMo5OQ3Si4k9hM0SSdoAK"
                },
                "src/point.cpp" : {
                  "name" : "src/point.cpp",
                  "placeholders" : [
                    {
                      "offset" : 88,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "GivingDirection",
                        "file" : "src/point.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "INFFZm5M9eNeUYNHh0poE4IjA6Qhliit+YXwuyp8KiidJgZf8F5m/TN12meGrfFZ",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 180,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "GivingDirection",
                        "file" : "src/point.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "pelbdSGe8NgHG+byI/ljy5v/ZQLq/c9yOSKURsdX+MpMLssF9QyW3PScRwJi68X/",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 283,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "GivingDirection",
                        "file" : "src/point.cpp",
                        "placeholder" : 2,
                        "is_visible" : false
                      },
                      "possible_answer" : "SKJuYDb16PU7jYutTiTlSfCAdk8sm41OEn66k7L3tCTPDWPR+FlDsnI2q+usN94C",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwZNO2eJ5pv84Wuo6wjO1wfBdMxdfrCVrva4pftvco4l10ClR7ZZb4cextUBk6sK+pPMnWNtDfgT+Ux70ZEj14VFjYTmFd/CNjrYkftVqTUitGeFd48bQOgkOjG3XbW+gliXBwwjp/0fSQsbgQQSVsc7UfUztqBYjYF+HVnqapyBzCcaIM/6QhCQeUgvXn3C4gqLXFLK3p7MtiGz7t3GYs1dyHveJdHEq+NxhaIl8sXHcBfxxbKXmW6bnVb8PvDv8wI1S/5+XMWczBp2RjyAkEtsgIj0yQU2EhMznaCMWo6g0LQJrurJI1D+TmRK0pEaGysdlalkyh2CKh6VZyEx9BepSwwHAhH4vUeVdkW8Oqv1n0dicl3Adi4KVrqz7wEZydQ=="
                },
                "src/move.cpp" : {
                  "name" : "src/move.cpp",
                  "placeholders" : [
                    {
                      "offset" : 69,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "GivingDirection",
                        "file" : "src/move.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "pROzx0hc0Q1KB+BSFFdI7Bsu+CxUFxIstTorfDkR9NE=",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "DgDba3xw8RdPYu5Vpld1eY1E1In1EtrkhpergIjsa98GD9AajcxH3KPkrZtC79Z0z0WeLwhF/LNOzCk14uM0mog9a08gUS9CQUy3yToBClMpNR864AeSKRzrZlaUOFpZ"
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "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"
                },
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHri2w+KJ1IALTax6Ipum6qTMU5uHjPfaeHGaUa4H7ssgJG49lG6995msxjfDmzlJ+7fzd3qECmPa773tpuQqWiuh4Oz35yMohLskOh4DdszFvvd1+xaV8Gpjy/o5T5QmIFNiQD78BcpFd8o4xsia1QmmcMx17NcZBj/8U0Tt4RmOMGOWQKDeKiB/l/f8ohj+efAfj1L1mkUJ/vz2tg2vQNU1w94JNQzoJmEx9S9IX8vZJBKwNna1WyWduJ6USO+/edl4QQl2oaojyjZAgxX1XAjwmEF6eh5fKJ4e8UguNCq9gzplnDbnoujdweVpPDP2dKyzL6RX5bvgjToHjJQE0YE1awRk72nn4JqPObY9dmNbQZjGF3VIDbMOmOeumLZT9bCvGWSQR9W6WxPKlZBpRjrpxdhPV5uANYEacqa9n+dKM2SUKSB9e3xSLWnhqdRF4Er2mzzt+zbYDsCwmANhf11OmxSjJRNEKccdfmYDxxiNrFaVuPZALdMSJTHdQIRnoeGuJJglI5h/gWghvgNwTZbYP4JCn5B9XWfb+PSmeVtY9wQGxe+qiYDiRop1x48CyQ"
                },
                "test/test.cpp" : {
                  "name" : "test/test.cpp",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "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"
                }
              },
              "description_text" : "It is a bit unfortunate that currently the planet can fly outside the visible area. \nLet us fix that!\n\nWe need to detect when the object approaches the borders of the window \nand adjust its position so that it does not go beyond the visible area.\nYour job is to implement the function \n\n```c++\nPoint2D adjustToBorders(Point2D position)\n```\n\nGiven the position of an object, it adjusts the position to fit into the borders. \n\nTo do that, you need to learn another piece of C++ syntax: \nthe `if` [statement](https://en.cppreference.com/w/cpp/language/if).\nIt allows you to test some condition and \nto branch the execution depending on the result of this test.\n\n```c++\nif (a <= b) {\n    std::cout << \"a <= b\";\n} else {\n    std::cout << \"a > b\";\n}\n```\n\nIn the code above, we test if the number stored in the variable `a` \nis less than or equal to the one stored in `b`:\n* if this is true, then the string `a <= b` is printed;\n* if this is false, then the string `a > b` is printed.\n\nYou can omit the `else` branch. \n\n```c++\nif (a <= b) {\n    std::cout << \"a <= b\";\n}\n```\n\nYou can also stack up several consecutive tests using the `else if` syntax:\n\n```c++\nif (a < b) {\n    std::cout << \"a < b\";\n} else if (a == b) {\n    std::cout << \"a == b\";\n} else {\n    std::cout << \"a > b\";\n}\n```\n\nNote here that to compare two numbers for equality, \nwe use the operator `==`.  \nDo not confuse it with the assignment operator `=`.\nFor example, the following code also compiles, \nbut what it will actually do is not exactly what you might expect:\n\n```c++\nif (a = b) {\n    std::cout << \"a = b\";\n} \n```\n\nInstead of comparing `a` and `b`, it assigns the \nvalue of `b` to `a` and then tests if `a` is not equal to zero.\n\nGoing back to your task, you will need to compare the current position \nof the object with the border, and if it exceeds the border, \nyou need to reassign it back to fit into the border. \n\nWe have already defined the borders for you:\n\n```c++\nconst float NORTH_BORDER = 0.0f;\nconst float SOUTH_BORDER = 600.0f;\nconst float WEST_BORDER  = 0.0f;\nconst float EAST_BORDER  = 800.0f;\n```\n\nNotice the new `const` keyword. \nIt allows you to define an immutable variable, whose value cannot be reassigned.\n\nAlso, note that to compare the object's position with the border,\nyou also need to take into account the radius of the circle!\n\n```c++\nconst float RADIUS = 40.0f;\n``` \n\nIf you struggle to complete the task, please use the hint below!\n\n<div class=\"hint\">\n\nFor example, the check and adjustment against the east border should look like this:\n\n```c++\nif (result.x - RADIUS < WEST_BORDER) {\n  result.x = WEST_BORDER + RADIUS;\n}\n```    \n\n</div>\n\n\n\n",
              "description_format" : "MD",
              "task_type" : "edu"
            },
            {
              "id" : 932533883,
              "name" : "ConsumeAnObject",
              "custom_name" : "Consume An Object",
              "files" : {
                "src/collision.cpp" : {
                  "name" : "src/collision.cpp",
                  "placeholders" : [
                    {
                      "offset" : 83,
                      "length" : 12,
                      "possible_answer" : "PUlIQgIttPqIGuEH/18h55eyy/dVwuBxaW5B6Wt2Cl9k1eKok2ImVAahHkf+TM9LlEBBW4FeG5u/G82ed9uy9HYex3UlBC+z68n3Tg+D8iUdsSLuBKr8wRe6mK/c0fW1",
                      "placeholder_text" : "return 0.0f;"
                    },
                    {
                      "offset" : 152,
                      "length" : 13,
                      "possible_answer" : "HUwuwOqnE23TFvPw8T+P6PJ/GfZCM0NnGl7Gh/Idkoza7Qx/Lk0PF+uFyGHNvrItDYMV6IVC8XImmlvNqJ8x5liAjlEY/Xen5SU1zfq3P9TQuXSoSMO9+VsC/7rc/Clk",
                      "placeholder_text" : "return false;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "IyPGAgtVdcN+Yqg8E1sb863Pe500O7MLPzUplJEu0RJUWKj7zTHH8VmQRsIBzRsFXYSLxwrsCZ4RbMUKEjxgsUuzaJpGi59JyUcypqO1scQ3Sfj60LzFuga32RWT5zM/SA7IUN4U9anH9C/QvdILLEy0jJRrbhI55B0ELZRJlj+5By//K52FciEWloQ8P/n38qcy2JKI3x277Hq8E4WQL/RUkYBTv86GeLWZS8cfSFk="
                },
                "src/borders.cpp" : {
                  "name" : "src/borders.cpp",
                  "placeholders" : [
                    {
                      "offset" : 101,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "DrawALine",
                        "file" : "src/borders.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "yl5iURF5Apz2XgzAQUW6ycbGngLiVHi5Xgeg5ngjYe8JS2ySwqKXxWHVnddy0p5Eov6lMaANMLK198KkaVJlMC4nO0Gzi8nlyoRmAQMSn/hUGcELpDXJ7Re0XvZOJPoLi9Bqrk9cVQqY7rJFFFrqwT4WPMvfuj6p6mbBmNbMC6FioMO+4Jj3WksYP5Px1oku/+mLsb02qF0fvMAwTH6LajhT1u77Y13pONAryM35j3jzwWcYgf8JflZVnORMq4otuoQMS3AFSbwPz/NlAdaAy/Xv9SC3brMKaw1v6LYwr/r4yzJoToXa0JApK7IJLKVuHW2LNiX3DZ/IkONk0sYgnMfU+ap43J+1x5GytqdXb440Bw1AeyLhMcQCQUimM6YaH+iY+xqREVYyZpGTIlXt2VmHNR9OvIZd4RXZKQcCL14xX1dBjEQpW1mIAvNfRAc+PSiPQFM727gvYJKJpYbbmWRyLyOrqzfqkqsLVcfIQz4=",
                      "placeholder_text" : "/* TODO */"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwZNO2eJ5pv84Wuo6wjO1wfCkPHpEM1eoda2RQmJ0sD89E63tm4duelXhSfUvLMvuytypP/JEBVsX04C2fJei4YQHGYGP2lXyvH7YH7b5Ot8adDq8ph2JYih/kNRIVAY2aFnjzcHuGI8RMaYZyNeXAqVASQlrY97qfu6z2o5JYNmc"
                },
                "src/direction.cpp" : {
                  "name" : "src/direction.cpp",
                  "placeholders" : [
                    {
                      "offset" : 70,
                      "length" : 22,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "DrawALine",
                        "file" : "src/direction.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "on/sur0CWG0ibtaPUp4I4RUa30x7yQMzoRa3PT1t+wVzhIhGVGPHM+T6Gr+R6IJV4Hjx4y86zIZwJUAHd/hD8rqBoQrW24nluRsodOi0kuCn9u4lYk/IciCzHS8/gW4QmXrrXZaFLbYxsa4MUeblFoNB91IU6yFnko54WTOpCoMdG1fqKiwO8GrPm4oelSKsg1ivMsUU0ivW3TQJ53B84TyhRBnpirNJFCDlBzi6lEBHU/5slem/JJUyQ1YzRylcgCIB8kummjhHHMZVpHVRV+/TBF3E8THxteUX1w2JaI1ty9qbeI5kZCMZsuLvKNcUmuRjZxIzY3fryRws/poX6qczfP37k4ht59RpqnTRB3qhSjf1joUgXpkD/jF1+qwKnP+D+/AVSO5mGOrDzGhejEnE9jQbU6nv9cwZOK/BiXE=",
                      "placeholder_text" : "return { 0.0f, 0.0f };"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwclPgMsaWrap7oQYk2v2nxgDWb/vs8P1/FdWy6SUTv5cwnV2mz+ZtKKT4SinJQ7rb2xZkKT1CozhDfB+/H3wO96WMo5OQ3Si4k9hM0SSdoAK"
                },
                "src/point.cpp" : {
                  "name" : "src/point.cpp",
                  "placeholders" : [
                    {
                      "offset" : 88,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "DrawALine",
                        "file" : "src/point.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "INFFZm5M9eNeUYNHh0poE4IjA6Qhliit+YXwuyp8KiidJgZf8F5m/TN12meGrfFZ",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 180,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "DrawALine",
                        "file" : "src/point.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "pelbdSGe8NgHG+byI/ljy5v/ZQLq/c9yOSKURsdX+MpMLssF9QyW3PScRwJi68X/",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 283,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "DrawALine",
                        "file" : "src/point.cpp",
                        "placeholder" : 2,
                        "is_visible" : false
                      },
                      "possible_answer" : "SKJuYDb16PU7jYutTiTlSfCAdk8sm41OEn66k7L3tCTPDWPR+FlDsnI2q+usN94C",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwZNO2eJ5pv84Wuo6wjO1wfBdMxdfrCVrva4pftvco4l10ClR7ZZb4cextUBk6sK+pPMnWNtDfgT+Ux70ZEj14VFjYTmFd/CNjrYkftVqTUitGeFd48bQOgkOjG3XbW+gliXBwwjp/0fSQsbgQQSVsc7UfUztqBYjYF+HVnqapyBzCcaIM/6QhCQeUgvXn3C4gqLXFLK3p7MtiGz7t3GYs1dyHveJdHEq+NxhaIl8sXHcBfxxbKXmW6bnVb8PvDv8wI1S/5+XMWczBp2RjyAkEtsgIj0yQU2EhMznaCMWo6g0LQJrurJI1D+TmRK0pEaGysdlalkyh2CKh6VZyEx9BepSwwHAhH4vUeVdkW8Oqv1n0dicl3Adi4KVrqz7wEZydQ=="
                },
                "src/move.cpp" : {
                  "name" : "src/move.cpp",
                  "placeholders" : [
                    {
                      "offset" : 69,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "DrawALine",
                        "file" : "src/move.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "pROzx0hc0Q1KB+BSFFdI7Bsu+CxUFxIstTorfDkR9NE=",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "DgDba3xw8RdPYu5Vpld1eY1E1In1EtrkhpergIjsa98GD9AajcxH3KPkrZtC79Z0z0WeLwhF/LNOzCk14uM0mog9a08gUS9CQUy3yToBClMpNR864AeSKRzrZlaUOFpZ"
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "sO5DNyXZvapiyUJ9oytvhZnO0vQCQ/ddX/mDN3YavjBhlgW1qxDtfNWlf8pz0P/G37hEadUKSxY6ZgWysyPkLLuXgZiLb0k5Lcm7QtjFl2nC4UkYDnKh91nxT/8Aiq3ZzsNR87sRG4ElnbM4gikl/iNs6fj4gHGbRAhyHAHRQaTazXluMnukncwLS2KSaSQ/99Jdn+lM74uSfPCerBWXvjjRCgdKBsq5zGHKHuhWhqRxC7pKp93RxUlsXrEVGmP9lHOfN75u3pk8pC/8NPVGi4iUsNHumMqZD7cWL0+kq2vMO1vI3ELIEN/MsSFBcoxYX9h6BuOTNkgnMzE7truDucmUz01eKdjBBQeoDHPHmk2qln+ROBQCLfgWMJ0qoSmU1SkMKIUMKbZz1I/dr//zAn1WBqgZ9nHwniDrrC02Z48x4tJoZeMybCf90rfIzBnfv/J9EGZ0yY/476NxQwKdhcKlTkm91wwzewl1cdFvCMMx2+QXntann0xO9ZTNQZRAsc9AEVdHAz5n1DJhoIlasPYS3RqbD9tqluVrzyDr1ldpjkkW1P1l6VjtVIahuFzU2QPQrpIAhJgr+3SQgCO949PvOCchBdGZpdlEDol4kCXfufyVxdIhzDiJhYW4hqCMnLRTGVS57nwFiGlkAMQPisvnLoVKAiSQZNyAfVnbbh/RkYSybrflJKnEWEnZAzs+SOw1sPpIWIIy61wVGGVY/V1u7Xtpm7Y/q01z9YI8vyQK+gpz0dCiJgDrALVTL07DDvHpBq88U6YPev9NL9SavAC+bOXsUKYyeJ1s4ubSYP5+8jTvOZPlpiSyIzJZ1+KQPzqEXkI4gM+naJJ1v0A/f178+je4O5lXfbSkTyLalX6ihbhb3o8mBWrjZZLGyh7g9AXBzizfIIk5zwqsP7S6FpBquuFP/A9mluQDG7uMKdILL8mFc31xJN1NXPZiSfArWZN9TpUJ4oTy1DV3YXRhYVitgP6CH9xcShPN4/u/qO9EAJG/VCqxGsKfuax3IIIHSZEKPwIBYC9dnbeN9B9m1Q3Bk53rC310ckvjC4bgl57b5TuwqmnHvMt5KYxDqwpehxJFTbxaP1NRpBIBSLFjK2m6dMEwP3bC3bS+MSSiecaqGPAK47aiscEF8S19zAnQHGTHsYrqtEik/wKXJ4HgWUU2DqBRF2dU3apXx6ED2wf3+yREqO2WL7rryls7p81uqKbNoatT1U/sCXd4q2Jf6cc+1Cdeh8t6Bl9b7nzlYcNZ45ror3E/XHrhJcI+G6Uz/drxdQADnc/Jji48Mog4gmCaHSSBFR62q11BenyctZzQfuAjKxXdC/D83EnfqwTYy4ha6VeqsVEDINOWKTnktdNAK6kUpKosJhE5lnb0BlEgqtW1eauYwOyZct4cIcyDnEYndysMcAkJ/57d6KEwPFUWx5n5sFmweoRcaH9J//Wo6iNMaJCKhGzPdYbB+JJyQQTtdL5ER7KdYCNy1PZwPy91Mm3jq6/O7WNdHgz/iWl9Uf4HcWzG7Pi2z6EWBAj2C31IQZnAuDhS02AA9Os4AMJd8Hq42FnyEp9cnzQ2PIThBYlHywYmsJLOuzDMx4WrZq9vkewpjXTwpsEu0QNFo0hGikMZqA0WNP0v5VvbdvcQCwQoXlWxkbEatkggHurLIrOsHKAedON3j/VyikR5KK6JVIlxznL782DeoK2BM8SIZxMSj8WPehQfNy0uCdygCxofUUCJWR3uYDzXY1Fo4NGKvDXVEznD49Vuil5+Bqe4oVy1gjFNtGj3J5Ravgp82PsdWSIO5j0TzCKROzjPDuTAIQ5jsFDDdAzPw65RHQ2HrCcNlfWP4PKsunQGrO7pGJvDhssJL1wzGfe4h9EkbQ1tl3pv8tB9wN/1NrCwL/B01Xs3R+DTLRVisKbh8Mg2EWJmI7CJ0uI/QLvaKR0ImW9bQsWmSjmd9DCAuK7U3ZVIxpeo1JmWkSQ17jH6U51jCksx3aAAyHKNCqZPwuUU5hivOJ5YLEXA+qFa0Vgqx2jLLzZTFO1/Dg3oP4cWeYRKpP5I0EMU573SeA5C+n/eE4lZ2uV+W3HqQzDh8ZcJS2WO6ms5ZQ15370pnKIMtKGPEg4QFL9HODCtJk+EM1GA0D4fEhUWJV8ORzg4anDtj9OtbqZshCcHeQxqgSk7tmiO4cHfpqxcTavSnlq0Z4k4mghAoMxQLwsNXeXmSSniGzk9pgjSk2BqhkQwT7Cehe4FcI1dx6bvFq/crJ0APgNOOWt04yfJl0NjAzLQgD+F6xQXy+/ZSn7AC8Rcdpz8XwmRj+SMODk7CDl4t/tidW+gXlRkO2qSnENsb/PvNp+kyGjl0MsDP2vwmbCoZS8bFYWFOMFO8lik0vXIYBvI1Gh0gUynXOAhocJVRMGEG9BR+Oe0z+D59jOhG789iupmzMTd9p6lhhtOtS5T3ViktTP3jT7mM2AqLJ5wtYvAsZ2fGq55mbzbIq5SztcppCZPb/tkOvTyn93jGG7ztBeQf+7BPNZa94m++71TsLHB0WpdVswkT1kQt2fcS4LSGAPmCknumDnQ9vKy0ZS4u9kYfgoWPWM9Wy/8OiN7e9fnRTLbkYIR4+MZ/j0x8+wrBinwVqVpd8c/U/qN4AYP9wiDeipvIvpTJsOpms7QJ5OT1No1wfylxYn3kNPmRuszgJXnlOUCNomaTRpRL1y4fhXUaO8AvLhUz/K0JGor88LES8UkXUxucMS3snCHjxKUDLd2LYxLh1+OEPtfye/ii2zCT+bE0J76UrxP36yTfUW+50H2Wqohl48sIqMPUiH9bpJ4x75cvzbS/E2e0Bxo67VU3GUyGsIZPd5nzhQMo3I/Skb2WoxS/6SqX7knc5Cz0Iy4WYaWyGWGFX3gY/yD7gRHpXa79PI1j+sJ7U75SDNSDAts1efGZf3s1kyMn494hGOxXAjihN/DeMTtRJ/VgN40hVleB8wT5dJiArgDabpXZKnwuw0JMDOn8qZ6pqa3GsGtA5wveW6m8RChiDCYdY9Feq1WlkDuWefeiRSEE1Z50oKPXvK+zl6wMjZGZhn/5ga8zm8RkFbyihTqZs0le+q+IHF7T2T0KLRY3zToASQ8SXALOco+PSDy5Ss2gCccp6D4DWqd7Zosaj+90LfX0OpzniEAzKonssQlGXNZnIdB70o28ya4T8i80BsTK3qJ03VoLjEl2dswecIAgRYuCVU7uxhdD/pFnBjd71W91SZhLS8clf36HuxCUbVF40VRSjM0xylXxvv36cmUbPehOIquFwSpEZZswqykYZhPYOJPX9a/3dg="
                },
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHrVnm5J/HQZrHkyuQ6tf/AsieWORLoLSs+4f4rJBr1sGEYdW22G1b5bAl9atjjqVgzNKhTtY4OrEFUWD1Vvv+9pCsVsEGof8lJLlNTlUCCjxmdkkq7/UW8V4QiK18Ad8oNjdOlWXk+YY+ThjaqR+A0yUsGmULYchNblPm26e1qXTLZqMYwzSYkjiwBQcl3n2CeMzRmX8sDvgwf7NewP4YE+uPBAjICG4139SnP1f7KxKstvK3nwYpDnqca4DoZfLWyscZ2Tmaitk8jvRdxwD+dyqWV6nah/igQPZktX9RMK3nA8tEwXxOquJBDKUmO9KuKXs8oCQ7Zpcf/N4aYDvQm4vYG0zE7AYSV8JAoCW3QIF+GFjDsguuvIfmwDxZi+qk94OTF1pCBA9vULMSBGrYxKnxXdyecq5nk1dwVa6q8Lmqxr10oiMfhnwsfMkxrHRKOCyeEVQKWEZD51J+GkS8fuGdfsLU2nUJek1BsB2TJM55GsjMz9TM/aWc5xnAPjUwO7H0tVk+kixJ5CDyicXFgC2g2sFZUg2uoCfuhgPLKX3OsfgyHqBbZEVa0iQ0Jzf0YIEEAHiRG0ueKrYNvUx+1zsFF0O8n0850hs8Ev4gKbRc="
                },
                "test/test.cpp" : {
                  "name" : "test/test.cpp",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "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"
                }
              },
              "description_text" : "Let us add to the scene another consumable object in the form of the small star.\nWhen the playable object touches this consumable object, the latter should disappear. \n\nTo do that, you will need to implement \na simple [collision detector](https://en.wikipedia.org/wiki/Collision_detection).\nIts job is to signal when two objects collide on the scene.\nWe will utilize the fact that both our objects have circle shapes; \nthis assumption will simplify the task significantly. \n\nLet us create yet another type to represent circle shapes.\n\n```c++\nstruct Circle {\n    Point2D center;\n    float radius;\n};\n```\n\nNow you need to implement the following function.\n\n```c++\nbool collision(Circle circle1, Circle circle2);\n```\n \nIt takes two circles and\n* returns `true` if they collide,\n* returns `false` otherwise. \n\nTo detect when two circles collide, it is sufficient \nto check that the distance between their centers is less \nthan the sum of their radii. \nTo calculate the distance between two points, \nimplement the corresponding function:\n\n```c++\nfloat distance(Point2D a, Point2D b);\n```\n\nRecall that the distance between two points \nin a two-dimensional space can be calculated as follows:\n\n```\ndx = x1 - x2\ndy = y1 - y2\nd = sqrt(dx * dx + dy * dy)\n``` \n\nHere, \n* `x1`, `y1`, `x2`, `y2` are the coordinates of the two points,\n* `d` is the resulting distance,\n* `dx` and `dy` are differences between the points along the `x` and `y` axes,\n* `sqrt` is square root.   \n\nLuckily, the C++ language already has the `sqrt` \n[function](https://en.cppreference.com/w/cpp/numeric/math/sqrt), \nso you won't have to implement your own:\n\n```c++\nfloat sqrt(float x);\n```",
              "description_format" : "MD",
              "task_type" : "edu"
            },
            {
              "id" : 1431255614,
              "name" : "ALittleSpontaneity",
              "custom_name" : "A Little Spontaneity",
              "files" : {
                "src/generate.cpp" : {
                  "name" : "src/generate.cpp",
                  "placeholders" : [
                    {
                      "offset" : 130,
                      "length" : 10,
                      "possible_answer" : "vnVhZMzzomxFUxcGj2EayL3K2sEPhqMRdS7tPvaPpmXzIzg/1YXY+Y8ySkpX8klRlmpQMiq0n4l+MksytKA6J1ysdWnLAkt0B03P1sYLgp91zKCQyluECfSt5t7Z/7mPuyp/fvyBqhFuOvwZAy1P0sInsEjx9KsdoB9cwL88IlyiC7Yd5VhxuClRHYDhPk6XGrM/w1geQM12j2OACE5hZHU+uFvh5M8zWG0GIbGnibQ=",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 216,
                      "length" : 11,
                      "possible_answer" : "oQjURSTyBfR1RKP/OweIpANhNR0lkfwJPHb2rhaqVMtSoTlK7MY2Y6DU/XEMg0+QvRxrph19Dri59rRI0x0wPQ==",
                      "placeholder_text" : "return min;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwdA/cvSiHcC+3/CmPg9jWG1xQu9hOAil0Ux58fy3pkjrjFn0zW+QLZU90DVr6fXFgbQ7htwzOdWzKt1TVEusdYvoQH4xUYKar+wUPL6yIP9t81/BJMrynFMjoKtAIdqcF58Dpkq/vchYrEUEbSvAqe5pCrB4L5rWOkVn4cQUwaSDAq8yzorZzYL7WKLSO/oEOc0NgG2C3rkHcAOg9RhXXuj8YTQUimsyL8zxnWSVE9JA38H+l1lTAZyd/XJdNY2ZMHaL/rwG39BjjT7KyTVlsLYbqXMJPnE12ZL507+qtchH"
                },
                "src/collision.cpp" : {
                  "name" : "src/collision.cpp",
                  "placeholders" : [
                    {
                      "offset" : 83,
                      "length" : 12,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "ConsumeAnObject",
                        "file" : "src/collision.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "PUlIQgIttPqIGuEH/18h55eyy/dVwuBxaW5B6Wt2Cl9k1eKok2ImVAahHkf+TM9LlEBBW4FeG5u/G82ed9uy9HYex3UlBC+z68n3Tg+D8iUdsSLuBKr8wRe6mK/c0fW1",
                      "placeholder_text" : "return 0.0f;"
                    },
                    {
                      "offset" : 152,
                      "length" : 13,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "ConsumeAnObject",
                        "file" : "src/collision.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "HUwuwOqnE23TFvPw8T+P6PJ/GfZCM0NnGl7Gh/Idkoza7Qx/Lk0PF+uFyGHNvrItDYMV6IVC8XImmlvNqJ8x5liAjlEY/Xen5SU1zfq3P9TQuXSoSMO9+VsC/7rc/Clk",
                      "placeholder_text" : "return false;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "IyPGAgtVdcN+Yqg8E1sb863Pe500O7MLPzUplJEu0RJUWKj7zTHH8VmQRsIBzRsFXYSLxwrsCZ4RbMUKEjxgsUuzaJpGi59JyUcypqO1scQ3Sfj60LzFuga32RWT5zM/SA7IUN4U9anH9C/QvdILLEy0jJRrbhI55B0ELZRJlj+5By//K52FciEWloQ8P/n38qcy2JKI3x277Hq8E4WQL/RUkYBTv86GeLWZS8cfSFk="
                },
                "src/borders.cpp" : {
                  "name" : "src/borders.cpp",
                  "placeholders" : [
                    {
                      "offset" : 101,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "ConsumeAnObject",
                        "file" : "src/borders.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "yl5iURF5Apz2XgzAQUW6ycbGngLiVHi5Xgeg5ngjYe8JS2ySwqKXxWHVnddy0p5Eov6lMaANMLK198KkaVJlMC4nO0Gzi8nlyoRmAQMSn/hUGcELpDXJ7Re0XvZOJPoLi9Bqrk9cVQqY7rJFFFrqwT4WPMvfuj6p6mbBmNbMC6FioMO+4Jj3WksYP5Px1oku/+mLsb02qF0fvMAwTH6LajhT1u77Y13pONAryM35j3jzwWcYgf8JflZVnORMq4otuoQMS3AFSbwPz/NlAdaAy/Xv9SC3brMKaw1v6LYwr/r4yzJoToXa0JApK7IJLKVuHW2LNiX3DZ/IkONk0sYgnMfU+ap43J+1x5GytqdXb440Bw1AeyLhMcQCQUimM6YaH+iY+xqREVYyZpGTIlXt2VmHNR9OvIZd4RXZKQcCL14xX1dBjEQpW1mIAvNfRAc+PSiPQFM727gvYJKJpYbbmWRyLyOrqzfqkqsLVcfIQz4=",
                      "placeholder_text" : "/* TODO */"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwZNO2eJ5pv84Wuo6wjO1wfCkPHpEM1eoda2RQmJ0sD89E63tm4duelXhSfUvLMvuytypP/JEBVsX04C2fJei4YQHGYGP2lXyvH7YH7b5Ot8adDq8ph2JYih/kNRIVAY2aFnjzcHuGI8RMaYZyNeXAqVASQlrY97qfu6z2o5JYNmc"
                },
                "src/direction.cpp" : {
                  "name" : "src/direction.cpp",
                  "placeholders" : [
                    {
                      "offset" : 70,
                      "length" : 22,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "ConsumeAnObject",
                        "file" : "src/direction.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "on/sur0CWG0ibtaPUp4I4RUa30x7yQMzoRa3PT1t+wVzhIhGVGPHM+T6Gr+R6IJV4Hjx4y86zIZwJUAHd/hD8rqBoQrW24nluRsodOi0kuCn9u4lYk/IciCzHS8/gW4QmXrrXZaFLbYxsa4MUeblFoNB91IU6yFnko54WTOpCoMdG1fqKiwO8GrPm4oelSKsg1ivMsUU0ivW3TQJ53B84TyhRBnpirNJFCDlBzi6lEBHU/5slem/JJUyQ1YzRylcgCIB8kummjhHHMZVpHVRV+/TBF3E8THxteUX1w2JaI1ty9qbeI5kZCMZsuLvKNcUmuRjZxIzY3fryRws/poX6qczfP37k4ht59RpqnTRB3qhSjf1joUgXpkD/jF1+qwKnP+D+/AVSO5mGOrDzGhejEnE9jQbU6nv9cwZOK/BiXE=",
                      "placeholder_text" : "return { 0.0f, 0.0f };"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwclPgMsaWrap7oQYk2v2nxgDWb/vs8P1/FdWy6SUTv5cwnV2mz+ZtKKT4SinJQ7rb2xZkKT1CozhDfB+/H3wO96WMo5OQ3Si4k9hM0SSdoAK"
                },
                "src/point.cpp" : {
                  "name" : "src/point.cpp",
                  "placeholders" : [
                    {
                      "offset" : 88,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "ConsumeAnObject",
                        "file" : "src/point.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "INFFZm5M9eNeUYNHh0poE4IjA6Qhliit+YXwuyp8KiidJgZf8F5m/TN12meGrfFZ",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 180,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "ConsumeAnObject",
                        "file" : "src/point.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "pelbdSGe8NgHG+byI/ljy5v/ZQLq/c9yOSKURsdX+MpMLssF9QyW3PScRwJi68X/",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 283,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "ConsumeAnObject",
                        "file" : "src/point.cpp",
                        "placeholder" : 2,
                        "is_visible" : false
                      },
                      "possible_answer" : "SKJuYDb16PU7jYutTiTlSfCAdk8sm41OEn66k7L3tCTPDWPR+FlDsnI2q+usN94C",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwZNO2eJ5pv84Wuo6wjO1wfBdMxdfrCVrva4pftvco4l10ClR7ZZb4cextUBk6sK+pPMnWNtDfgT+Ux70ZEj14VFjYTmFd/CNjrYkftVqTUitGeFd48bQOgkOjG3XbW+gliXBwwjp/0fSQsbgQQSVsc7UfUztqBYjYF+HVnqapyBzCcaIM/6QhCQeUgvXn3C4gqLXFLK3p7MtiGz7t3GYs1dyHveJdHEq+NxhaIl8sXHcBfxxbKXmW6bnVb8PvDv8wI1S/5+XMWczBp2RjyAkEtsgIj0yQU2EhMznaCMWo6g0LQJrurJI1D+TmRK0pEaGysdlalkyh2CKh6VZyEx9BepSwwHAhH4vUeVdkW8Oqv1n0dicl3Adi4KVrqz7wEZydQ=="
                },
                "src/move.cpp" : {
                  "name" : "src/move.cpp",
                  "placeholders" : [
                    {
                      "offset" : 69,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "ConsumeAnObject",
                        "file" : "src/move.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "pROzx0hc0Q1KB+BSFFdI7Bsu+CxUFxIstTorfDkR9NE=",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "DgDba3xw8RdPYu5Vpld1eY1E1In1EtrkhpergIjsa98GD9AajcxH3KPkrZtC79Z0z0WeLwhF/LNOzCk14uM0mog9a08gUS9CQUy3yToBClMpNR864AeSKRzrZlaUOFpZ"
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "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"
                },
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHrPz0+eaKEnrV9oK0/cZgsVj7r6XlmfKyzeoTGhdYL7x+j+S8Fpqp83S9d3nYlfwLfLl+kQbKbDingIPsOTRdNUGMr1TOzxsUfLknS7n1Q+bFxegh1dkEIdI5xTbtQN+hki2BPoUfqBVZyoOtq2wvvvDvEbujI6KBDUGrl1E0ijq2mJS1wl15Dx+Yi6+c79jsjYFvjc8425iWZWAeU9PP1zBxSUzhJrOuOL8oqDM5pWDCC0UzBxth3XpYY2wdCS0MgxNr/M8dxIAuA+00R5GbM1SoOMBYLyd+F00pxwESXIfXBieFHcGhYImaHIe1dpJWwJA5FjQ8VhUoVq73VAmWy79kqXzJJeCnMlGvh8QPSvH9rPNt/i0ryoOBkGgkNSH8tTJh1dDEzFa3Lm8e6X6ASxXiQoZA7+Hun/kTqUzrn7RCZcQsPyMf4VhyZwTkpLODRZCIo4s0YqPwI3NkZcM5//SQdgSZ7aOZLf40FFX/VAwWO1CmtDQeZj5yY6fTuQCdHyKMEWrzYoH737n7rfg+j/WYJOnoUy6CJ0B9zz2tjk+Py0WbF3DNaIp5Sxs9rQzxNj6b9H3NcCr4HFaG453aP8TOgdkDE+YVvIdB7JAe4g4lWPPbl6vJNTU114JB3SG15"
                },
                "test/test.cpp" : {
                  "name" : "test/test.cpp",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "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"
                }
              },
              "description_text" : "It is a bit boring that the consumable object always appears in the same place. \nLet us add a little randomness to its position.\n\nIn this step, your task is to implement the following function:\n\n```c++\nCircle generateCircle(float radius);\n```\n\nThis function should generate a random circle with \nthe given radius within the borders of the scene. \nIn essence, it should generate the center point of this circle.\nIn other words, this task can be reduced to the task \nof generating a floating-point number within a certain range.\n\n```c++\nfloat generateCoordinate(float min, float max);\n```\n\nWhen generating a random 2D point using `generateCoordinate`, remember that\nthe following constants define the borders of the scene:\n* `NORTH_BORDER`\n* `SOUTH_BORDER`\n* `WEST_BORDER`\n* `EAST_BORDER`\n\nAlso, make sure that the resulting circle fits into the borders.\n\nTo implement `generateCoordinate` itself, you can use the `rand` \n[function](https://en.cppreference.com/w/c/numeric/random/rand) \nprovided by C++.\n\n```c++\n// generates a random integer number between 0 and RAND_MAX \nint i = rand();\n```\n\n`RAND_MAX` is a special \n[constant](https://en.cppreference.com/w/cpp/numeric/random/RAND_MAX) \nalso defined in C++.\n\nNote that in your programs, you should initialize \nC++'s random number generator before the first use of the `rand` function. \n\n```c++\n// initializes random number generator \n// passing current time as a source of randomness.\nsrand(time(NULL));\n```\n\nIn the current task, we already did it in the `main` function,\nso you don't have to. You can just call `rand`.\n\nHowever, `rand` generates a random integer number, \nwhile we need a random floating-point number within a certain range. \nTo achieve the latter, use the following formula:\n\n```\nx = min + r / (R / (max - min)) \n```\n\nwhere \n* `x` is the resulting random floating-point number,\n* `min` and `max` are range bounds,\n* `r` is a random integer number,\n* `R` is the maximum integer number `RAND_MAX`.\n",
              "description_format" : "MD",
              "task_type" : "edu"
            },
            {
              "id" : 1927697951,
              "name" : "RunningInALoop",
              "custom_name" : "Running in a Loop",
              "files" : {
                "src/loop.cpp" : {
                  "name" : "src/loop.cpp",
                  "placeholders" : [
                    {
                      "offset" : 110,
                      "length" : 7,
                      "possible_answer" : "EArMiPGxEcesFOBpcEhsHcV8pyVQDoaN2+CWY3kUW2r8InRdtsXAMr3sAQ035kJpGLl6Kr4p8LBPoKUImpHNG9ljXbUhfQGQXdYdW2riHFrutUzQk2BMrWbyPuRXUg4hAaTiroduGwgu+mgGuu0U0VLY4ITgp+y2SqynkFIDW49FxS2OEegXU8ohclHvaDz/",
                      "placeholder_text" : "return;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwUPmxSfhDeyghYpHHd4mHkiul/dQHaHM3BmJ2ZstRZ1f99HsaeUZDrvmHNULx3fEEIigy9kQ7W2EPcFnzXyIO1Q8P2yt5JKdvnKibK716BGoybrhd8c3RAfSOXN252iDg0N0j68mzhH2yz8kV5BiX+w="
                },
                "src/generate.cpp" : {
                  "name" : "src/generate.cpp",
                  "placeholders" : [
                    {
                      "offset" : 130,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "ALittleSpontaneity",
                        "file" : "src/generate.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "vnVhZMzzomxFUxcGj2EayL3K2sEPhqMRdS7tPvaPpmXzIzg/1YXY+Y8ySkpX8klRlmpQMiq0n4l+MksytKA6J1ysdWnLAkt0B03P1sYLgp91zKCQyluECfSt5t7Z/7mPuyp/fvyBqhFuOvwZAy1P0sInsEjx9KsdoB9cwL88IlyiC7Yd5VhxuClRHYDhPk6XGrM/w1geQM12j2OACE5hZHU+uFvh5M8zWG0GIbGnibQ=",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 216,
                      "length" : 11,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "ALittleSpontaneity",
                        "file" : "src/generate.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "oQjURSTyBfR1RKP/OweIpANhNR0lkfwJPHb2rhaqVMtSoTlK7MY2Y6DU/XEMg0+QvRxrph19Dri59rRI0x0wPQ==",
                      "placeholder_text" : "return min;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwdA/cvSiHcC+3/CmPg9jWG1xQu9hOAil0Ux58fy3pkjrjFn0zW+QLZU90DVr6fXFgbQ7htwzOdWzKt1TVEusdYvoQH4xUYKar+wUPL6yIP9t81/BJMrynFMjoKtAIdqcF58Dpkq/vchYrEUEbSvAqe5pCrB4L5rWOkVn4cQUwaSDAq8yzorZzYL7WKLSO/oEOc0NgG2C3rkHcAOg9RhXXuj8YTQUimsyL8zxnWSVE9JA38H+l1lTAZyd/XJdNY2ZMHaL/rwG39BjjT7KyTVlsLYbqXMJPnE12ZL507+qtchH"
                },
                "src/collision.cpp" : {
                  "name" : "src/collision.cpp",
                  "placeholders" : [
                    {
                      "offset" : 83,
                      "length" : 12,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "ALittleSpontaneity",
                        "file" : "src/collision.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "PUlIQgIttPqIGuEH/18h55eyy/dVwuBxaW5B6Wt2Cl9k1eKok2ImVAahHkf+TM9LlEBBW4FeG5u/G82ed9uy9HYex3UlBC+z68n3Tg+D8iUdsSLuBKr8wRe6mK/c0fW1",
                      "placeholder_text" : "return 0.0f;"
                    },
                    {
                      "offset" : 152,
                      "length" : 13,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "ALittleSpontaneity",
                        "file" : "src/collision.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "HUwuwOqnE23TFvPw8T+P6PJ/GfZCM0NnGl7Gh/Idkoza7Qx/Lk0PF+uFyGHNvrItDYMV6IVC8XImmlvNqJ8x5liAjlEY/Xen5SU1zfq3P9TQuXSoSMO9+VsC/7rc/Clk",
                      "placeholder_text" : "return false;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "IyPGAgtVdcN+Yqg8E1sb863Pe500O7MLPzUplJEu0RJUWKj7zTHH8VmQRsIBzRsFXYSLxwrsCZ4RbMUKEjxgsUuzaJpGi59JyUcypqO1scQ3Sfj60LzFuga32RWT5zM/SA7IUN4U9anH9C/QvdILLEy0jJRrbhI55B0ELZRJlj+5By//K52FciEWloQ8P/n38qcy2JKI3x277Hq8E4WQL/RUkYBTv86GeLWZS8cfSFk="
                },
                "src/borders.cpp" : {
                  "name" : "src/borders.cpp",
                  "placeholders" : [
                    {
                      "offset" : 101,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "ALittleSpontaneity",
                        "file" : "src/borders.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "yl5iURF5Apz2XgzAQUW6ycbGngLiVHi5Xgeg5ngjYe8JS2ySwqKXxWHVnddy0p5Eov6lMaANMLK198KkaVJlMC4nO0Gzi8nlyoRmAQMSn/hUGcELpDXJ7Re0XvZOJPoLi9Bqrk9cVQqY7rJFFFrqwT4WPMvfuj6p6mbBmNbMC6FioMO+4Jj3WksYP5Px1oku/+mLsb02qF0fvMAwTH6LajhT1u77Y13pONAryM35j3jzwWcYgf8JflZVnORMq4otuoQMS3AFSbwPz/NlAdaAy/Xv9SC3brMKaw1v6LYwr/r4yzJoToXa0JApK7IJLKVuHW2LNiX3DZ/IkONk0sYgnMfU+ap43J+1x5GytqdXb440Bw1AeyLhMcQCQUimM6YaH+iY+xqREVYyZpGTIlXt2VmHNR9OvIZd4RXZKQcCL14xX1dBjEQpW1mIAvNfRAc+PSiPQFM727gvYJKJpYbbmWRyLyOrqzfqkqsLVcfIQz4=",
                      "placeholder_text" : "/* TODO */"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwZNO2eJ5pv84Wuo6wjO1wfCkPHpEM1eoda2RQmJ0sD89E63tm4duelXhSfUvLMvuytypP/JEBVsX04C2fJei4YQHGYGP2lXyvH7YH7b5Ot8adDq8ph2JYih/kNRIVAY2aFnjzcHuGI8RMaYZyNeXAqVASQlrY97qfu6z2o5JYNmc"
                },
                "src/direction.cpp" : {
                  "name" : "src/direction.cpp",
                  "placeholders" : [
                    {
                      "offset" : 70,
                      "length" : 22,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "ConsumeAnObject",
                        "file" : "src/direction.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "on/sur0CWG0ibtaPUp4I4RUa30x7yQMzoRa3PT1t+wVzhIhGVGPHM+T6Gr+R6IJV4Hjx4y86zIZwJUAHd/hD8rqBoQrW24nluRsodOi0kuCn9u4lYk/IciCzHS8/gW4QmXrrXZaFLbYxsa4MUeblFoNB91IU6yFnko54WTOpCoMdG1fqKiwO8GrPm4oelSKsg1ivMsUU0ivW3TQJ53B84TyhRBnpirNJFCDlBzi6lEBHU/5slem/JJUyQ1YzRylcgCIB8kummjhHHMZVpHVRV+/TBF3E8THxteUX1w2JaI1ty9qbeI5kZCMZsuLvKNcUmuRjZxIzY3fryRws/poX6qczfP37k4ht59RpqnTRB3qhSjf1joUgXpkD/jF1+qwKnP+D+/AVSO5mGOrDzGhejEnE9jQbU6nv9cwZOK/BiXE=",
                      "placeholder_text" : "return { 0.0f, 0.0f };"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwclPgMsaWrap7oQYk2v2nxgDWb/vs8P1/FdWy6SUTv5cwnV2mz+ZtKKT4SinJQ7rb2xZkKT1CozhDfB+/H3wO96WMo5OQ3Si4k9hM0SSdoAK"
                },
                "src/point.cpp" : {
                  "name" : "src/point.cpp",
                  "placeholders" : [
                    {
                      "offset" : 88,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "ALittleSpontaneity",
                        "file" : "src/point.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "INFFZm5M9eNeUYNHh0poE4IjA6Qhliit+YXwuyp8KiidJgZf8F5m/TN12meGrfFZ",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 180,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "ALittleSpontaneity",
                        "file" : "src/point.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "pelbdSGe8NgHG+byI/ljy5v/ZQLq/c9yOSKURsdX+MpMLssF9QyW3PScRwJi68X/",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 283,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "ALittleSpontaneity",
                        "file" : "src/point.cpp",
                        "placeholder" : 2,
                        "is_visible" : false
                      },
                      "possible_answer" : "SKJuYDb16PU7jYutTiTlSfCAdk8sm41OEn66k7L3tCTPDWPR+FlDsnI2q+usN94C",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwZNO2eJ5pv84Wuo6wjO1wfBdMxdfrCVrva4pftvco4l10ClR7ZZb4cextUBk6sK+pPMnWNtDfgT+Ux70ZEj14VFjYTmFd/CNjrYkftVqTUitGeFd48bQOgkOjG3XbW+gliXBwwjp/0fSQsbgQQSVsc7UfUztqBYjYF+HVnqapyBzCcaIM/6QhCQeUgvXn3C4gqLXFLK3p7MtiGz7t3GYs1dyHveJdHEq+NxhaIl8sXHcBfxxbKXmW6bnVb8PvDv8wI1S/5+XMWczBp2RjyAkEtsgIj0yQU2EhMznaCMWo6g0LQJrurJI1D+TmRK0pEaGysdlalkyh2CKh6VZyEx9BepSwwHAhH4vUeVdkW8Oqv1n0dicl3Adi4KVrqz7wEZydQ=="
                },
                "src/move.cpp" : {
                  "name" : "src/move.cpp",
                  "placeholders" : [
                    {
                      "offset" : 69,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "ALittleSpontaneity",
                        "file" : "src/move.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "pROzx0hc0Q1KB+BSFFdI7Bsu+CxUFxIstTorfDkR9NE=",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "DgDba3xw8RdPYu5Vpld1eY1E1In1EtrkhpergIjsa98GD9AajcxH3KPkrZtC79Z0z0WeLwhF/LNOzCk14uM0mog9a08gUS9CQUy3yToBClMpNR864AeSKRzrZlaUOFpZ"
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "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"
                },
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHrJphuV4anAmdsjE4SPzObGVM/O9GAQXED7F7GGcKH5bHafzhiXkCsk7mKy8oaPYRZWjCEknYLVc6wPu2KULvpFiGmQcQf/0RYImXavNverbov96AnY4zYsRMh8+4kivn9yrGTNXIj9JAokc+r3r7JDj4/QniXb8nNVqeZK/2tKPkEeZ5aoDh26iL8b6QqiMJGzd/qF5fOWtDU/4CqJUqp/L1sBom/GYQ36aXQHf+9ftPpYvjX2kd8KUnVamRzvcwV3LK39T0JEadgg0tSJvur/xb9+TW8XTvEh5WUdDXm9ly7wGzhNwthKV3fiRrPZEhl0dQvLp0kylK0Mi+3JX+tnssPbda9UoM2mFHnbnt9NRTjkG9Gr6E+6F+jmJG5Fv4GB+gKG32SSTdKADclh3AUUClNsH2536+v3i0um0aQsY912xGlWeNsg5VETG0mxFzU/+Xws51rmInHkTjG16VN603CBY0ojz9//N7bCXfisry6bMMtmOIIiZyVKIfcjrHpST1ClPKkFAgB8eG6iPKaMwlD483ExhD7LUOLZui1fSWLNbuDBkAaf2jhztv4CeX2lSQwo2TyX0Mqglgd3bAY3Xq6/c1d+tmo344UHWgI+0PvIrN3pndYXL0LoFjLA36hCt3DKNjIaLK1ej4t6qgXHA=="
                },
                "test/test.cpp" : {
                  "name" : "test/test.cpp",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "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"
                }
              },
              "description_text" : "Let us add more consumable objects to the scene!\n\nWe can store several variables of the same type in an \n[_array_](https://en.cppreference.com/w/cpp/language/array). \n\n```c++\nconst int SIZE = 4;\nCircle circles[SIZE];\n```\n\nThe code snippet above defines an array containing 4 structures of type `Circle`.\nTo access the `i`-th element of the array, use the square bracket syntax.\nNote that indexing starts from `0`, that is, the first element of the array has the index `0`.\n\n```c++\n// reassigns the radius of the first circle in the array \ncircles[0].radius = 2.0f;\n```\n\nWhen working with arrays, one of recurring tasks is to \niterate over all the elements of an array and \nperform some computations with each of them.\nHere the `for` [statement](https://en.cppreference.com/w/cpp/language/for) \ncomes to the rescue. \n\n```c++\n// prints radii of all circles in the array\nfor (int i = 0; i < SIZE; ++i) {\n    std::cout << circles[i] << \" \";\n}\n```\n\nThe `for` loop consists of the following:\n* initialization statement: `int i = 0`,\n* condition expression: `i < SIZE`,\n* iteration expression: `++i`,\n* body of the loop: `std::cout << circles[i] << \" \";`.\n\nThe execution of the `for` loop proceeds as follows:\n* when the execution reaches the `for` loop, the initialization statement is executed;\n* next, on each iteration, the condition expression is evaluated:\n  * if it evaluates to `true`, then the execution proceeds to the loop body, \n  * if it evaluates to `false`, then the execution quits the loop;\n* on each iteration, after the execution of the loop's body finishes, \n  the iteration expression is executed and the execution proceeds to the next iteration. \n\nNote that above we used an \n[increment operator](https://en.cppreference.com/w/cpp/language/operator_incdec) `++i`.\nThis expression increments the value of the variable by `1` \nand returns the new value.\n\n```c++\nint x = 0;\nint y = ++x;\n// prints \"1, 1\"\nstd::cout << x << \", \" << y;\n```\n\nSimilarly, there exists a decrement expression: `--i`.\n\n```c++\nint x = 0;\nint y = --x;\n// prints \"-1, -1\"\nstd::cout << x << \", \" << y;\n```\n\nBoth increment and decrement expressions can be used in a pre- or post-form. \nAbove, we have seen pre-increment (and pre-decrement): it first increments \nthe variable and then returns the new value.\nPost-increment (and post-decrement) is written as `x++` (or `x--` correspondingly):\nit also increments the variable but returns its value prior to the modification.\n\nIn the `for` loop, the condition and iteration expression can be arbitrarily complex.\nIt gives great flexibility when working with `for` loops. \nFor example, to iterate over the elements with an even index in the array, \none can use the following code:\n\n```c++\n// prints radii of all circles with an even index in the array\nfor (int i = 0; i < SIZE; i += 2) {\n    std::cout << circles[i] << \" \";\n}\n```\n\nWith all the theory given above, \nyour next task is to check for collisions \nof the player object with all the \nconsumable objects on the screen. \nTo do so, implement the following function:\n\n```c++\nvoid collisionLoop(Circle player, Circle consumable[], bool consumed[], int size);\n```\n\nIt takes the circle shape of the playable object and\nan array of shapes of consumable objects \ntogether with the boolean array of their state:\n* `consumed[i] == true` means that the `i`-th object is consumed;\n* `consumed[i] == false` means that the `i`-th object is not yet consumed.\n\nBoth arrays have the same size equal to the total number\nof consumable objects on the scene given as the last argument.\n\nThe function should check whether the playable object \ncollides with any of the consumable objects \nand if so, set the state of the corresponding object to \"consumed\".\nNote that once an object is consumed, it cannot change its \nstate back to \"non-consumed\".\nTo detect collisions, use the `collision` function from the previous steps.",
              "description_format" : "MD",
              "task_type" : "edu"
            },
            {
              "id" : 243246015,
              "name" : "KeepSpinning",
              "custom_name" : "Keep Spinning",
              "files" : {
                "src/loop.cpp" : {
                  "name" : "src/loop.cpp",
                  "placeholders" : [
                    {
                      "offset" : 110,
                      "length" : 7,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "RunningInALoop",
                        "file" : "src/loop.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "EArMiPGxEcesFOBpcEhsHcV8pyVQDoaN2+CWY3kUW2r8InRdtsXAMr3sAQ035kJpGLl6Kr4p8LBPoKUImpHNG9ljXbUhfQGQXdYdW2riHFrutUzQk2BMrWbyPuRXUg4hAaTiroduGwgu+mgGuu0U0VLY4ITgp+y2SqynkFIDW49FxS2OEegXU8ohclHvaDz/",
                      "placeholder_text" : "return;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwUPmxSfhDeyghYpHHd4mHkiul/dQHaHM3BmJ2ZstRZ1f99HsaeUZDrvmHNULx3fEEIigy9kQ7W2EPcFnzXyIO1Q8P2yt5JKdvnKibK716BGoybrhd8c3RAfSOXN252iDg0N0j68mzhH2yz8kV5BiX+w="
                },
                "src/generate.cpp" : {
                  "name" : "src/generate.cpp",
                  "placeholders" : [
                    {
                      "offset" : 130,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "RunningInALoop",
                        "file" : "src/generate.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "vnVhZMzzomxFUxcGj2EayL3K2sEPhqMRdS7tPvaPpmXzIzg/1YXY+Y8ySkpX8klRlmpQMiq0n4l+MksytKA6J1ysdWnLAkt0B03P1sYLgp91zKCQyluECfSt5t7Z/7mPuyp/fvyBqhFuOvwZAy1P0sInsEjx9KsdoB9cwL88IlyiC7Yd5VhxuClRHYDhPk6XGrM/w1geQM12j2OACE5hZHU+uFvh5M8zWG0GIbGnibQ=",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 216,
                      "length" : 11,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "RunningInALoop",
                        "file" : "src/generate.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "oQjURSTyBfR1RKP/OweIpANhNR0lkfwJPHb2rhaqVMtSoTlK7MY2Y6DU/XEMg0+QvRxrph19Dri59rRI0x0wPQ==",
                      "placeholder_text" : "return min;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwdA/cvSiHcC+3/CmPg9jWG1xQu9hOAil0Ux58fy3pkjrjFn0zW+QLZU90DVr6fXFgbQ7htwzOdWzKt1TVEusdYvoQH4xUYKar+wUPL6yIP9t81/BJMrynFMjoKtAIdqcF58Dpkq/vchYrEUEbSvAqe5pCrB4L5rWOkVn4cQUwaSDAq8yzorZzYL7WKLSO/oEOc0NgG2C3rkHcAOg9RhXXuj8YTQUimsyL8zxnWSVE9JA38H+l1lTAZyd/XJdNY2ZMHaL/rwG39BjjT7KyTVlsLYbqXMJPnE12ZL507+qtchH"
                },
                "src/collision.cpp" : {
                  "name" : "src/collision.cpp",
                  "placeholders" : [
                    {
                      "offset" : 83,
                      "length" : 12,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "RunningInALoop",
                        "file" : "src/collision.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "PUlIQgIttPqIGuEH/18h55eyy/dVwuBxaW5B6Wt2Cl9k1eKok2ImVAahHkf+TM9LlEBBW4FeG5u/G82ed9uy9HYex3UlBC+z68n3Tg+D8iUdsSLuBKr8wRe6mK/c0fW1",
                      "placeholder_text" : "return 0.0f;"
                    },
                    {
                      "offset" : 152,
                      "length" : 13,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "RunningInALoop",
                        "file" : "src/collision.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "HUwuwOqnE23TFvPw8T+P6PJ/GfZCM0NnGl7Gh/Idkoza7Qx/Lk0PF+uFyGHNvrItDYMV6IVC8XImmlvNqJ8x5liAjlEY/Xen5SU1zfq3P9TQuXSoSMO9+VsC/7rc/Clk",
                      "placeholder_text" : "return false;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "IyPGAgtVdcN+Yqg8E1sb863Pe500O7MLPzUplJEu0RJUWKj7zTHH8VmQRsIBzRsFXYSLxwrsCZ4RbMUKEjxgsUuzaJpGi59JyUcypqO1scQ3Sfj60LzFuga32RWT5zM/SA7IUN4U9anH9C/QvdILLEy0jJRrbhI55B0ELZRJlj+5By//K52FciEWloQ8P/n38qcy2JKI3x277Hq8E4WQL/RUkYBTv86GeLWZS8cfSFk="
                },
                "src/borders.cpp" : {
                  "name" : "src/borders.cpp",
                  "placeholders" : [
                    {
                      "offset" : 101,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "RunningInALoop",
                        "file" : "src/borders.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "yl5iURF5Apz2XgzAQUW6ycbGngLiVHi5Xgeg5ngjYe8JS2ySwqKXxWHVnddy0p5Eov6lMaANMLK198KkaVJlMC4nO0Gzi8nlyoRmAQMSn/hUGcELpDXJ7Re0XvZOJPoLi9Bqrk9cVQqY7rJFFFrqwT4WPMvfuj6p6mbBmNbMC6FioMO+4Jj3WksYP5Px1oku/+mLsb02qF0fvMAwTH6LajhT1u77Y13pONAryM35j3jzwWcYgf8JflZVnORMq4otuoQMS3AFSbwPz/NlAdaAy/Xv9SC3brMKaw1v6LYwr/r4yzJoToXa0JApK7IJLKVuHW2LNiX3DZ/IkONk0sYgnMfU+ap43J+1x5GytqdXb440Bw1AeyLhMcQCQUimM6YaH+iY+xqREVYyZpGTIlXt2VmHNR9OvIZd4RXZKQcCL14xX1dBjEQpW1mIAvNfRAc+PSiPQFM727gvYJKJpYbbmWRyLyOrqzfqkqsLVcfIQz4=",
                      "placeholder_text" : "/* TODO */"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwZNO2eJ5pv84Wuo6wjO1wfCkPHpEM1eoda2RQmJ0sD89E63tm4duelXhSfUvLMvuytypP/JEBVsX04C2fJei4YQHGYGP2lXyvH7YH7b5Ot8adDq8ph2JYih/kNRIVAY2aFnjzcHuGI8RMaYZyNeXAqVASQlrY97qfu6z2o5JYNmc"
                },
                "src/direction.cpp" : {
                  "name" : "src/direction.cpp",
                  "placeholders" : [
                    {
                      "offset" : 70,
                      "length" : 22,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "RunningInALoop",
                        "file" : "src/direction.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "on/sur0CWG0ibtaPUp4I4RUa30x7yQMzoRa3PT1t+wVzhIhGVGPHM+T6Gr+R6IJV4Hjx4y86zIZwJUAHd/hD8rqBoQrW24nluRsodOi0kuCn9u4lYk/IciCzHS8/gW4QmXrrXZaFLbYxsa4MUeblFoNB91IU6yFnko54WTOpCoMdG1fqKiwO8GrPm4oelSKsg1ivMsUU0ivW3TQJ53B84TyhRBnpirNJFCDlBzi6lEBHU/5slem/JJUyQ1YzRylcgCIB8kummjhHHMZVpHVRV+/TBF3E8THxteUX1w2JaI1ty9qbeI5kZCMZsuLvKNcUmuRjZxIzY3fryRws/poX6qczfP37k4ht59RpqnTRB3qhSjf1joUgXpkD/jF1+qwKnP+D+/AVSO5mGOrDzGhejEnE9jQbU6nv9cwZOK/BiXE=",
                      "placeholder_text" : "return { 0.0f, 0.0f };"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwclPgMsaWrap7oQYk2v2nxgDWb/vs8P1/FdWy6SUTv5cwnV2mz+ZtKKT4SinJQ7rb2xZkKT1CozhDfB+/H3wO96WMo5OQ3Si4k9hM0SSdoAK"
                },
                "src/point.cpp" : {
                  "name" : "src/point.cpp",
                  "placeholders" : [
                    {
                      "offset" : 88,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "RunningInALoop",
                        "file" : "src/point.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "INFFZm5M9eNeUYNHh0poE4IjA6Qhliit+YXwuyp8KiidJgZf8F5m/TN12meGrfFZ",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 180,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "RunningInALoop",
                        "file" : "src/point.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "pelbdSGe8NgHG+byI/ljy5v/ZQLq/c9yOSKURsdX+MpMLssF9QyW3PScRwJi68X/",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 283,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "RunningInALoop",
                        "file" : "src/point.cpp",
                        "placeholder" : 2,
                        "is_visible" : false
                      },
                      "possible_answer" : "SKJuYDb16PU7jYutTiTlSfCAdk8sm41OEn66k7L3tCTPDWPR+FlDsnI2q+usN94C",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwZNO2eJ5pv84Wuo6wjO1wfBdMxdfrCVrva4pftvco4l10ClR7ZZb4cextUBk6sK+pPMnWNtDfgT+Ux70ZEj14VFjYTmFd/CNjrYkftVqTUitGeFd48bQOgkOjG3XbW+gliXBwwjp/0fSQsbgQQSVsc7UfUztqBYjYF+HVnqapyBzCcaIM/6QhCQeUgvXn3C4gqLXFLK3p7MtiGz7t3GYs1dyHveJdHEq+NxhaIl8sXHcBfxxbKXmW6bnVb8PvDv8wI1S/5+XMWczBp2RjyAkEtsgIj0yQU2EhMznaCMWo6g0LQJrurJI1D+TmRK0pEaGysdlalkyh2CKh6VZyEx9BepSwwHAhH4vUeVdkW8Oqv1n0dicl3Adi4KVrqz7wEZydQ=="
                },
                "src/move.cpp" : {
                  "name" : "src/move.cpp",
                  "placeholders" : [
                    {
                      "offset" : 69,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "RunningInALoop",
                        "file" : "src/move.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "pROzx0hc0Q1KB+BSFFdI7Bsu+CxUFxIstTorfDkR9NE=",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "DgDba3xw8RdPYu5Vpld1eY1E1In1EtrkhpergIjsa98GD9AajcxH3KPkrZtC79Z0z0WeLwhF/LNOzCk14uM0mog9a08gUS9CQUy3yToBClMpNR864AeSKRzrZlaUOFpZ"
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "sO5DNyXZvapiyUJ9oytvhZnO0vQCQ/ddX/mDN3YavjBhlgW1qxDtfNWlf8pz0P/G37hEadUKSxY6ZgWysyPkLLuXgZiLb0k5Lcm7QtjFl2nC4UkYDnKh91nxT/8Aiq3ZzsNR87sRG4ElnbM4gikl/iNs6fj4gHGbRAhyHAHRQaTazXluMnukncwLS2KSaSQ/99Jdn+lM74uSfPCerBWXvjjRCgdKBsq5zGHKHuhWhqRxC7pKp93RxUlsXrEVGmP9lHOfN75u3pk8pC/8NPVGi4iUsNHumMqZD7cWL0+kq2vMO1vI3ELIEN/MsSFBcoxYX9h6BuOTNkgnMzE7truDucmUz01eKdjBBQeoDHPHmk2qln+ROBQCLfgWMJ0qoSmU1SkMKIUMKbZz1I/dr//zAn1WBqgZ9nHwniDrrC02Z48x4tJoZeMybCf90rfIzBnfv/J9EGZ0yY/476NxQwKdhcKlTkm91wwzewl1cdFvCMMx2+QXntann0xO9ZTNQZRAsc9AEVdHAz5n1DJhoIlasPYS3RqbD9tqluVrzyDr1ldpjkkW1P1l6VjtVIahuFzU2QPQrpIAhJgr+3SQgCO949QsC+Z8YRDvjtFkdknHcy0s5Sa2dvcBSsGdtsRscFBWYglxo3o0xhRp6R48dDaroDhmPB0c5658DEApSRff+gM2NyKFHEZvZiwrL4fT14mkTpWpQBf3sGkdLiA6ztUMf5o++RkPaOW4Xeqr9ZTLZCpjIqYi958QCisc/Y2C6rRShn2fEcBz7r5TF5uINjlmObYsiiZNVLFmYGrPRx+wBxcMLfVq3nEFCPuxOFXjAh9r5tHSbBJwwbaLPJOwX80D6ygmxcXS0VilinaHI82aINchXKHs+LZph5vb2apk2M1b0+pAq1gdB8v9MIqqdhDfXsVq7LtdrO1XjF/51ZrZJ1gW64HShGWU2ziT10v4t1IlkdHRZarqpsgmETbbr5KDYhKethE2112xSrWEkHYhWtbzrWNl59v2YYYvuXztD+DrfoNh/M5zz3uYeoNmAZjPYU2Mruzv+qsYTrKnbhIwwLtCOAbjuN3RrolyT/nUS0Yov7QAnaFodTIQtxUBkZqaFa2ehm0pK2RaSqFUA280HgkFop0p4+dv01gsmRY4N6feW+/CMG5dfAWWdmtA4yzoo8cmTsPj3WOxcVNIwf5CTyQ7QKyJai3dth87UGzBaeVzNYXYS6o+xfYcFWY7O/ffw6ll3BVmnE8eX0LuWtOQV86WvW7H2YzrztoUPclfqPFkFLGIeNv3xKuj9XGsHIzKgbysIEYydS5VuMY/Ase2AuD+F3dbVEUhlgQnkfNKSbqAxEMq1LXxeRt12YEibRMZCHtdQCXWvJwk4u31wV/l9PcUNzpquffQ4+UoWaQQFilONOFECRLJTWVhezK4zKo+/J2fL1n1PjgJCsPRWgmDvRwmo27AaOzpFBl0dICtrInUzfbAXPn68Fv8pFhUBVXT2L9KTgnruVD2AnuYVtBgvZOpIPDDVhy+UZNvwG6sM4QKkDFEWYMDLPxbTpkyjhKzFPcXixMAFVp5Nv2lxJnDBFoXrG5ORkQA1941BRHIuAUw1LNbYyPPEv6G2O/LAOIAbiIMGSdADvlCm9JRB2K7lvG/4piTwBIZa1umOktrjduLdMKq82PCuzXJnBeOhx5IjWfRvrvXnd5SS37pYZZN43Xp71ftCDp5/8wXX8ZZS2ITY6ZYUinVp26ROoecZ/RYUHHfFAtAvvKd+sh7pnd+n4GGHZ1VUAFOInEr2hsQwxaz8kmDTGveeXyZ81o+lrmbf9n5Qkq5dT73ri00lKzIlqJQqpIldYPRr3uUp6bAzWUbAxd4l9DJhXd8SYVJVkUkn9Mlyvq1zI+4bVFosQljE8poMWtks11v/ySI/I6dRD9qq+Y8anQJttCwyDvkgTTaRCrE1SSUbRBG9z2y/f/nB4bB8IJVlhyFrEDuWMNSrKQKdJARvQk5h/nKzgUscRA8JRI83vo61uFHO+oNQRz1WWumjZiXGH+s6nHoud70FgtzP0jD2Lx8Cg+GdoaotfJvjnre2Jjpt1FvHhCXRR1KW3ZAXcSIZNS76IrneyedMJgpwBt0aEhho9h6AbNxpbKM9EDqq4QjcJGN2E6OoR0WVDUOcII6YEL/PsR2bnrylJked73tAuTq/mpXKrhGdYAvRyC+VxIT0NQCv1G0L8MqRlREaj2qANdmMM7PeYBVySi9e2Qu5DJ63onH0SqirEp4bKiM6klnYdQPZfiVAIjR2wHRJ2hfPHDM17/3uJJ1iUQbOEbALw7QWd1pzFx7O+dKvmpByeJU37V70tIl/1WNzOFHd3fWIcbVtMvD9t+ur1Z0lIJOZYTooF4gNsYz7pewDJbR8dW32tw7Q4/E+7R6hrsy4ztSq0P0+Oi+mzg3PkVsthGgADq4TAIqyJBQcYVeS+Zmi98Oe9WH+otVHZ72E6KeZhgGgaz9A+IYINDyD7FifWjJ9J93VsGlQE6Dn1k/V/4a3zHz8z15CvuDU4KoIehingjBaox6b+uvc+CdWWvClHjM34TeCr8jzkUumFq6Sxcaj6rII+7iCRO01HIF3P8ipJq6FLfHaucVWe4xGV3kDk/r46adygatGCrok/WlZwe9XYLfNieOgE4PB7SCLGl68iyhuzbybXetnOdtzt8QcTKnPWRCUjkG3KVDzid8WbrCEO6rWFmEb3XvZdMYfQF/lPiMYVS05+EJZyLrIDz/1hEuTodraYtBPBjKZ0ZTGAI5BC7mMHijvAe/EJJdkshKgfu/uIaCHGQK7Hbkwjjp7L1ZuWocdTmzTY+JvFibr+K+LwLnqj4DmHg+wJt+8CS4qYKMuEuOsIZ/m3uDaDnrk+KBaoePXk5begczxoCm79qwR6W+T3p3oIxPXB2wZskB14xV2u7CtLVlBTDiWuE07dFMNYb6RVBesKBiM6oCLtce+JcPqKhqxjQLcpiDgacbNkGH/6SQZlajIRxeS/Qi7oKM5W5DtRqvUfUV/+Yy3M4jJ6qnoq9phHCsaD9VU8+pDaPZo3cAy5sOnWp3zJ1flwDhhzBB9AMmmI7QvQzzRTV8WAxPJcQcReaSlqNoYkiaJqyi29b6YXKLZLLfyBHlled9iMsqGqUHsmp/ZsIbplr199JsAukd5+6t96o6CE7JPheK3mAQUjETP9zx25dUWLZ/N3jkaZU50Xo3qItZ27XStsGBPcUpH7UjlOXW8ikf0z2S/3GNnjhm3gIOpFc4Hwt9cHfZaUyOsSiI8UaH+z3QYrBLhFqj1QH+agDYkKeY1LWyWPSWOCe6CmxWvBiNvx4NqXAhMjsP5oGxU4gWi78FHpfwaI9NgNHMhCRCGQVBnTB84uDd1b+BkAJB3tIA5cQ3LtZOtrJ4V4xzbS4r1cp+G0ETXQYOaoCIyiAGEvF8J0OAF4R0V4/SpZJBcpfgdic9294jI9M3olBYAbB+eclat7wKLWeDASiuxm9RlbTBiUNFk3DYyEEBncbbgnnM8bl06tAh9ZIltyP1sbAjf5k15TPSZs0eGy4yckg9GeuNx4cukNIq3L6vp2UMRr3pD+LTQvAFEWOOXS9wQ9g4TbcIKUHQxvxqkj3arOO3fGS6YoOgzEMZ3T8vMDDtYCVwWz0+TfZ5QGOdFI+ITSPOCmWQ5aitU+SmAIbQGBkdLDh/pwlG8ditl7Bn1JJXz/1l4LWAcxlyH67M58ueESUr/Br8peAAIuKy3tuiMcFHKVLIKcu6ZAiJP4e01pLodduPILSWSMocMv7BvNkgmhvvmrYiUsRt8I7/nwJbOWz4TNeCjbPckHksVbeES5DLfCKgKeKZVJz33S9PbmWKSzPSat7xNNNX2Xq0UTxMTw58rxXtjhUQxJwf6mNwSXbSyj2LChrig8hGdfOY2HP9+ntnbdEhlPMlv4UJe6+M/fd60nzbxT5vZ4PNKdG53Ofsk83n"
                },
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHr0U7PyOCwozyD6Bt1g9aaRyKlFPqhm2S7SAJg/PQcqcwE4DQTwo0uY9uMvvLndC39BCI6fRNRSaagQYPAZlAzTtWfpAXT8Qn0A9eNi/86hQqGDT2+8WSI8Wv0MzDBD4RL2xF33Cuz2kK/9/y3X7lKmv6oPVfjB/qz1/M1F/Rom1pKvjY93p4qQGWJi2ATncEwbZBP/dEv7EmCQ3bQK68sZtnwLOQWGsuDH3YIGoewVwpXZJdXzuwr47Q98yd2UU6Mfjob4PvddsOAuSKXBCGbiWgO9T3e016YzKx0B6W5UApRbqqyk7t7EjygRNOOSl/p9az4w3okR5B1hy9iUOqUPTtyW4Y+CWR2AThxvzC3sOqitAX7RJegzrwDSKKi2wXVS1YL1zbZOWLGnKWlCkkmVbEdZJ9jCT8vBhAqJaqtAlqLSg1QJ/g6g992FCbFT+hlwJurWbZCAX5vjV3V/L+Ft61EekJ/1r2EPBg8VCblp+w="
                }
              },
              "description_text" : "Besides the `for` loop statement, C++ also provides the \n`while` [loop statement](https://en.cppreference.com/w/cpp/language/while) \nand the `do-while` [loop statement](https://en.cppreference.com/w/cpp/language/do).\n\n```c++\nint x = 3;\nwhile (x > 0) {\n    std::cout << x << \" \";\n    --x;\n}\nstd::cout << \"...\";\n// prints \"3 2 1 ...\" \n```\n\nThe `while` loop consists of a condition expression and the loop body. \nThe body of the `while` loop statement is executed while \nthe condition expression evaluates to `true`.\nNote that the body may not be executed even once if the \ncondition evaluates to `false` from the beginning.\nIf you need the body to be executed at least once, \nuse the `do-while` loop statement.\n\n```c++\nint x = 3;\ndo {\n    std::cout << x << \" \";\n    --x;\n} while (x > 0);\nstd::cout << \"...\";\n// prints \"3 2 1 ...\" \n```\n\nHere are some general recommendations on what type of loop statement to use.\n\n* Prefer the `for` loop if you need to iterate over an array or some other collection of elements.\n* Prefer the `while` loop if you need to repeat the execution of some block of code \n  until a certain condition is met. If additionally you want to be sure that \n  this block of code is executed at least once, then use the `do-while` loop.   \n\nFor example, the `while` or `do-while` loop is commonly used in interactive applications \nto implement the so-called \"main loop\" of the application. \nIn this case, on each iteration of the loop, the program reads \ninput from the user and then calls some function to handle user-provided data\nuntil the user signals to close the application.\n\n```c++\n// DoNothing application. \n// It reads user input and does nothing with it\n// unless the user passes the \"exit\" string to terminate the application.\nstd::string input;\ndo {\n    std::cin >> input;\n} while (input != \"exit\");\n```",
              "description_format" : "MD",
              "task_type" : "theory"
            },
            {
              "id" : 1988427257,
              "name" : "LimitsOfPossible",
              "custom_name" : "Limits of Possible",
              "files" : {
                "src/loop.cpp" : {
                  "name" : "src/loop.cpp",
                  "placeholders" : [
                    {
                      "offset" : 110,
                      "length" : 7,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "KeepSpinning",
                        "file" : "src/loop.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "EArMiPGxEcesFOBpcEhsHcV8pyVQDoaN2+CWY3kUW2r8InRdtsXAMr3sAQ035kJpGLl6Kr4p8LBPoKUImpHNG9ljXbUhfQGQXdYdW2riHFrutUzQk2BMrWbyPuRXUg4hAaTiroduGwgu+mgGuu0U0VLY4ITgp+y2SqynkFIDW49FxS2OEegXU8ohclHvaDz/",
                      "placeholder_text" : "return;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwUPmxSfhDeyghYpHHd4mHkiul/dQHaHM3BmJ2ZstRZ1f99HsaeUZDrvmHNULx3fEEIigy9kQ7W2EPcFnzXyIO1Q8P2yt5JKdvnKibK716BGoybrhd8c3RAfSOXN252iDg0N0j68mzhH2yz8kV5BiX+w="
                },
                "src/generate.cpp" : {
                  "name" : "src/generate.cpp",
                  "placeholders" : [
                    {
                      "offset" : 130,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "KeepSpinning",
                        "file" : "src/generate.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "vnVhZMzzomxFUxcGj2EayL3K2sEPhqMRdS7tPvaPpmXzIzg/1YXY+Y8ySkpX8klRlmpQMiq0n4l+MksytKA6J1ysdWnLAkt0B03P1sYLgp91zKCQyluECfSt5t7Z/7mPuyp/fvyBqhFuOvwZAy1P0sInsEjx9KsdoB9cwL88IlyiC7Yd5VhxuClRHYDhPk6XGrM/w1geQM12j2OACE5hZHU+uFvh5M8zWG0GIbGnibQ=",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 216,
                      "length" : 11,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "KeepSpinning",
                        "file" : "src/generate.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "oQjURSTyBfR1RKP/OweIpANhNR0lkfwJPHb2rhaqVMtSoTlK7MY2Y6DU/XEMg0+QvRxrph19Dri59rRI0x0wPQ==",
                      "placeholder_text" : "return min;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwdA/cvSiHcC+3/CmPg9jWG1xQu9hOAil0Ux58fy3pkjrjFn0zW+QLZU90DVr6fXFgbQ7htwzOdWzKt1TVEusdYvoQH4xUYKar+wUPL6yIP9t81/BJMrynFMjoKtAIdqcF58Dpkq/vchYrEUEbSvAqe5pCrB4L5rWOkVn4cQUwaSDAq8yzorZzYL7WKLSO/oEOc0NgG2C3rkHcAOg9RhXXuj8YTQUimsyL8zxnWSVE9JA38H+l1lTAZyd/XJdNY2ZMHaL/rwG39BjjT7KyTVlsLYbqXMJPnE12ZL507+qtchH"
                },
                "src/collision.cpp" : {
                  "name" : "src/collision.cpp",
                  "placeholders" : [
                    {
                      "offset" : 83,
                      "length" : 12,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "KeepSpinning",
                        "file" : "src/collision.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "PUlIQgIttPqIGuEH/18h55eyy/dVwuBxaW5B6Wt2Cl9k1eKok2ImVAahHkf+TM9LlEBBW4FeG5u/G82ed9uy9HYex3UlBC+z68n3Tg+D8iUdsSLuBKr8wRe6mK/c0fW1",
                      "placeholder_text" : "return 0.0f;"
                    },
                    {
                      "offset" : 152,
                      "length" : 13,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "KeepSpinning",
                        "file" : "src/collision.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "HUwuwOqnE23TFvPw8T+P6PJ/GfZCM0NnGl7Gh/Idkoza7Qx/Lk0PF+uFyGHNvrItDYMV6IVC8XImmlvNqJ8x5liAjlEY/Xen5SU1zfq3P9TQuXSoSMO9+VsC/7rc/Clk",
                      "placeholder_text" : "return false;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "IyPGAgtVdcN+Yqg8E1sb863Pe500O7MLPzUplJEu0RJUWKj7zTHH8VmQRsIBzRsFXYSLxwrsCZ4RbMUKEjxgsUuzaJpGi59JyUcypqO1scQ3Sfj60LzFuga32RWT5zM/SA7IUN4U9anH9C/QvdILLEy0jJRrbhI55B0ELZRJlj+5By//K52FciEWloQ8P/n38qcy2JKI3x277Hq8E4WQL/RUkYBTv86GeLWZS8cfSFk="
                },
                "src/direction.cpp" : {
                  "name" : "src/direction.cpp",
                  "placeholders" : [
                    {
                      "offset" : 70,
                      "length" : 22,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "KeepSpinning",
                        "file" : "src/direction.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "on/sur0CWG0ibtaPUp4I4RUa30x7yQMzoRa3PT1t+wVzhIhGVGPHM+T6Gr+R6IJV4Hjx4y86zIZwJUAHd/hD8rqBoQrW24nluRsodOi0kuCn9u4lYk/IciCzHS8/gW4QmXrrXZaFLbYxsa4MUeblFoNB91IU6yFnko54WTOpCoMdG1fqKiwO8GrPm4oelSKsg1ivMsUU0ivW3TQJ53B84TyhRBnpirNJFCDlBzi6lEBHU/5slem/JJUyQ1YzRylcgCIB8kummjhHHMZVpHVRV+/TBF3E8THxteUX1w2JaI1ty9qbeI5kZCMZsuLvKNcUmuRjZxIzY3fryRws/poX6qczfP37k4ht59RpqnTRB3qhSjf1joUgXpkD/jF1+qwKnP+D+/AVSO5mGOrDzGhejEnE9jQbU6nv9cwZOK/BiXE=",
                      "placeholder_text" : "return { 0.0f, 0.0f };"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwclPgMsaWrap7oQYk2v2nxgDWb/vs8P1/FdWy6SUTv5cwnV2mz+ZtKKT4SinJQ7rb2xZkKT1CozhDfB+/H3wO96WMo5OQ3Si4k9hM0SSdoAK"
                },
                "src/borders.cpp" : {
                  "name" : "src/borders.cpp",
                  "placeholders" : [
                    {
                      "offset" : 101,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "KeepSpinning",
                        "file" : "src/borders.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "yl5iURF5Apz2XgzAQUW6ycbGngLiVHi5Xgeg5ngjYe8JS2ySwqKXxWHVnddy0p5Eov6lMaANMLK198KkaVJlMC4nO0Gzi8nlyoRmAQMSn/hUGcELpDXJ7Re0XvZOJPoLi9Bqrk9cVQqY7rJFFFrqwT4WPMvfuj6p6mbBmNbMC6FioMO+4Jj3WksYP5Px1oku/+mLsb02qF0fvMAwTH6LajhT1u77Y13pONAryM35j3jzwWcYgf8JflZVnORMq4otuoQMS3AFSbwPz/NlAdaAy/Xv9SC3brMKaw1v6LYwr/r4yzJoToXa0JApK7IJLKVuHW2LNiX3DZ/IkONk0sYgnMfU+ap43J+1x5GytqdXb440Bw1AeyLhMcQCQUimM6YaH+iY+xqREVYyZpGTIlXt2VmHNR9OvIZd4RXZKQcCL14xX1dBjEQpW1mIAvNfRAc+PSiPQFM727gvYJKJpYbbmWRyLyOrqzfqkqsLVcfIQz4=",
                      "placeholder_text" : "/* TODO */"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwZNO2eJ5pv84Wuo6wjO1wfCkPHpEM1eoda2RQmJ0sD89E63tm4duelXhSfUvLMvuytypP/JEBVsX04C2fJei4YQHGYGP2lXyvH7YH7b5Ot8adDq8ph2JYih/kNRIVAY2aFnjzcHuGI8RMaYZyNeXAqVASQlrY97qfu6z2o5JYNmc"
                },
                "src/point.cpp" : {
                  "name" : "src/point.cpp",
                  "placeholders" : [
                    {
                      "offset" : 88,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "KeepSpinning",
                        "file" : "src/point.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "INFFZm5M9eNeUYNHh0poE4IjA6Qhliit+YXwuyp8KiidJgZf8F5m/TN12meGrfFZ",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 180,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "KeepSpinning",
                        "file" : "src/point.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "pelbdSGe8NgHG+byI/ljy5v/ZQLq/c9yOSKURsdX+MpMLssF9QyW3PScRwJi68X/",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 283,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "KeepSpinning",
                        "file" : "src/point.cpp",
                        "placeholder" : 2,
                        "is_visible" : false
                      },
                      "possible_answer" : "SKJuYDb16PU7jYutTiTlSfCAdk8sm41OEn66k7L3tCTPDWPR+FlDsnI2q+usN94C",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwZNO2eJ5pv84Wuo6wjO1wfBdMxdfrCVrva4pftvco4l10ClR7ZZb4cextUBk6sK+pPMnWNtDfgT+Ux70ZEj14VFjYTmFd/CNjrYkftVqTUitGeFd48bQOgkOjG3XbW+gliXBwwjp/0fSQsbgQQSVsc7UfUztqBYjYF+HVnqapyBzCcaIM/6QhCQeUgvXn3C4gqLXFLK3p7MtiGz7t3GYs1dyHveJdHEq+NxhaIl8sXHcBfxxbKXmW6bnVb8PvDv8wI1S/5+XMWczBp2RjyAkEtsgIj0yQU2EhMznaCMWo6g0LQJrurJI1D+TmRK0pEaGysdlalkyh2CKh6VZyEx9BepSwwHAhH4vUeVdkW8Oqv1n0dicl3Adi4KVrqz7wEZydQ=="
                },
                "src/move.cpp" : {
                  "name" : "src/move.cpp",
                  "placeholders" : [
                    {
                      "offset" : 69,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "KeepSpinning",
                        "file" : "src/move.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "pROzx0hc0Q1KB+BSFFdI7Bsu+CxUFxIstTorfDkR9NE=",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "DgDba3xw8RdPYu5Vpld1eY1E1In1EtrkhpergIjsa98GD9AajcxH3KPkrZtC79Z0z0WeLwhF/LNOzCk14uM0mog9a08gUS9CQUy3yToBClMpNR864AeSKRzrZlaUOFpZ"
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "sO5DNyXZvapiyUJ9oytvhZnO0vQCQ/ddX/mDN3YavjBhlgW1qxDtfNWlf8pz0P/G37hEadUKSxY6ZgWysyPkLLuXgZiLb0k5Lcm7QtjFl2nC4UkYDnKh91nxT/8Aiq3ZzsNR87sRG4ElnbM4gikl/iNs6fj4gHGbRAhyHAHRQaTazXluMnukncwLS2KSaSQ/99Jdn+lM74uSfPCerBWXvjjRCgdKBsq5zGHKHuhWhqRxC7pKp93RxUlsXrEVGmP9lHOfN75u3pk8pC/8NPVGi4iUsNHumMqZD7cWL0+kq2vMO1vI3ELIEN/MsSFBcoxYX9h6BuOTNkgnMzE7truDucmUz01eKdjBBQeoDHPHmk2qln+ROBQCLfgWMJ0qoSmU1SkMKIUMKbZz1I/dr//zAn1WBqgZ9nHwniDrrC02Z48x4tJoZeMybCf90rfIzBnfv/J9EGZ0yY/476NxQwKdhcKlTkm91wwzewl1cdFvCMMx2+QXntann0xO9ZTNQZRAsc9AEVdHAz5n1DJhoIlasPYS3RqbD9tqluVrzyDr1ldpjkkW1P1l6VjtVIahuFzU2QPQrpIAhJgr+3SQgCO949QsC+Z8YRDvjtFkdknHcy0s5Sa2dvcBSsGdtsRscFBWYglxo3o0xhRp6R48dDaroDhmPB0c5658DEApSRff+gM2NyKFHEZvZiwrL4fT14mkTpWpQBf3sGkdLiA6ztUMf5o++RkPaOW4Xeqr9ZTLZCpjIqYi958QCisc/Y2C6rRShn2fEcBz7r5TF5uINjlmObYsiiZNVLFmYGrPRx+wBxcMLfVq3nEFCPuxOFXjAh9r5tHSbBJwwbaLPJOwX80D6ygmxcXS0VilinaHI82aINchXKHs+LZph5vb2apk2M1b0+pAq1gdB8v9MIqqdhDfXsVq7LtdrO1XjF/51ZrZJ1gW64HShGWU2ziT10v4t1IlkdHRZarqpsgmETbbr5KDYhKethE2112xSrWEkHYhWtbzrWNl59v2YYYvuXztD+DrfoNh/M5zz3uYeoNmAZjPYU2Mruzv+qsYTrKnbhIwwLtCOAbjuN3RrolyT/nUS0Yov7QAnaFodTIQtxUBkZqaFa2ehm0pK2RaSqFUA280HgkFop0p4+dv01gsmRY4N6feW+/CMG5dfAWWdmtA4yzoo8cmTsPj3WOxcVNIwf5CTyQ7QKyJai3dth87UGzBaeVzNYXYS6o+xfYcFWY7O/ffw6ll3BVmnE8eX0LuWtOQV86WvW7H2YzrztoUPclfqPFkFLGIeNv3xKuj9XGsHIzKgbysIEYydS5VuMY/Ase2AuD+F3dbVEUhlgQnkfNKSbqAxEMq1LXxeRt12YEibRMZCHtdQCXWvJwk4u31wV/l9PcUNzpquffQ4+UoWaQQFilONOFECRLJTWVhezK4zKo+/J2fL1n1PjgJCsPRWgmDvRwmo27AaOzpFBl0dICtrInUzfbAXPn68Fv8pFhUBVXT2L9KTgnruVD2AnuYVtBgvZOpIPDDVhy+UZNvwG6sM4QKkDFEWYMDLPxbTpkyjhKzFPcXixMAFVp5Nv2lxJnDBFoXrG5ORkQA1941BRHIuAUw1LNbYyPPEv6G2O/LAOIAbiIMGSdADvlCm9JRB2K7lvG/4piTwBIZa1umOktrjduLdMKq82PCuzXJnBeOhx5IjWfRvrvXnd5SS37pYZZN43Xp71ftCDp5/8wXX8ZZS2ITY6ZYUinVp26ROoecZ/RYUHHfFAtAvvKd+sh7pnd+n4GGHZ1VUAFOInEr2hsQwxaz8kmDTGveeXyZ81o+lrmbf9n5Qkq5dT73ri00lKzIlqJQqpIldYPRr3uUp6bAzWUbAxd4l9DJhXd8SYVJVkUkn9Mlyvq1zI+4bVFosQljE8poMWtks11v/ySI/I6dRD9qq+Y8anQJttCwyDvkgTTaRCrE1SSUbRBG9z2y/f/nB4bB8IJVlhyFrEDuWMNSrKQKdJARvQk5h/nKzgUscRA8JRI83vo61uFHO+oNQRz1WWumjZiXGH+s6nHoud70FgtzP0jD2Lx8Cg+GdoaotfJvjnre2Jjpt1FvHhCXRR1KW3ZAXcSIZNS76IrneyedMJgpwBt0aEhho9h6AbNxpbKM9EDqq4QjcJGN2E6OoR0WVDUOcII6YEL/PsR2bnrylJked73tAuTq/mpXKrhGdYAvRyC+VxIT0NQCv1G0L8MqRlREaj2qANdmMM7PeYBVySi9e2Qu5DJ63onH0SqirEp4bKiM6klnYdQPZfiVAIjR2wHRJ2hfPHDM17/3uJJ1iUQbOEbALw7QWd1pzFx7O+dKvmpByeJU37V70tIl/1WNzOFHd3fWIcbVtMvD9t+ur1Z0lIJOZYTooF4gNsYz7pewDJbR8dW32tw7Q4/E+7R6hrsy4ztSq0P0+Oi+mzg3PkVsthGgADq4TAIqyJBQcYVeS+Zmi98Oe9WH+otVHZ72E6KeZhgGgaz9A+IYINDyD7FifWjJ9J93VsGlQE6Dn1k/V/4a3zHz8z15CvuDU4KoIehingjBaox6b+uvc+CdWWvClHjM34TeCr8jzkUumFq6Sxcaj6rII+7iCRO01HIF3P8ipJq6FLfHaucVWe4xGV3kDk/r46adygatGCrok/WlZwe9XYLfNieOgE4PB7SCLGl68iyhuzbybXetnOdtzt8QcTKnPWRCUjkG3KVDzid8WbrCEO6rWFmEb3XvZdMYfQF/lPiMYVS05+EJZyLrIDz/1hEuTodraYtBPBjKZ0ZTGAI5BC7mMHijvAe/EJJdkshKgfu/uIaCHGQK7Hbkwjjp7L1ZuWocdTmzTY+JvFibr+K+LwLnqj4DmHg+wJt+8CS4qYKMuEuOsIZ/m3uDaDnrk+KBaoePXk5begczxoCm79qwR6W+T3p3oIxPXB2wZskB14xV2u7CtLVlBTDiWuE07dFMNYb6RVBesKBiM6oCLtce+JcPqKhqxjQLcpiDgacbNkGH/6SQZlajIRxeS/Qi7oKM5W5DtRqvUfUV/+Yy3M4jJ6qnoq9phHCsaD9VU8+pDaPZo3cAy5sOnWp3zJ1flwDhhzBB9AMmmI7QvQzzRTV8WAxPJcQcReaSlqNoYkiaJqyi29b6YXKLZLLfyBHlled9iMsqGqUHsmp/ZsIbplr199JsAukd5+6t96o6CE7JPheK3mAQUjETP9zx25dUWLZ/N3jkaZU50Xo3qItZ27XStsGBPcUpH7UjlOXW8ikf0z2S/3GNnjhm3gIOpFc4Hwt9cHfZaUyOsSiI8UaH+z3QYrBLhFqj1QH+agDYkKeY1LWyWPSWOCe6CmxWvBiNvx4NqXAhMjsP5oGxU4gWi78FHpfwaI9NgNHMhCRCGQVBnTB84uDd1b+BkAJB3tIA5cQ3LtZOtrJ4V4xzbS4r1cp+G0ETXQYOaoCIyiAGEvF8J0OAF4R0V4/SpZJBcpfgdic9294jI9M3olBYAbB+eclat7wKLWeDASiuxm9RlbTBiUNFk3DYyEEBncbbgnnM8bl06tAh9ZIltyP1sbAjf5k15TPSZs0eGy4yckg9GeuNx4cukNIq3L6vp2UMRr3pD+LTQvAFEWOOXS9wQ9g4TbcIKUHQxvxqkj3arOO3fGS6YoOgzEMZ3T8vMDDtYCVwWz0+TfZ5QGOdFI+ITSPOCmWQ5aitU+SmAIbQGBkdLDh/pwlG8ditl7Bn1JJXz/1l4LWAcxlyH67M58ueESUr/Br8peAAIuKy3tuiMcFHKVLIKcu6ZAiJP4e01pLodduPILSWSMocMv7BvNkgmhvvmrYiUsRt8I7/nwJbOWz4TNeCjbPckHksVbeES5DLfCKgKeKZVJz33S9PbmWKSzPSat7xNNNX2Xq0UTxMTw58rxXtjhUQxJwf6mNwSXbSyj2LChrig8hGdfOY2HP9+ntnbdEhlPMlv4UJe6+M/fd60nzbxT5vZ4PNKdG53Ofsk83n"
                },
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHr+stwRDUrzlH5cDhbJwSmpA07FzqaOx3OdtbFF3VL92MlcGf23aJ7W1vRSL070C8rU7fqk4hctceB51VKvHs0yqKBLBV/7xXZ+gGIYgDQgTxOcP2BpRFnV24LinpkRbCh6bKJFBt6lf3b/W5M43lEmAia6KQd5aMzvKFXT1PiRFuZ/FRdcZZW2ZinG8cQeGTbF9z3CIfR7P2UfPGOEeiWdIg1vOXPozfmQt/HO7TnnJwUO8gmofd/aEBY32IQ6QyN8W9HbWXQOwIXTMrVvkz3OLYUsPuxLnG/rJW3sanEZfIaym9gCiE1twDupSNfAOu9BP40zVUyGy5+xAgzun1j7z9F853HwiJ5W51xcQi4zaHdbEC0eqe0jnFcv4KWQzFnimj9iDmTGjvNMrZ2Vfb+IYuKQQatuAyMDDsTa6r1D2dFTBUpdL815hvQ0JeIeNXTwVxZbjm8kjnybHq9x9K73IPJJDBCqIU/T/NoH4XYzF6tUR1o206sur+w+ka9ur7m"
                }
              },
              "description_text" : "In the previous tasks we have added to the scene \na fixed pre-defined number of consumable objects. \nBut what if we want to create a random number of consumable objects between 1 and 10?\nCan we do that in the same vein as we have generated random positions of consumable objects?\n\nLet us try. First, have a look at the line of code in \n[main.cpp](course://WarmUp/MovingOn/LimitsOfPossible/src/main.cpp)\nthat defines the [array](psi_element://main::consumable) of consumable objects.\n\n```c++\nconst int COUNT = 4;\nsf::CircleShape consumable[COUNT];\n```\n\nThe following line of code generates a random integer value \nin the range from 1 to 10.\n\n```c++\nint count = 1 + rand() % 10;\n```\n\nHere `%` is the division remainder operator.\n\nTry to replace the `COUNT` constant with the randomly generated number `count`\nand then run the program. Once you finish your attempt, read the hint below.\n\n<div class=\"hint\">\n\nYou should see that the build of the program fails\nwith the following (or similar) message:\n\n```\nerror: variable length array â€˜consumableâ€™ is used\n```\n\nAs you can guess, the problem is due to the definition of an array with the size equal to `count`. \n\n`COUNT` is a constant, its value is **static**, and it is known\nbefore the program is run, that is, at **compile-time**.\nIt means that when we define an array of size equal to `COUNT`,\nthe size of this array can already be calculated and the \nrequired amount of memory can be allocated. \n\nContrary to the above, `count` is a variable and its value is **dynamic** â€“ \nit is not known before the program is run, that is, it is known only at **run-time**.\nThus, the amount of memory needed to be allocated cannot be \ncalculated apriori, and the program build fails.\n\nDoes all of the above mean that we cannot create an array of dynamic size?\nOf course not. However, in order to do so, you first need to learn about \ndifferent kinds of memory regions available to your program and other memory management nuances. \nThat is exactly what we are going to study in the next lessons!\n\n</div>\n",
              "description_format" : "MD",
              "task_type" : "theory"
            },
            {
              "id" : 793851439,
              "name" : "HuntingBugs",
              "custom_name" : "Hunting Bugs",
              "files" : {
                "src/loop.cpp" : {
                  "name" : "src/loop.cpp",
                  "placeholders" : [
                    {
                      "offset" : 110,
                      "length" : 7,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "LimitsOfPossible",
                        "file" : "src/loop.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "EArMiPGxEcesFOBpcEhsHcV8pyVQDoaN2+CWY3kUW2r8InRdtsXAMr3sAQ035kJpGLl6Kr4p8LBPoKUImpHNG9ljXbUhfQGQXdYdW2riHFrutUzQk2BMrWbyPuRXUg4hAaTiroduGwgu+mgGuu0U0VLY4ITgp+y2SqynkFIDW49FxS2OEegXU8ohclHvaDz/",
                      "placeholder_text" : "return;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwUPmxSfhDeyghYpHHd4mHkiul/dQHaHM3BmJ2ZstRZ1f99HsaeUZDrvmHNULx3fEEIigy9kQ7W2EPcFnzXyIO1Q8P2yt5JKdvnKibK716BGoybrhd8c3RAfSOXN252iDg0N0j68mzhH2yz8kV5BiX+w="
                },
                "src/generate.cpp" : {
                  "name" : "src/generate.cpp",
                  "placeholders" : [
                    {
                      "offset" : 130,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "LimitsOfPossible",
                        "file" : "src/generate.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "vnVhZMzzomxFUxcGj2EayL3K2sEPhqMRdS7tPvaPpmXzIzg/1YXY+Y8ySkpX8klRlmpQMiq0n4l+MksytKA6J1ysdWnLAkt0B03P1sYLgp91zKCQyluECfSt5t7Z/7mPuyp/fvyBqhFuOvwZAy1P0sInsEjx9KsdoB9cwL88IlyiC7Yd5VhxuClRHYDhPk6XGrM/w1geQM12j2OACE5hZHU+uFvh5M8zWG0GIbGnibQ=",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 216,
                      "length" : 11,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "LimitsOfPossible",
                        "file" : "src/generate.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "oQjURSTyBfR1RKP/OweIpANhNR0lkfwJPHb2rhaqVMtSoTlK7MY2Y6DU/XEMg0+QvRxrph19Dri59rRI0x0wPQ==",
                      "placeholder_text" : "return min;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwdA/cvSiHcC+3/CmPg9jWG1xQu9hOAil0Ux58fy3pkjrjFn0zW+QLZU90DVr6fXFgbQ7htwzOdWzKt1TVEusdYvoQH4xUYKar+wUPL6yIP9t81/BJMrynFMjoKtAIdqcF58Dpkq/vchYrEUEbSvAqe5pCrB4L5rWOkVn4cQUwaSDAq8yzorZzYL7WKLSO/oEOc0NgG2C3rkHcAOg9RhXXuj8YTQUimsyL8zxnWSVE9JA38H+l1lTAZyd/XJdNY2ZMHaL/rwG39BjjT7KyTVlsLYbqXMJPnE12ZL507+qtchH"
                },
                "src/collision.cpp" : {
                  "name" : "src/collision.cpp",
                  "placeholders" : [
                    {
                      "offset" : 83,
                      "length" : 12,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "LimitsOfPossible",
                        "file" : "src/collision.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "PUlIQgIttPqIGuEH/18h55eyy/dVwuBxaW5B6Wt2Cl9k1eKok2ImVAahHkf+TM9LlEBBW4FeG5u/G82ed9uy9HYex3UlBC+z68n3Tg+D8iUdsSLuBKr8wRe6mK/c0fW1",
                      "placeholder_text" : "return 0.0f;"
                    },
                    {
                      "offset" : 152,
                      "length" : 13,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "LimitsOfPossible",
                        "file" : "src/collision.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "HUwuwOqnE23TFvPw8T+P6PJ/GfZCM0NnGl7Gh/Idkoza7Qx/Lk0PF+uFyGHNvrItDYMV6IVC8XImmlvNqJ8x5liAjlEY/Xen5SU1zfq3P9TQuXSoSMO9+VsC/7rc/Clk",
                      "placeholder_text" : "return false;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "IyPGAgtVdcN+Yqg8E1sb863Pe500O7MLPzUplJEu0RJUWKj7zTHH8VmQRsIBzRsFXYSLxwrsCZ4RbMUKEjxgsUuzaJpGi59JyUcypqO1scQ3Sfj60LzFuga32RWT5zM/SA7IUN4U9anH9C/QvdILLEy0jJRrbhI55B0ELZRJlj+5By//K52FciEWloQ8P/n38qcy2JKI3x277Hq8E4WQL/RUkYBTv86GeLWZS8cfSFk="
                },
                "src/borders.cpp" : {
                  "name" : "src/borders.cpp",
                  "placeholders" : [
                    {
                      "offset" : 101,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "LimitsOfPossible",
                        "file" : "src/borders.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "yl5iURF5Apz2XgzAQUW6ycbGngLiVHi5Xgeg5ngjYe8JS2ySwqKXxWHVnddy0p5Eov6lMaANMLK198KkaVJlMC4nO0Gzi8nlyoRmAQMSn/hUGcELpDXJ7Re0XvZOJPoLi9Bqrk9cVQqY7rJFFFrqwT4WPMvfuj6p6mbBmNbMC6FioMO+4Jj3WksYP5Px1oku/+mLsb02qF0fvMAwTH6LajhT1u77Y13pONAryM35j3jzwWcYgf8JflZVnORMq4otuoQMS3AFSbwPz/NlAdaAy/Xv9SC3brMKaw1v6LYwr/r4yzJoToXa0JApK7IJLKVuHW2LNiX3DZ/IkONk0sYgnMfU+ap43J+1x5GytqdXb440Bw1AeyLhMcQCQUimM6YaH+iY+xqREVYyZpGTIlXt2VmHNR9OvIZd4RXZKQcCL14xX1dBjEQpW1mIAvNfRAc+PSiPQFM727gvYJKJpYbbmWRyLyOrqzfqkqsLVcfIQz4=",
                      "placeholder_text" : "/* TODO */"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwZNO2eJ5pv84Wuo6wjO1wfCkPHpEM1eoda2RQmJ0sD89E63tm4duelXhSfUvLMvuytypP/JEBVsX04C2fJei4YQHGYGP2lXyvH7YH7b5Ot8adDq8ph2JYih/kNRIVAY2aFnjzcHuGI8RMaYZyNeXAqVASQlrY97qfu6z2o5JYNmc"
                },
                "src/direction.cpp" : {
                  "name" : "src/direction.cpp",
                  "placeholders" : [
                    {
                      "offset" : 70,
                      "length" : 22,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "LimitsOfPossible",
                        "file" : "src/direction.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "on/sur0CWG0ibtaPUp4I4RUa30x7yQMzoRa3PT1t+wVzhIhGVGPHM+T6Gr+R6IJV4Hjx4y86zIZwJUAHd/hD8rqBoQrW24nluRsodOi0kuCn9u4lYk/IciCzHS8/gW4QmXrrXZaFLbYxsa4MUeblFoNB91IU6yFnko54WTOpCoMdG1fqKiwO8GrPm4oelSKsg1ivMsUU0ivW3TQJ53B84TyhRBnpirNJFCDlBzi6lEBHU/5slem/JJUyQ1YzRylcgCIB8kummjhHHMZVpHVRV+/TBF3E8THxteUX1w2JaI1ty9qbeI5kZCMZsuLvKNcUmuRjZxIzY3fryRws/poX6qczfP37k4ht59RpqnTRB3qhSjf1joUgXpkD/jF1+qwKnP+D+/AVSO5mGOrDzGhejEnE9jQbU6nv9cwZOK/BiXE=",
                      "placeholder_text" : "return { 0.0f, 0.0f };"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwclPgMsaWrap7oQYk2v2nxgDWb/vs8P1/FdWy6SUTv5cwnV2mz+ZtKKT4SinJQ7rb2xZkKT1CozhDfB+/H3wO96WMo5OQ3Si4k9hM0SSdoAK"
                },
                "src/point.cpp" : {
                  "name" : "src/point.cpp",
                  "placeholders" : [
                    {
                      "offset" : 88,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "LimitsOfPossible",
                        "file" : "src/point.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "INFFZm5M9eNeUYNHh0poE4IjA6Qhliit+YXwuyp8KiidJgZf8F5m/TN12meGrfFZ",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 180,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "LimitsOfPossible",
                        "file" : "src/point.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "pelbdSGe8NgHG+byI/ljy5v/ZQLq/c9yOSKURsdX+MpMLssF9QyW3PScRwJi68X/",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 283,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "LimitsOfPossible",
                        "file" : "src/point.cpp",
                        "placeholder" : 2,
                        "is_visible" : false
                      },
                      "possible_answer" : "SKJuYDb16PU7jYutTiTlSfCAdk8sm41OEn66k7L3tCTPDWPR+FlDsnI2q+usN94C",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwZNO2eJ5pv84Wuo6wjO1wfBdMxdfrCVrva4pftvco4l10ClR7ZZb4cextUBk6sK+pPMnWNtDfgT+Ux70ZEj14VFjYTmFd/CNjrYkftVqTUitGeFd48bQOgkOjG3XbW+gliXBwwjp/0fSQsbgQQSVsc7UfUztqBYjYF+HVnqapyBzCcaIM/6QhCQeUgvXn3C4gqLXFLK3p7MtiGz7t3GYs1dyHveJdHEq+NxhaIl8sXHcBfxxbKXmW6bnVb8PvDv8wI1S/5+XMWczBp2RjyAkEtsgIj0yQU2EhMznaCMWo6g0LQJrurJI1D+TmRK0pEaGysdlalkyh2CKh6VZyEx9BepSwwHAhH4vUeVdkW8Oqv1n0dicl3Adi4KVrqz7wEZydQ=="
                },
                "src/move.cpp" : {
                  "name" : "src/move.cpp",
                  "placeholders" : [
                    {
                      "offset" : 69,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "LimitsOfPossible",
                        "file" : "src/move.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "pROzx0hc0Q1KB+BSFFdI7Bsu+CxUFxIstTorfDkR9NE=",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "DgDba3xw8RdPYu5Vpld1eY1E1In1EtrkhpergIjsa98GD9AajcxH3KPkrZtC79Z0z0WeLwhF/LNOzCk14uM0mog9a08gUS9CQUy3yToBClMpNR864AeSKRzrZlaUOFpZ"
                },
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHr+wG8pmcFw6C2UV+ORj1r5y/RUetKpJy7alB1EVoMEp8x7beiYXpGAUcoKF0QdM8uPoAxdV7Gpr8MdgAZ4QnDtZphppGGiQRc1WIBPhL24oexICYXfPPRA82CLldqqAojw8Z7hb1bf35MXFO2enrmURpX9zyAjpghgRPE/Ov1zL0gNwZgN6kFOapTOHa22KTyVYwgPLJkNnsFx4HGNioRF/RHAYiN1pxG7BAvim3DNA00iN8pe/GF5G/7MHDYEuMKC+ncDKR/Oc195xuazdl1Xyc567vQeCsGUSN2pX8OyPWygCIi4F2quOE29IKewsPlBLHIGUbqKGVXUs2DHmbqd38OhV6VDWTZXr7sRxbhtEUTUPh8n2ntsn7HpI1MDF/2abwsyAWeweM3CNCrUCLUDCE8++Oub6mDFxjuDKt9eeqgvAueJ29Oz9DaiHpy6HHV1C/dRXc1/TBuJ2Z8/9bs3T5bZ22dTkT34nOERioZDf/Hd4guLE6JP+bsCK4i/aBqEUzKczg9MrDCyVriHWDmhQ=="
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "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"
                },
                "src/approaching.cpp" : {
                  "name" : "src/approaching.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwRTBZTiE97bp4m82AJz8sJA/ZCi0UqzWVBq97DU1XYZh3bQCTXo3RTPBsvGtRtGi3L4rzF3cq0MLmwfiRqch4EL7fPBprcCViK+ytKIt4JStvytJkUCyHPZjqpXtCCCoA/JJIBcSda/TVBf4u6jOPL/LFATZNv13gjDATun9emregxC16pr0fPxy7jQDfKNWUmhSEXYa89np2nngfsYBgiXXaHy/f30xnzZKqUASEG/VfuU+UoYRswtzRmGgHvactyPX4+2SsDUZ3RYM4tH82lIS508o/wbf6UyEbrdAzRnkyLPnZQ19XdYzWDBDTj1j59YS64aWEWyGHgpx+aejdbKQDK6vyp0qhJzEW0oEbgipO/2N5kccdTik2gUwLPA15busKfjW9Scec5hs/nqVS3JX8anUEpDael8X3iWViayg2patNMvU0eVKjs/sLyoqafVJCTdur4qSde0iZE0xEga1pnMwy+//0VFm6m1Vakks"
                }
              },
              "description_text" : "Before we move on, there is another important topic \nwe need to mention â€“ program debugging.\n\nEverybody makes mistakes. Including programmers.\nMistakes in programs are also known as _bugs_. \n\nSometimes finding bugs in the code can be hard.\nTo make this process easier, programmers have \ninvented various tools that help them find bugs in programs. \nOne of such tools is the __debugger__.\n\nThe debugger allows you to step through your program â€“\nexecute it step by step and inspect the state of the variables\nduring the execution. \nYou can learn how to use the debugger in the Clion IDE\nby consulting the corresponding \n[tutorial](https://www.jetbrains.com/help/clion/debugging-code.html). \n\nIn order for you to try the debugging experience in the IDE,\nwe prepared this task. We have implemented a new functionality \nin our game but deliberately put several bugs into its implementation.\nYour job is to try to spot them using the debugger.\nPlease find the description of the intended behavior of the new functionality below.\n\nWe have added yet another function:\n\n```c++\nvoid approachingLoop(Circle player, Circle consumable[], bool concerned[], int size);\n```\n\nIt is similar to `collisionLoop` function, but instead of detecting \ncollisions, it detects a situation when a player object approaches consumable objects.\nWhen this happens, it sets the corresponding flag in the `concerned` boolean array.\nThe flags in the array are later used in the `render` function (see `main.cpp`)\nto change the image of the consumable star object to its \"concerned\" variant.\nWhenever the player object moves away from the consumable star object, \nits image should return to normal. \n\nHowever, because of the bugs in the `approachingLoop` function,\nnone of this works properly. You should spot these bugs \nand restore the intended behavior!",
              "description_format" : "MD",
              "task_type" : "ide"
            },
            {
              "id" : 1151088479,
              "name" : "PlayAround",
              "custom_name" : "Play Around",
              "files" : {
                "src/approaching.cpp" : {
                  "name" : "src/approaching.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwRTBZTiE97bp4m82AJz8sJA/ZCi0UqzWVBq97DU1XYZh3bQCTXo3RTPBsvGtRtGi3L4rzF3cq0MLmwfiRqch4EL7fPBprcCViK+ytKIt4JStvytJkUCyHPZjqpXtCCCoA/JJIBcSda/TVBf4u6jOPL/LFATZNv13gjDATun9emregxC16pr0fPxy7jQDfKNWUmhSEXYa89np2nngfsYBgiXXaHy/f30xnzZKqUASEG/VfuU+UoYRswtzRmGgHvactyPX4+2SsDUZ3RYM4tH82lIS508o/wbf6UyEbrdAzRnkyLPnZQ19XdYzWDBDTj1j59YS64aWEWyGHgpx+aejdbKQDK6vyp0qhJzEW0oEbgipO/2N5kccdTik2gUwLPA15busKfjW9Scec5hs/nqVS3JX8anUEpDael8X3iWViayg2patNMvU0eVKjs/sLyoqafVJCTdur4qSde0iZE0xEga1pnMwy+//0VFm6m1Vakks"
                },
                "src/loop.cpp" : {
                  "name" : "src/loop.cpp",
                  "placeholders" : [
                    {
                      "offset" : 110,
                      "length" : 7,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "HuntingBugs",
                        "file" : "src/loop.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "EArMiPGxEcesFOBpcEhsHcV8pyVQDoaN2+CWY3kUW2r8InRdtsXAMr3sAQ035kJpGLl6Kr4p8LBPoKUImpHNG9ljXbUhfQGQXdYdW2riHFrutUzQk2BMrWbyPuRXUg4hAaTiroduGwgu+mgGuu0U0VLY4ITgp+y2SqynkFIDW49FxS2OEegXU8ohclHvaDz/",
                      "placeholder_text" : "return;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwUPmxSfhDeyghYpHHd4mHkiul/dQHaHM3BmJ2ZstRZ1f99HsaeUZDrvmHNULx3fEEIigy9kQ7W2EPcFnzXyIO1Q8P2yt5JKdvnKibK716BGoybrhd8c3RAfSOXN252iDg0N0j68mzhH2yz8kV5BiX+w="
                },
                "src/generate.cpp" : {
                  "name" : "src/generate.cpp",
                  "placeholders" : [
                    {
                      "offset" : 130,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "HuntingBugs",
                        "file" : "src/generate.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "vnVhZMzzomxFUxcGj2EayL3K2sEPhqMRdS7tPvaPpmXzIzg/1YXY+Y8ySkpX8klRlmpQMiq0n4l+MksytKA6J1ysdWnLAkt0B03P1sYLgp91zKCQyluECfSt5t7Z/7mPuyp/fvyBqhFuOvwZAy1P0sInsEjx9KsdoB9cwL88IlyiC7Yd5VhxuClRHYDhPk6XGrM/w1geQM12j2OACE5hZHU+uFvh5M8zWG0GIbGnibQ=",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 216,
                      "length" : 11,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "HuntingBugs",
                        "file" : "src/generate.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "oQjURSTyBfR1RKP/OweIpANhNR0lkfwJPHb2rhaqVMtSoTlK7MY2Y6DU/XEMg0+QvRxrph19Dri59rRI0x0wPQ==",
                      "placeholder_text" : "return min;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwdA/cvSiHcC+3/CmPg9jWG1xQu9hOAil0Ux58fy3pkjrjFn0zW+QLZU90DVr6fXFgbQ7htwzOdWzKt1TVEusdYvoQH4xUYKar+wUPL6yIP9t81/BJMrynFMjoKtAIdqcF58Dpkq/vchYrEUEbSvAqe5pCrB4L5rWOkVn4cQUwaSDAq8yzorZzYL7WKLSO/oEOc0NgG2C3rkHcAOg9RhXXuj8YTQUimsyL8zxnWSVE9JA38H+l1lTAZyd/XJdNY2ZMHaL/rwG39BjjT7KyTVlsLYbqXMJPnE12ZL507+qtchH"
                },
                "src/collision.cpp" : {
                  "name" : "src/collision.cpp",
                  "placeholders" : [
                    {
                      "offset" : 83,
                      "length" : 12,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "HuntingBugs",
                        "file" : "src/collision.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "PUlIQgIttPqIGuEH/18h55eyy/dVwuBxaW5B6Wt2Cl9k1eKok2ImVAahHkf+TM9LlEBBW4FeG5u/G82ed9uy9HYex3UlBC+z68n3Tg+D8iUdsSLuBKr8wRe6mK/c0fW1",
                      "placeholder_text" : "return 0.0f;"
                    },
                    {
                      "offset" : 152,
                      "length" : 13,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "HuntingBugs",
                        "file" : "src/collision.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "HUwuwOqnE23TFvPw8T+P6PJ/GfZCM0NnGl7Gh/Idkoza7Qx/Lk0PF+uFyGHNvrItDYMV6IVC8XImmlvNqJ8x5liAjlEY/Xen5SU1zfq3P9TQuXSoSMO9+VsC/7rc/Clk",
                      "placeholder_text" : "return false;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "IyPGAgtVdcN+Yqg8E1sb863Pe500O7MLPzUplJEu0RJUWKj7zTHH8VmQRsIBzRsFXYSLxwrsCZ4RbMUKEjxgsUuzaJpGi59JyUcypqO1scQ3Sfj60LzFuga32RWT5zM/SA7IUN4U9anH9C/QvdILLEy0jJRrbhI55B0ELZRJlj+5By//K52FciEWloQ8P/n38qcy2JKI3x277Hq8E4WQL/RUkYBTv86GeLWZS8cfSFk="
                },
                "src/borders.cpp" : {
                  "name" : "src/borders.cpp",
                  "placeholders" : [
                    {
                      "offset" : 101,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "HuntingBugs",
                        "file" : "src/borders.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "yl5iURF5Apz2XgzAQUW6ycbGngLiVHi5Xgeg5ngjYe8JS2ySwqKXxWHVnddy0p5Eov6lMaANMLK198KkaVJlMC4nO0Gzi8nlyoRmAQMSn/hUGcELpDXJ7Re0XvZOJPoLi9Bqrk9cVQqY7rJFFFrqwT4WPMvfuj6p6mbBmNbMC6FioMO+4Jj3WksYP5Px1oku/+mLsb02qF0fvMAwTH6LajhT1u77Y13pONAryM35j3jzwWcYgf8JflZVnORMq4otuoQMS3AFSbwPz/NlAdaAy/Xv9SC3brMKaw1v6LYwr/r4yzJoToXa0JApK7IJLKVuHW2LNiX3DZ/IkONk0sYgnMfU+ap43J+1x5GytqdXb440Bw1AeyLhMcQCQUimM6YaH+iY+xqREVYyZpGTIlXt2VmHNR9OvIZd4RXZKQcCL14xX1dBjEQpW1mIAvNfRAc+PSiPQFM727gvYJKJpYbbmWRyLyOrqzfqkqsLVcfIQz4=",
                      "placeholder_text" : "/* TODO */"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwZNO2eJ5pv84Wuo6wjO1wfCkPHpEM1eoda2RQmJ0sD89E63tm4duelXhSfUvLMvuytypP/JEBVsX04C2fJei4YQHGYGP2lXyvH7YH7b5Ot8adDq8ph2JYih/kNRIVAY2aFnjzcHuGI8RMaYZyNeXAqVASQlrY97qfu6z2o5JYNmc"
                },
                "src/direction.cpp" : {
                  "name" : "src/direction.cpp",
                  "placeholders" : [
                    {
                      "offset" : 70,
                      "length" : 22,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "HuntingBugs",
                        "file" : "src/direction.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "on/sur0CWG0ibtaPUp4I4RUa30x7yQMzoRa3PT1t+wVzhIhGVGPHM+T6Gr+R6IJV4Hjx4y86zIZwJUAHd/hD8rqBoQrW24nluRsodOi0kuCn9u4lYk/IciCzHS8/gW4QmXrrXZaFLbYxsa4MUeblFoNB91IU6yFnko54WTOpCoMdG1fqKiwO8GrPm4oelSKsg1ivMsUU0ivW3TQJ53B84TyhRBnpirNJFCDlBzi6lEBHU/5slem/JJUyQ1YzRylcgCIB8kummjhHHMZVpHVRV+/TBF3E8THxteUX1w2JaI1ty9qbeI5kZCMZsuLvKNcUmuRjZxIzY3fryRws/poX6qczfP37k4ht59RpqnTRB3qhSjf1joUgXpkD/jF1+qwKnP+D+/AVSO5mGOrDzGhejEnE9jQbU6nv9cwZOK/BiXE=",
                      "placeholder_text" : "return { 0.0f, 0.0f };"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwclPgMsaWrap7oQYk2v2nxgDWb/vs8P1/FdWy6SUTv5cwnV2mz+ZtKKT4SinJQ7rb2xZkKT1CozhDfB+/H3wO96WMo5OQ3Si4k9hM0SSdoAK"
                },
                "src/point.cpp" : {
                  "name" : "src/point.cpp",
                  "placeholders" : [
                    {
                      "offset" : 88,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "HuntingBugs",
                        "file" : "src/point.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "INFFZm5M9eNeUYNHh0poE4IjA6Qhliit+YXwuyp8KiidJgZf8F5m/TN12meGrfFZ",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 180,
                      "length" : 10,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "HuntingBugs",
                        "file" : "src/point.cpp",
                        "placeholder" : 1,
                        "is_visible" : false
                      },
                      "possible_answer" : "pelbdSGe8NgHG+byI/ljy5v/ZQLq/c9yOSKURsdX+MpMLssF9QyW3PScRwJi68X/",
                      "placeholder_text" : "/* TODO */"
                    },
                    {
                      "offset" : 283,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "HuntingBugs",
                        "file" : "src/point.cpp",
                        "placeholder" : 2,
                        "is_visible" : false
                      },
                      "possible_answer" : "SKJuYDb16PU7jYutTiTlSfCAdk8sm41OEn66k7L3tCTPDWPR+FlDsnI2q+usN94C",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "KUyAJGp9gdAtiVWanPzuwZNO2eJ5pv84Wuo6wjO1wfBdMxdfrCVrva4pftvco4l10ClR7ZZb4cextUBk6sK+pPMnWNtDfgT+Ux70ZEj14VFjYTmFd/CNjrYkftVqTUitGeFd48bQOgkOjG3XbW+gliXBwwjp/0fSQsbgQQSVsc7UfUztqBYjYF+HVnqapyBzCcaIM/6QhCQeUgvXn3C4gqLXFLK3p7MtiGz7t3GYs1dyHveJdHEq+NxhaIl8sXHcBfxxbKXmW6bnVb8PvDv8wI1S/5+XMWczBp2RjyAkEtsgIj0yQU2EhMznaCMWo6g0LQJrurJI1D+TmRK0pEaGysdlalkyh2CKh6VZyEx9BepSwwHAhH4vUeVdkW8Oqv1n0dicl3Adi4KVrqz7wEZydQ=="
                },
                "src/move.cpp" : {
                  "name" : "src/move.cpp",
                  "placeholders" : [
                    {
                      "offset" : 69,
                      "length" : 8,
                      "dependency" : {
                        "section" : "WarmUp",
                        "lesson" : "MovingOn",
                        "task" : "HuntingBugs",
                        "file" : "src/move.cpp",
                        "placeholder" : 0,
                        "is_visible" : false
                      },
                      "possible_answer" : "pROzx0hc0Q1KB+BSFFdI7Bsu+CxUFxIstTorfDkR9NE=",
                      "placeholder_text" : "position"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "DgDba3xw8RdPYu5Vpld1eY1E1In1EtrkhpergIjsa98GD9AajcxH3KPkrZtC79Z0z0WeLwhF/LNOzCk14uM0mog9a08gUS9CQUy3yToBClMpNR864AeSKRzrZlaUOFpZ"
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "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"
                },
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHrzwSvSKD1Ym+3vnw6tvy26qzNEFGg2unHA+xYV9rbG56HxUVUFY+I7kIfJHPu9vH/wGZq7M55Cfc1Lgejz45uXJprAuEQEIIsCjPCiw+c8NxYOkT0xibRuDBTR+fOqZ9RVPgKovYf3HiKKiv8oCp4frWtT2yAhDYZY0rydJHyw8+exc8cVlK0v14SCUYxHxbbSySG5zVrzJGf+Y83QBUMzB+tuY/JW6cRE5GDk7m6O8P+YhjzNS6P/c2tmVg1umPbw1hPuytld+9vqxGnKbbiLnc6rjDmmHnqGTF0PWSWwWrT5C1EtH0w3ZOzztP02mhFAsIZe9r8cG0bNbSXbJk7Vj331+uRmS5a1hQUMUBQa6cyIBgty6KYv9DpLmi2Y4LxQSYTn4aRWr1J5u96mEaOEnDbwK3l/7pT8p9Ac43p2eb95qIxD4EW8SjPiAkbtYraHZAk4z7BrSQd2aCB1IC6BgvYZWiAcy9ayedI5CPgru+gY3Z3mpBtUwNEkx5hZJOX"
                }
              },
              "description_text" : "In upcoming sections of this course, we are going \nto learn new features of the C++ language \nand continue to develop our little game. \n\nHowever, you don't have to wait for that â€“\nif you wish, you can stay longer on this step and \nplay with the code by yourself!\nEmbrace your creativity and implement in the game whatever you prefer!\n\nFor this task, we made the `main.cpp` file editable â€“\nyou can now modify and experiment with it. ",
              "description_format" : "MD",
              "task_type" : "theory"
            }
          ],
          "type" : "framework",
          "id" : 2143763503
        },
        {
          "id" : 169985449,
          "title" : "Quiz",
          "task_list" : [
            {
              "id" : 2076082187,
              "name" : "LetUsStart",
              "custom_name" : "Let's Start",
              "files" : {
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHrWPaGSY9oVq7DJjKUlpWAkL3zOmSH+RGyweb/qOtPm+3Gi5GAUjblo5s/0OxSPIujeni2lhiTJddXhBcQlgoSOXCtnWSeopOqaKXnIqa9KvgXT4OcrvB1KDjIOwsmXRoq2ihXTIciIopeVrE6ir9Lk3HDAmzbGYgNl3SZ6wz1ebE="
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "9HEd8zkvNQRoCO6WiLdN7C0ZfdApwpl0ZoXlifAfmSrGUYzv6mf/Gp4TUmHv62XSZD0oSg8tP+bwaxRGF/91PA=="
                }
              },
              "description_text" : "Let us check how well you have mastered the new material!\nAnswer a few questions and complete several coding exercises\nto consolidate what you have learned.",
              "description_format" : "MD",
              "task_type" : "theory"
            },
            {
              "choiceOptions" : [
                {
                  "text" : "int x = 0;",
                  "status" : "CORRECT"
                },
                {
                  "text" : "int y = \"abc\";",
                  "status" : "INCORRECT"
                },
                {
                  "text" : "int z;",
                  "status" : "INCORRECT"
                },
                {
                  "text" : "char c = \"abc\";",
                  "status" : "INCORRECT"
                },
                {
                  "text" : "std::string s;",
                  "status" : "CORRECT"
                },
                {
                  "text" : "bool b = true;",
                  "status" : "CORRECT"
                }
              ],
              "isMultipleChoice" : true,
              "quizHeader" : "Select options from the list:",
              "name" : "Initialization",
              "custom_name" : "Initialization",
              "files" : {
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHrjASFDpvzB3ch1Ax64ldlkBBS+GPr5JapLKaxf3NBSWBzZbFAHsVeXfR6cSUOG6ILekehspaJSR5MPZxSJVKxqeFqCHI0NsifkojgAVHvUjvJEiQVMb/R0VJJUv6vUeYr/oNEwtAZ0Z5+bFqagiOyv+pdI4rPNQtNChEmkZ++OruQUkpND3ymAHHDaq4ObHSA"
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "9HEd8zkvNQRoCO6WiLdN7A+KPOC+KfutLn0kCtYNht4="
                }
              },
              "description_text" : "Select all statements that __correctly initialize__ variables. ",
              "description_format" : "MD",
              "task_type" : "choice",
              "id" : 318975305
            },
            {
              "id" : 691340791,
              "name" : "MaxInt",
              "custom_name" : "Max Int",
              "files" : {
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHrvvoSbvylvboHEAAMGaRtfihwO7RPVOt1aUzyGIj9qTgbU/HuCpdiZGPsECxytFXwONB2Wq9naJoVA262MLnoLicVwX9g/muH5OFjX5nTp3pluC1v7nIV0ZH9885UBuAF9myRmJA75XC+BwXIzUJuVTqzs7BAlJZST2qwiQdOHSAdRf/gK/xRlyRxPc4KOoMghEamebX4eS7geBNfRstN2w2VD71jhVYlJ0UP/EDFRq3mArxGmcMLxI0Fi46FR7civHgYH4VtJlStJDzL+9LYxx+RsR51B2yVHFROErRjet8="
                },
                "src/task.cpp" : {
                  "name" : "src/task.cpp",
                  "placeholders" : [
                    {
                      "offset" : 31,
                      "length" : 9,
                      "possible_answer" : "smNbxTo+YWEVmx7D02zICY/TEZSBriY/Sp2ycS3vMUo=",
                      "placeholder_text" : "return 0;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "0Abtkmj1ccZWTq4iOHijiDqGGoaTj6DuH0w2pymy1RJqysbwOj1mpKISjdRWhFgj"
                },
                "test/test.cpp" : {
                  "name" : "test/test.cpp",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "L5ffR8J4TW5o2ausXnEBbWXCAbyleOb3cNz6GL9IHfwLzWLxwRANmm3Sw3Z6K15d0tOJ4Zkj5QUh+9I4BLlIt0L+Vhzcg3AruRewBvJARaRhYIziSoyxpdg8EK5oUXfPMy2cuERIw7uMkEpS8/AH14CnHigIJCeLoYbQ2vWznjyIt7RcYcErdBiVYDH+qvKcim1VD3o29kLTPhFvlmZOlvYGeIBtzmrcLhn6E4fpN19/8oU2BNMbp+5WK9A0QXe0sftZXVbULEsZaKWXNkix/eyyNI7FjWqLoaH7mzfTKZ6RX4L4FRYem6gNObTs46xe+uUw7K9VzY2eFETigNl2gjKYnFoki4V3FHa2YldQ/6xl4UIrqk9tTcnqTxfWBN68QnuK57EbJJp46GJOTuJ4HVZyUBkFW/pUrS3MBk933SdUjVuwcThnMzzhcC05u9MR6eiUkC/dtvTbkjK2A8bDoVhCEWPhwDe16tLHDzOpJd0adapljMy1Z5i0hJNf33+x"
                }
              },
              "description_text" : "Implement a function returning the maximum of two integers.\n\n```c++\nint maxInt(int a, int b);\n```\n\nFor example, `maxInt(-1, 5)` should return 5.\n\nTo complete this task, you might find it convenient \nto use the conditional operator described in the hint below.\n\n<div class=\"hint\">\n\nBesides the conditional `if` statement, the C++ language also has a \n[_ternary conditional operator_](https://en.cppreference.com/w/cpp/language/operator_other#Conditional_operator) \n`?:`, which can be used as an expression.\n\nThe expression `b ? t : e` evaluates to \n* `t` if `b` evaluates to `true` (or any non-zero integer value),\n* `f` if `b` evaluates to `false` (or zero integer value).\n\n</div>\n\n",
              "description_format" : "MD",
              "task_type" : "edu"
            },
            {
              "id" : 267632304,
              "name" : "SumPositive",
              "custom_name" : "Sum of Positives",
              "files" : {
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHrYbP/IRO3Y+CrCdprMl6x8YBB2vHATXhCosk8xKehaOCnEJXaBYGlhKWC+cF5rQq5h56YCCuB+lyvdcizyvT1uxly69chgRxyLK59JVbyqRqS8R7fMAjIwsk6+fJewBu/GaLOuHhS98pdih3FxGca0U+JK3aYK1i9hFedNc3A/B/MZ2erUj83hodI8R2sNtFWTWx1owWJja1507suOSrIS1odz1QCuJzPcLWxKPr0eCGwmu69RFSiYu9Tv7wNOg88Pq6MMYXd4voNYKnDfXfpbbnunIUo+JVecOP5xcI445k="
                },
                "src/task.cpp" : {
                  "name" : "src/task.cpp",
                  "placeholders" : [
                    {
                      "offset" : 45,
                      "length" : 9,
                      "possible_answer" : "oC4b/WEMLDc2osqyP73Ay54JHMHdNwvSRkdq8XER346MbyIOVtlzhmoT7LOwX3xM1MDaaKhko5TGNs5dEjcmXbBcC7rqsdj1cOjprDRavX/bZ3ynBWcYuzqHTFSIZ2eap3U7YKBLCp42xEUNxGp5ap5vl5PYLR2CLchrvhWP+KAK+NP79gSt68QY9oMcP2UrZiXGbVa8n/SuXKXC0AtS6A==",
                      "placeholder_text" : "return 0;"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "9GErMZ6eYoAo1fW6V614vZdeBXGExOAoOLUr/XCBuFa/mo7VFZ0rleeAKgydIQocNFmI/Zyu5/RK+E6q8NDvSg=="
                },
                "test/test.cpp" : {
                  "name" : "test/test.cpp",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "L5ffR8J4TW5o2ausXnEBbVads89VKfE9dHkxmqcYj7EPZ+x3rlrdZU6RgPlfWcYA4/mofRn4gvNsd19iQJDz3uZnmrukZlvu78G80XPcdNLrM1A/5r/8eeqk87sKnYFm7iYxIPuE3jQ55Po/vg0GLiFbS+lro7VJ/mcVQD3NqmHcIAVlfHSyitjm7zy+ccSn2KbocHRvpR4+tWP4IbkWdEPsx/jcyHm7JCdK15kv/rl6LNBE1lTsRwDeQgR2OUlIYZ+8sILLQ8PFZL6hSHKnMxYZt7agoWzyv4Gbu+j0cRsstF5NUc4m7RNHEickwJZqZbaGD3T4jJRLYdiVXdOl0Kpo10I5NNJH2kkDRLxZAVS9Akm8LpNE65kKuRe6anU5vfD4YrGa/aOX5rtBgJxK8J4suF1jG9hU5WoyxjdO3+uilcj5QhzywOiyD3MbQkt4mKTrQ3CsrhGqGMulsW4ir/RBh9zLoMxy2I9ZalmnUfJAjmD92ZqmbjInR9HrPHYWG93iCP/rPznbfVfBGXkTZf3CEntU70HiwpNP++NnXn0Fnm4i8CKkBRiQG1uqgGCQOq4lZJi2rtzP3uIDZSwc6s0JuXjkZd1vT+oykeTwG1hBA3YA2hjirVTFulFq7dwiIe9LaPvXrYt2C8d/2ycj4xcMUM+qzeCUD2x9+le5w/VAjOvJVSppDkHtWF4SgMDE5VF1rvxJyFfWodNqGtBFXbngKFbE9GMsU7mH9Qgkb4Rzq28DLNZcjhrmnTuZ/YlRKK5dCIYrmAuvowE0DgLLbY1YzzmCHnfKfPY83GlljWsqbuD+gMyzEL68pRTYbt/B2HFf1PH1ZWw0t9DlVRcFmWiYrAUydfsIAkolA0AY8rAvaoJAJbDH9pCrwUA14DDOE4f4+MjLXcuudMmmggT73xfaBl2Qe2KEUroDw/DXZ5/YHxyzhVVer98jQpaoBxmBe4PY6F8HZDWYoeF7z3JjgHgKrROem8L4Fl1LxASsikTVsZUtPNvqAK5OzwFfJbM6FhVyqD2E2CmhaUE5j0x9LNCW2DVUiixA14TUzDx1MaeO+lIYefd0ehB4MSlUkoSNx22e9E6mNqBgNqJmGg4o6zUHi0pS66IqEf8IE36NhJNekOE76YlzrcRYqUjrhMhHA2P6zfmH2BpxlhwhgOl7SR098XFwk19WNeELc3XBj+iKlKMe9odJC0WbSJyJVPN8Y9SBhBSK8afmlHRDGcFlv4pVMwcwk93R7xHa0QFi+arPpqUMCA7uk3v4SYY9YiMQKTwVfrj3575MaehkyxrMFa+R89IpBSD2DlaWZWczQqvCcq12/Xov72Ym3snxNKOGBpaVWnuiBMKasfmCLbE2SfosrnMIoQkeUf85iawsa55br2EuwEEgi5msB39Pd2ZAMVmYNiV6eXILQgJWeJ+1oHZ7evGXr0rpmxB3j4D8NbFYkFRBlal4i0cJwUuXoK4qbLbM5QRxIxxX5pbaU8fwWp1OuQj3dTlHQPsTRfthDZVxtdGHzqrGCVwDLHOs1pM1uTMJlL4hEvihnmRujEpTkA=="
                }
              },
              "description_text" : "Implement a function calculating the sum of non-negative integers in an array.\n\n```c++\nint sumPositive(int array[], int size);\n```\n\nThis function takes as arguments an array of integers and its size.\nYou can assume that the absolute value of all integers in the array does not \nexceed `1000` and that the size of the array is not greater than `100`.\n\nIf the array is empty or contains only negative integers, \nthen the function should return `0`.\n\nTo implement the required function, you might find useful\nthe arithmetic assignment operator described below.\n\n<div class=\"hint\">\n\nIn addition to the regular assignment operator `=`, C++ provides \n[_arithmetic assignment operators_](https://en.cppreference.com/w/cpp/language/operator_assignment): \n`+=`, `-=`, `*=`, `/=`. \nThey work as you might expect â€“ for example, the\nexpression `x += 2` is equivalent to `x = x + 2`.\n\n</div>\n",
              "description_format" : "MD",
              "task_type" : "edu"
            },
            {
              "id" : 12765597,
              "name" : "Calculator",
              "custom_name" : "Calculator",
              "files" : {
                "test/output.txt" : {
                  "name" : "test/output.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "WP5Uvc3kzuS5l4v+gWMMdhXE55kgdYqptab6qUHyFEM="
                },
                "test/input.txt" : {
                  "name" : "test/input.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "C+IbA7gI3IVEnyrn5bx2XqQN3jR0jwDlxWJdrAb7OsrvJ5ZN7rb5Tes8lFxOjy0MvTu/l4txZ0to7uCNieZacRXskQoTbGF9pzJkQSHigFDjuVxGTqNFcakQnIM8y8kG"
                },
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQmETHHGtFKz38G/nw2RsHr0+g0j0/aiz29PEzyUwPCCgNqEFI/0S/SZMlKJyg2o7YLqFFNZHM7IO16qTc2i5C7bwnCnQYCJmcq8t0tSl5bPX5Mqq3e9+9bCkao3oMoTrDgaIGrJf+VsnGRF3vOcJXRa8+bwfwx18c/1swF40pAdQtTIdEfbqgRvotLcgPJesA="
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [
                    {
                      "offset" : 56,
                      "length" : 10,
                      "possible_answer" : "3fPLk1bR1R/f14Tv3bNyt2GQ9ayz0380OxKLs1C4Hs7L/v4yRxpRg/MLN3AGCiWN8RhBoS41GF5M9vrSHKeO6I8ubD1RGLqnkVzO4jr7kj921dj7yf/cJXXIENxDrwvCC+pIn4e01DazEwuQJbAmUxOrtkaQbu++pyNbkfZOurxzxK+TcyKsq6cTWYK04O8Y+Q9RAA0zIcY/OalscpQPviD5s5hh/zB+FwmErWHPdVbuMafxIzJK/b9VZIKGJNIvLMCsy8eJNGrGWMQw1R6RmO3JtvqfVu96gAoZmGFHTTa2oyj7AmRuxSHFwVIZFSK0NmWgwCJbUEQ2qhgccF5CjDjVDM9yaayg4pQgDE7J6O92LQc5Tb9ZEsHdlNl14KC6EKYanGhBcWgnj1ewRw3QMOZ2qmNdFMCKae4vnOw+A+YvJwNGU6khtQfoYnkMgePPMSE+CyNllo1xpfg2EhrOQ77XZ77FZQmd4xBzprUbrfGWH9xmttfeYBQX/VRXp0qvB0pLH1s+QXoBruZd6dlZpI8iRyVdiGl25olmugxQkBLfzFfoiNsv571dYR/RP2KB6jkEJWA0VcNNQSIjVVcHuDMK4wxI+rG2k2hOEE0w3nnfl2rC3zdoWz6Uwk1NsW8fpdxWqSBO2n9aZyVNPeYaDVApR8M7sTTtqHgrwUz7CLB6w1F4akTs7kz8UBSMXV6rdDfGIeAmrff8vhCAw4u8rroGv5Bzi9jDK1Mj9Zl9u7lRhEPLvHes/22ze6+fbSYIs2Ixsb4363Y2mLcyMnpQihkYyQvuXnxtGZKQgo2XePaBVM5FguLYvIvGCzj970rd34Q9u++74lkCEysSgpvUA/0ZGJr6hWHAjqONU+0SGabNdIU5HodnqXaD/7MtNU/zkCyfAZKsUK3Pc37wG7s4bLFBlm+Tu4W1s/YEWPNl5VGp9d7oZUNifpmDD/3xKFPAYkC0DBwkSegIS0wtXUgifEJTIXsiawIDzQ9/D0LiKra2qw5ndjzZqb0BdmnUGFBPxinj7ymIM6aOpxb/8ahA3z3LablCnZO7IplkCilYge5Ni8U+RO4BBDw39NyeMUiLCE74FDrT/dB4sPglM3NY/eRCI9c0aV9wXKPJDaU5Njc=",
                      "placeholder_text" : "/* TODO */"
                    }
                  ],
                  "is_visible" : true,
                  "text" : "G1EDRCp8K72w6UaV30vFpI1uJtNYv2m0HRLE7pSiNzGrSEVGYefK3+wt4zhek5Wd09YTBkY2A3dJmabRZR57/2K1Ewn1sbbit4N7yvu2TQ6GtKAII14vxn44PE9klPQJ"
                }
              },
              "description_text" : "Implement a simple console calculator app. \nIt should read the user's command from the console, execute it, \nand print the result back to the user. \nThe calculator should support the following commands:\n* `sum n m` â€“ summation of two numbers `n` and `m`;\n* `sub n m` â€“ subtraction of `m` from `n`;\n* `mul n m` â€“ multiplication of two numbers `n` and `m`;\n* `div n m` â€“ integer division of `n` by `m`;\n* `exit` â€“ a special command to quit the calculator app. \n\nBoth `n` and `m` stand for integer numbers; \nyou can assume that these integers lie within \nthe range `-10000 ... 10000`.\n\nAn example run of your application should look like this:\n\n* the user enters a command\n\n```c++\nmul 3 4\n```\n\n* the app prints the result\n\n```c++\n12\n```\n\n* the user enters the next command\n\n```c++\nsum -1 12\n```\n\n* the app prints the result\n\n```c++\n11\n```\n\n* finally, the user enters the command to quit\n\n```c++\nexit\n```\n\n* and the app should terminate in response.\n\nIn the case when the user provides an incorrect command, \nthe app should politely respond and print the following message:\n\n```c++\nSorry, could not understand your command\n```\n\nThen it should wait for the next command.\n\nFor this task you might find useful the information \nabout the `break` and `continue` statements in C++ provided in the hint below.\n\n<div class=\"hint\">\n\nThe `break` and `continue` statements allow you to \nexit from a loop early, similar to how you would exit a \nfunction early using the `return` statement.\n\nWhen the execution reaches the `break` \n[statement](https://en.cppreference.com/w/cpp/language/break), \nit exits the nearest innermost loop statement (either `for` or `while`):\n\n```c++\nfor (int i = 1; i <= 4; ++i) {\n    if (i > 2) {\n        break;\n    }\n    std::cout << i << \" \";\n}\n// prints 1 2\n```\n\nWhen the execution reaches the `continue` \n[statement](https://en.cppreference.com/w/cpp/language/continue), \nit skips the rest of the nearest innermost loop body\nand starts to execute the next iteration of the said loop\n(checking the loop condition first).\n\n```c++\nfor (int i = 1; i <= 4; ++i) {\n    if (i == 2) {\n        continue;\n    }\n    std::cout << i << \" \";\n}\n// prints 1 3 4\n```\n\n</div>",
              "description_format" : "MD",
              "task_type" : "output"
            },
            {
              "id" : 952493909,
              "name" : "Survey",
              "files" : {
                "CMakeLists.txt" : {
                  "name" : "CMakeLists.txt",
                  "placeholders" : [ ],
                  "is_visible" : false,
                  "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQnFVPN1Indv7xnm/qkbv/mmMT+ZheJiJyNJOS5dxKNCvMlKsA/lEUVxVH3TytCwHdtzDekt4MUnQbxZ6cyclmorOCVWXnw0GRY2QthkzbQ3Sj48XbuipIXuIThbdBEKWf3GVeagSgxPuzyy5bnrMQJIdLAYPF9jjASulvfZtnG+ojSAGunW3OgtrTj21BhFfnOhEuK91CltSJ/LuHy0fAyr3MnDvIYCOmQ0LnVQmfJf4ZafhX6id+4mAPVxtrdR/Na0aT7M0PUoAi2H9Ou69duo7+b1PMCI9yIO4ecsxG/4gHvjjJFTuLAjQZmOmbd4JynlaVg48GCuH7r5BrxR8oIEXeBIJd5qSmIF3dKnjckFkbRPr4cRK6sAVztSsG+J6g="
                },
                "src/main.cpp" : {
                  "name" : "src/main.cpp",
                  "placeholders" : [ ],
                  "is_visible" : true,
                  "text" : "9HEd8zkvNQRoCO6WiLdN7A+KPOC+KfutLn0kCtYNht4="
                }
              },
              "description_text" : "## Survey\n\nThank you for taking our C++ Basics course! We would really appreciate it if you could take a few minutes to answer our survey. Your feedback will help us improve this and next parts of the course and make them more relevant for future students. The survey is anonymous and should take no more than 5 minutes to complete.\nhttps://surveys.jetbrains.com/s3/cpp-basics-feedback-survey\n\nStay tuned for more parts of our course coming soon!",
              "description_format" : "MD",
              "task_type" : "theory"
            }
          ],
          "type" : "lesson"
        }
      ],
      "type" : "section"
    }
  ],
  "additional_files" : [
    {
      "name" : "cmake/sfml.cmake",
      "is_visible" : true,
      "text" : "vUr74waz1hOFfV9emYttc9HT08yZ5cpYIz7S+bMOG7gkKW1E0efIe2GmCTcclbFTmjLmodCzP3BwK1gU5GgVTc6UE0qu+J1QlUuo+U1NgflxJIoJ1G8A0XT39OyW+WIm9DVESNTr6MpydASttGzoKpS/9G01IHerUd9yH53qyquGBmCDPcD81ZoxDeUlbKaYr/ebSuezJBhhGgHZ7ZhpLuK1AJ3RO5DudqvGX8x8SHtIpJ/ov0v9ZbbM3fmDzVTSzsCn0YuJRxbQJngYTUlbdUlGQgqvgq+jcS0aXo4/Yq/C5lmKYEdR9AsxDyIKJFT7Qea3hgkG1ZpvuOXrnBAzbI+rIZZXkcf1mr+ZwywwvLwDk9qitRE1SZhFmY3KzGZoy/F6IIdPIHmQ48mTnF62L2iOqKP6jvqflIZP74j/Rp0HrXQ2RY6Yly7/ib8M/uRrkbSZVL//KD+rIX5QshWJvnFUWl6qZC/WRY37JYR+OGbmvhF42wAVtoLMfVG1VPtj94cuxzUxJ0CnxBvlnTwPgY6M4d496OQH6ztTI35Ndgj5/g9JsqTzVo7KJ9gkSHp1UGvqhQizP/mTxnby9Zmsq52giPy1+fVKH02Yn/pmacz4HNxr55p+5zeGSjehmA5C35DUcrIMzaoGNmE7jSGDHE9RuWX2bXLjGv4pl9Ajw5GsZgdf4UDuhvlHaXd6YQE2oQpHIn7d/V/JL9VAF5O/64vn7DutzYQ+Ll19PPHhTZHhPgA4V+aGUoIZn6sje0XrkEPzz8Iz/sCn1gbL2X8MHnzyqGQaKQg0hlXApW4Ro+RJkHlIgVZ84AKJ4/SWNok6xtg43bet+pFJ0jyl1oIu/ZSQT0HrKFy+SRkUYDZImPX2vDONH0LeMQUoS9VbPRqacdB+l04plToU4jmoGL/nNbQLsNGf3rMWG2PEEVfkKZxEXmdUSkRByfJy89i7odA9j35uiZ+boSH8GcvDYP3UCtxIZ4rU5wZxPS30iw/qnk73RoZWw7Es/II0XVQ45aaJFZ1hhvnVOdqrWghIjNkoCEVF6BOKAj1N/ulGQKf9bNP3UzfqtKBdS0qHKx+z5Vh4HdWeWcLpWelMoVkW4CjATBBqI4YgJGM9Tdnh7VxH7j7/arIT3T7yE3jO9PWn9weqSDRz/yeD2+X4QYAlyLeYvgPGA4XaJ8IiG9CJNNTTOpuF2mLIB7hWm09fNEdy0+0RPYQpQSr6QVczwVRVWjOw1VkBYhm5dBL5KTxqOtFrHr6Ut8tZGBZyFYTzNG1djQT7hh8SLCpkbc0R3s8JhVrvdQ=="
    },
    {
      "name" : "cmake/utils.cmake",
      "is_visible" : true,
      "text" : "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"
    },
    {
      "name" : "cmake/googletest.cmake",
      "is_visible" : true,
      "text" : "Lrz9YgS3PVHmx+7En3hTroOXEmjILhQMW7KeW3MJcukGYBwOFQM4XggT9O2b4QXOiOmX0QP8Du4Hf7qkXwpm+SrROF+/SN+c5uctNNkIO1J0pUZhj+6BHfUsy280toD5DNif5sxahyPXjMBJq8PRgKAMKxAtHbwjr4i5grgIZWmIjMmKazoaRNg/gwUe8TsXvBX9VVK00F71QKPJuYR8EitvYmgFSvcAKjc2/JSni1jf9l2hbDxT5aEoK3aEs+kFpOGa9RoYdJRwXM4LKfpAplL89qGa9WDx6MEsYJDoODQt3iYPBvU8/Rabucmxv+fJcLRHhlSWdhbJrKbT1WwQMyM4e4w1XN9jkm1MfGZWbqfkz1T03bpTfrxd3/NrqVVJnGjut/93YzfdDU0NrIG0ggfY/A0TppPGTcsm8PBUkhx1GDFp2jAC6NL0CfnAcTv7957KCf4a/U5MX8HT0L+OqI0BGMnuh22O1d6n2nCTcVD49p8/U8Y/7JSHfTs7ebrK0pApu+w/f9a8QxfkzMaT7Vq4hZrgrHFTjIvqL1V6niAAa5mr/hFvEUXCZfeFe0mxfInkYOdJl14W4aWthQgwnoXmYmTzvM24EmeHrCrByHiAw0ztJptKfBvdjfdKkl50ZJK1D3dT2AC4oqHu2odB0o8oXpzGuH/2SguIXmw0fqrbB12lPlz2iViQQwdzLdCPSFPp7v5SuCFVm5nlcTrrZfH4MWW3PlPOhdTxD2SF0MUyYW0qewn7fDGcJYLdkZG7f4Iiyt70lDNypjQ+r/+WyYtlYzVOAyLSD7oYrcbi4E285ox/T8ja9+/hLXZE8x5804PkFJlW4FE7h9CJq/Hgev4tnWLniZpOziJt3tpmbzlLttRyoubBrt0rMVUbSQPLLh/1Psjvd7itwBCloPprKDZ3bHPiS3w4ILCiWuJ55oU56t1timonuhMWK8DUz/qibNFwJueaIpiA/R304BvTqd08fz3Icu3ogynnNm9b7iIe/gx9BUH9lbUAbKHPRUE77XTSSeEONhsQzvoXEChbuzq6Gd0AQsQQAHLpvvxuCprzI0Eb0EQtJd75XVnXvke5zrTloUu0TwpLsZMtMuy82A=="
    },
    {
      "name" : "cmake/sfml-download.cmake",
      "is_visible" : true,
      "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oQXE/vXjW8EDVQKPzofO4OoAb0/FhLRFeAlxCBnQVS2Ag3Z9z15AWqJoSdlznYdg8Wx3ve3L7lJj5pDU02FbR51VjgKDf88cai6Pnfyrz9BZUZU7ocxfP1vVkqInoG3/3uapR4nwp22sMOT81E5OYcCspXFmBc3e6CW82nqZ7p2INB3NYMZrjfkvP5+mvvxs/UpKfSBhAlJQvRKbWPJvOxBt0+E/xSwlT4lExeAm4lMA1Ea7jc6lnUy0QMCqvsxdEvlG+tZkP435r8pAnSPHZwGxTw1l+V990z1g2ZwR9Coxvjuk5E/vOwb8TL+mxa89BOxKFvADEFpwtDJBuBExMyTGDsNTgC5ch8h3zh8Lp2R/z/vb6sdqljKPyw8rw5H75Wr/vn65dEznfgSWMcgz6jlNQ6pD/50S82BKs5cBP8LQBWBrKwfLiMm2P6SvsWQC5NWKalNtuGmJGpu4QYOVynIlI+DS8ULN1WZYemv9wnjFhmLwLcRGTqj8Mq0mReQqi4QG2BoKAfMjC+6XClWwVe8gNTtxRXjmTcQynfTaBayrA=="
    },
    {
      "name" : "cmake/googletest-download.cmake",
      "is_visible" : true,
      "text" : "SFQsvbCzAxH06IHZ31X7VYJiXt1G4dXOtGy1KgiP+oScfj8RtwKis9ZtQiKlLd08oZboZ3RtOxdHLPiGh4J6s2GBDUtxqtP642m+D3j2n0nvhIuXCv452UIAzuLse3nfd9/sFIwjZIOq4DhYK2yp0Sa6yRk0NdJr0i/MAwk2osxjtVsF7JOEcxzgYEfjK3fJFZJlyWzoxW5dVLVxr4PNUDG1/SoIP07Yj+m8pyrdqvzsQyXTN+4qchl9wxMLtRb2N2ox6sac5NUgtnvCZqDoMVM3xww47fUQcE/eQvdtuZw6iUPkFq200p+SVOS1iCs1fYCB7I6lo6vG4PEJ7VvbtzYC4R6cHy5vMNbzzez+sDM0hWIcovMNVkjj7WsofPk/ghZ2bktA2jUoD35ZCCH2uLTM2XbsmO6uq0ggYCur6BwjwNhVCKLad1TCpaLoBXkAXW6nxWt53DcO4Um3+6RIr+PsIgIFcCRTTjRFyq9pdHX1tmRXn+SP2/Pc17n4hdKrkk/q1ntFwU+jbmmUxAvOx/cB+c/4mXpPjx8OnF5cWgWKpQde9MnWGipZPxjyJHiHvj6aiGxt4MOh1POHOlY+Ev1raIKhQQHb0HYlunqP8zBKZojXFNClq7J7ndcH3fmKjAGhaONd1337J4LuW1ItNQ=="
    },
    {
      "name" : "WarmUp/MovingOn/include/scene.hpp",
      "is_visible" : true,
      "text" : "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"
    },
    {
      "name" : "WarmUp/MovingOn/include/testing.hpp",
      "is_visible" : true,
      "text" : "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"
    },
    {
      "name" : "WarmUp/MovingOn/resources/star.png",
      "is_visible" : true,
      "text" : "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"
    },
    {
      "name" : "WarmUp/MovingOn/resources/space.png",
      "is_visible" : true,
      "text" : "mCVHSPy71zgCjAiYldu4zKiyj550Ioekl0Fzkf36YkLbF2bC0Bt8XtmF+WadL8pGvdkyqZV67O8fUsyUXHUFbYN/SLZlWvqf+GijwbVFG4YQliAXAwBoK+fapUdoiF2p3KQ2ATXoh4GTybU3KUtyhGAu6nPcbtZuhgAbuAvILNfhv02Zxvas3IpEdMEWYwJ3tuIbp6LnSNV6JZIgB84brUWNSzQ1FanBUvUzb9wKGoT2Qtc3kWfkKrwZLJGvMbb5z2ND3K7HxPnkpZVjiiRJBhUihdEDHDa5Zfyey9Motqsj9B+p0iYiLse+CDEJth+atJivdJ8a6PJBYUX0C9asB5n4QayoyCz16a8iz4rD3KvbCA9qUyUHcEV6j8IYmbVKMv1G1WBLX2DGf/SlhuIlXtZhkeeLcYJVToQJcxWA1ZsO7T3zvARasQW7r/R4cRMv929uKZ/klgwljvrY+X924kHo/UyyjuRas0pviUeUvPSLSlSTajh0jFruza0nI/recP7sscjYSEw5gbRxfRyDkymeWqz3YHlic6E3R1SnblpMI+567eP9YV18L92hllR67u7h7xRQN0hkQ9DDZ0yPIENBZA0X0U9bZDR8x1oCb2im1/xByqKzZw7jMTwVEYDj/98nq3PHye1hErsTEwYs96BBMnDxHeKDiyuR1PNnXxdiHnLSA3IYArlRLBEPpYxBr2VIJplmdvCLZ5UdBW19p0/5wcxL3k3slFpDUn+A5n5ID8YR93odE/TP+1CwzYsWSpxG2P0BcBM+nCmSqNivvCmDFpqd5kMc7WgzX7g+38vNjvE8o0cVFVFnmwlUqUQD5w4poe5X9g9FY1Hmq68uhQFwRytvxisT1QSng5miKAA3Xhan1TniNGvU48vVDY1Qw/YGQ12z86i4a48AC50Jnx4HHrQPmFhVhzCLKrQJxcwW7jULJjGog6uDxnRypC6lpuYf5Ap7JdfLHVVQsCeDGWYvkfd/B0RvlsmSjSZsBwZ7oyG80yIGXhdGZBxQpmiAwQR9l7DbOeXFXO2TAU0KO/AnH/Quw5mmkTGQLJAjJyMxH9oLmEIS8ChH1+ThUzjKX7J9BF1w9jrqwH+lEX43DeUkj2mMwpA5OphP8FysQcXzgSfFrAAGQQX0mvwJr0E80U/W6uqGMY2kSUWp20/IHV5uX6ZeUb+inHt8TntIQEW0rKNA0RqdltY/RRUF8doL7jITbcYnK/SXoi5lxT/9oKsufTgkLfaYaan65mIP6qcKassrmi19wUJrUMW6XkOL"
    },
    {
      "name" : "WarmUp/MovingOn/resources/planet.png",
      "is_visible" : true,
      "text" : ""
    },
    {
      "name" : "WarmUp/MovingOn/resources/starConcerned.png",
      "is_visible" : true,
      "text" : "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"
    },
    {
      "name" : "LICENSE",
      "is_visible" : true,
      "text" : "Sn8rSWZVvF0cMeRgRXyfvGZXubc/AJ5fIgNfsfSsRK69/zlpZOVaR8oMuH85/fe7M7WwbZBV8A5muXxSHUnAW0bdIwXJcB/Nv8ll2Vu7490cX7S4qHRLNs8qZQ4fgujW7QObPlJxiu/SQayr/Mm6SXU9sK6bgk+qJ4dNml7oGAjbxav3sgWsOTKHscjLMt9B3YRhhtAQ1HZkkKswSteO2WRJSslPq4YOULGmyFh2syjYMIBf9L8VEFPe5ULPtW58iyJKym6GQmNRSnRlOPK2KomCJk838HEgZw/P4SfTx1/hEMTCMENxEuaO5viwm82sfdFkc25lkPeOn56PJSVVi5l9YzD2FZXlOjH9NJkkj3NZBsBnfqiY2MIJXnyF3csWj4WfJt+8yRbGgLKEAY4t2SCnTyHUCAAom6GlBbLBa2GHfyaK0MWWXHRKWK3Xp2iWOAy6adY/GRJDUQI+bOsV7Zbj9na4QyAJFwjvJNzEoBV8xgwDPlZdhsCIaK9KR5rxTJV+R5C8IxjJTuBlL6t1FC3zr5u8NE5Vm4Esjl08NRSK57N5Y4NsMwdtx+XsoPfRuF3+Ft1LVRE+HbCMCyuDmQjcNe/pzXKg1hMOI52BL4lnUwe8yq2WZnICwTp26qG3+6wyPASkYez9+s2h+SrImupQXLtAIdbbzpjvAJG63HcWi0KM0/obLB20OPhbk0DkAjGE2KahPwB5Z4ch974qd1/5HII3fgY3mgNMrcOGIY/u2/4NZ30/kV1usQSElVddbTOWoIduL0iA+y4q1reDLWoVWYbPLUnyNhNkl4APDUnPwfOnVXiRtzfc6bLqdCq1ibc+gyz8ZF+1KnSKTNiQcasexJWkVSp6ipIqzDO0aJA3bbx8e9mgsDwKSvxJSBIfKW0gY9ZlI8OCxYqMChpr7riJtc6aQPXfThtDY8Eh0hZsIhxNnXN7itgHfudB4zrI+SDuEj75MpWLg30AWCb+SmLH29e/OcKDk1JqjrLRj/ESPvUdqWzeuCBlRknpn3qV19oRK63oM50BkpMFoz3Sy3x0i5Za7agzDTsvmxGunXdr0MJKWr3lIGMxsl+XJIBmp9Q/7eAzpC79cHHsT1e8ByqUKnxQfB78Tecfd5L68XHum3LTIqEF96Xd5iBfm7gixpY8ilUihx3WwSukH9+y/+2Lwv1CQ9AKXLQ2HxcVohWYAvGljzyY0kxgqT0MKgF8mIL+29EAdsD2hQDUTnGnvvXQVHFX3gYvYsM5Imd/z6MT4o1Na06TzHI4Xqh37oGCvEgCUszPLUC8JUxYfUDEpxvFdcOvnrrFXWb4idvv6TMxnqz8cpJxEW0JNwJFDFV8D11wbTmrgsVghEnldoMYgwfk+inHqCSIwbEReOZerf6+gkTzox2QZhFMncZfgOxBbmgH1yZk5DK2YuWzcvMwCQ=="
    },
    {
      "name" : "README.md",
      "is_visible" : true,
      "text" : "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"
    },
    {
      "name" : "CMakeLists.txt",
      "is_visible" : true,
      "text" : "ACMXN6SH4gEAFwrRMS4MkvSEMEnVYiljxuVyhMEcwyPdLZ45+liSIXcqxC19RLGArK7pCRQjEeWbqabmHsSwtf4wSrUyoHH7RlGk5MGZV7MtnpzIthU7zy5NAn6V1kUu5Z+CzlPjej/He3jO5UUoCxzvx7gWi/0L/E/qV24a0pM8fYidhWE0dAZb/74zF+p8pxkTIZdFSAlEiiHIkc+xpI6b8BwNS8sEGB7UK85yNB4r4Bphf6uuErQDcR0DYFok/bLjsxvAxpmxjvPzD/Z5uQkZ3AE9j29hNl+ZNRhqfuO6/7pGeXQMpknB//VjnyTzOu5Y5WjLTDHb47kWgts/l+OW5aI+6h/KvDR4RZ8WqCWSSs0XOw0Um5KRND/JgmOXqt94XY4B3EaickFp3TyVbQgjO2Wu3Gwa2jylgrE32KgQI24dMD0kVm9VLj1NdwQuG6lO5VMm2X/Ti31RBS5Eit9eV3nW6wzjR0U9MtwCuBXz8+ssQhK1pjH/EdL/mXszFEP3SrEjlLND0UI8JkEZtotUbnldvOHY+Wo32GfC8P5GaOMbKoyT4d/eZxH8AIK22hLyA/cWPCwTe7yFafFAm6/kIKbtMBIckq6m82VVH06vYOOMUXcuciM7NZ9mFWLOQsjZ/lXjtbIlhE9Bo2n+1rFQV/hrA2GjJlDIoSO+0jzubXMtkxpm27C0J/Zofrx5M7FyCYox/8Z7p1kAaIkzuNK+oFLlpnliLZ7O8bUF6eVdh1ETwm8r/nKixquRG/e4VBPwoG1nAebnt6Dk4OvaQhP7QIwTLfmI6Hvroxmc1UkRKcssrBJRSgJZnP3wit4HkTBI0CgJXSIwLT6FKsS/HdKInleYDBju63TCe3kfhKLVcX9YvnPB9B3rcLSzvJmq1KgBqZaTIqhCvsrUBo2oJ0J3kxp373z5f21tEXNDnklmxauI1DU5OnqpDGnITfB0G6zfvGzlG6E7Np5ffvvPpkWJPBwf6trIwnNlv8qkzlCas37wdLoMA3rj5YyYFbrlwv2RZwlF94XzrUfgrapoM8n3mOtdWdD4GQKiu/gMvtfD4rzpKMtKjEg+rkheKp0X7lGeJfmJ/wS5T0dYcUEy6WVbdD5rs2h7S65QgVM4qHANlqTkv/tcBKUqSBtrNqoktSnFXib577X6vKpXptp6dEWCaZXM4VBUK6Hsw/eBtvaXG2QeLK1wG1F2VXDzW193+RcsFibUSWDyDyUUrxTW7txmA0mtoDqSLYm+pdmpEZKXQTMyBV/lPwRSxwqvYc8EbCiRcvRAw15vKK6X6314HB5ZjsybsdiSZPJfW/b7nbAQUDVOU/u3epS7/SMCxhc66AAYjneFnJf4CIW/9NNsWmA6fWzs60TFx/yxLvqlUDDXWYNw9SrKxi7PRyDnPbUGKVGg3IsJjkk6Cfpqek4qp2/DF1l7Zydnv94AUIfLTwZ1N97GGvy/bAdMQJ9TW07AImhyYiVth76ypo6O9iHv/zZKxKqGdxQtWGxL76FTTy2om2AoC9azygTP5h3clqeug+TZYnLE2deUGUvQH8dq7UxhmungsQDiotb3dq8bE7xa5ekgELHGQsoVRIfmqxLRaFmIPFdZQVy7Bp5u2qokjJMQRTVSHd55+8sre+mJ1gFMp/5Ml7n5ekPapORp3W/0Jk3vizQjxBK+tyALjaIZB04jOxqEaYNuoRkW+foWGi4vwxkHzxoruudTwzs8ehXUEyn88hU/Orl/kvWe9ElD4yV4mXwhVl788zPJQ7Gz0uBfzr1+aOHXnc2WXaJLbraPnGwxmivls6z/q9cagZkbHkxEqm7WAkmZHziy7iOzI+3pAAEULS/PQD/H/6q8r89pMyEFENSVFjTIcLFpzWnFg3WvLXwcc48p8GITr0W721gXjvLgpQfD6p+8fBeaLrtXgovBc+Sx9st4hIU62PV7IK2BnKDD+91DIFUIsuSj/wQ="
    }
  ],
  "version" : 14,
  "edu_plugin_version" : "2022.12-2022.3-161"
}